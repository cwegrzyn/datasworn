{
  "description": "Root object for *Ironsworn* game data.",
  "type": "object",
  "properties": {
    "Encounters": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/EncounterNatureClassicInfo"
      },
      "defaultProperties": [],
      "title": "Encounters"
    },
    "Setting truths": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/TruthClassic" },
      "defaultProperties": [],
      "title": "Setting truths"
    },
    "Delve site domains": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/DelveSiteDomain" },
      "defaultProperties": [],
      "title": "Delve site domains"
    },
    "Delve site themes": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/DelveSiteTheme" },
      "defaultProperties": [],
      "title": "Delve site themes"
    },
    "Ironlands regions": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/IronlandsRegion" },
      "defaultProperties": [],
      "title": "Ironlands regions"
    },
    "Rarities": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/DelveRarity" },
      "defaultProperties": [],
      "title": "Rarities"
    },
    "$schema": { "type": "string", "title": "$schema" },
    "Asset types": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/AssetType" },
      "defaultProperties": [],
      "title": "Asset types"
    },
    "Move categories": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/MoveCategory" },
      "defaultProperties": [],
      "title": "Move categories"
    },
    "Oracle sets": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/OracleSet" },
      "defaultProperties": [],
      "title": "Oracle sets"
    }
  },
  "defaultProperties": [],
  "additionalProperties": false,
  "required": [
    "Asset types",
    "Delve site domains",
    "Delve site themes",
    "Encounters",
    "Ironlands regions",
    "Move categories",
    "Oracle sets",
    "Rarities",
    "Setting truths"
  ],
  "definitions": {
    "EncounterNatureClassicInfo": {
      "description": "Represents the metadata describing an *Ironsworn* encounter's nature; used as a category to contain all Encounters of that type.",
      "title": "EncounterNatureClassicInfo",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^ironsworn/encounters/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Encounters": {
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/EncounterClassic" },
          "defaultProperties": [],
          "title": "Encounters"
        },
        "Title": {
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "Short": { "$ref": "#/definitions/NatureKey", "title": "Short" }
          },
          "required": ["Short"],
          "title": "Title"
        },
        "Description": {
          "description": "A user-facing markdown description of the item, consisting of one or more paragraphs.",
          "type": "string",
          "title": "Description"
        },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Display": {
          "$ref": "#/definitions/Display",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Summary": {
          "description": "A user-facing markdown summary of the item. Summary is shorter than {@link HasDescription| Description}, when they're both present.",
          "type": "string",
          "title": "Summary"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Description",
        "Display",
        "Encounters",
        "Source",
        "Summary",
        "Title"
      ]
    },
    "EncounterClassic": {
      "description": "Represents an *Ironsworn* Encounter entry.",
      "title": "EncounterClassic",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/encounters/[a-z_-]+/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Nature": {
          "$ref": "#/definitions/EncounterNatureClassic",
          "title": "Nature"
        },
        "Your truth": {
          "description": "Ironsworn, p. 135: \"Some NPCs include a question for you to answer. This is an opportunity to customize the NPC to your vision of the Ironlands. You can do this as you define your world or discover through play. Truths may represent an absolute fact, or merely something the people of your world believe.\"\n\nOnly present in Ironsworn encounters.",
          "type": "string",
          "title": "Your truth"
        },
        "Summary": {
          "description": "A user-facing markdown summary of the item. Summary is shorter than {@link HasDescription| Description}, when they're both present.",
          "type": "string",
          "title": "Summary"
        },
        "Features": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Features"
        },
        "Drives": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Drives"
        },
        "Tactics": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Tactics"
        },
        "Quest starter": {
          "description": "A markdown string describing the quest starter associated with this item.",
          "type": "string",
          "title": "Quest starter"
        },
        "Display": {
          "$ref": "#/definitions/Display",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Tags": {
          "description": "Arbitrary strings tags that describe optional metadata that doesn't fit in other properties.",
          "type": "array",
          "items": { "type": "string", "enum": ["vehicle"] },
          "title": "Tags"
        },
        "Rank": { "$ref": "#/definitions/ChallengeRank", "title": "Rank" },
        "Description": {
          "description": "A user-facing markdown description of the item, consisting of one or more paragraphs.",
          "type": "string",
          "title": "Description"
        },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Title": { "$ref": "#/definitions/Title", "title": "Title" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Description",
        "Display",
        "Drives",
        "Features",
        "Nature",
        "Quest starter",
        "Rank",
        "Source",
        "Tactics",
        "Title"
      ]
    },
    "EncounterNatureClassic": {
      "title": "EncounterNatureClassic",
      "enum": [
        "Ironlander",
        "animal",
        "anomaly",
        "beast",
        "firstborn",
        "horror"
      ],
      "type": "string"
    },
    "Display": {
      "description": "Interface for data relevant to an item's display/rendering.",
      "title": "Display",
      "type": "object",
      "properties": {
        "Icon": {
          "description": "A URL pointing to a single SVG icon.",
          "pattern": "^img/vector/[A-z-_0-9/]+\\.svg$",
          "type": "string",
          "title": "Icon"
        },
        "Images": {
          "description": "An array of URLs pointing to one or more WEBP images.",
          "pattern": "^img/raster/[A-z-_0-9/]+\\.webp$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Images"
        },
        "Color": {
          "description": "A hex color associated with this item, for use as e.g. an accent color in its display.",
          "pattern": "^#[A-f0-9][A-f0-9][A-f0-9][A-f0-9][A-f0-9][A-f0-9]$",
          "type": "string",
          "title": "Color"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "ChallengeRank": {
      "description": "Enumerates challenge ranks.",
      "title": "ChallengeRank",
      "enum": [1, 2, 3, 4, 5],
      "type": "number"
    },
    "Source": {
      "description": "Interface representing data on this item's source. For 'canonical' content, this is usually a book with numbered pages, but it might also be a link to a web site.",
      "title": "Source",
      "type": "object",
      "properties": {
        "Title": {
          "description": "The title of the source.\n\nFor 'canonical' content, use one of the enumerated `SourceTitle` strings.\n\nFor 3rd-party content (including homebrew) that's been released as part of a titled document, use the title of that document (e.g. \"Steelforged\", \"Ironsmith\").\n\nIf the source has no particular title (for instance, it's a single custom element in a VTT implementation), use \"Custom\".",
          "type": "string",
          "title": "Title"
        },
        "Authors": {
          "description": "The author(s) of this item. For 'canonical' content, this one's usually pretty obvious ðŸ˜‰ However, it's included so that homebrew content can use the same interface/schema.",
          "default": ["Shawn Tomkin"],
          "type": "array",
          "items": { "type": "string" },
          "title": "Authors"
        },
        "Date": {
          "description": "The 6-number date string formatted as `MMDDYY`. Relevant only during Starforged development; it will be deprecated once the game is released.",
          "pattern": "^(0[1-9]|1[0-2])([0-2][1-9]|3[0-1])([0-9][0-9])$",
          "type": "string",
          "title": "Date"
        },
        "Page": {
          "description": "The page on which the item appears most prominently in the source material (if it's in a format that uses page numbers).",
          "type": "integer",
          "title": "Page"
        },
        "Url": {
          "description": "The URL where the source material is available.",
          "pattern": "^https?://.*$",
          "type": "string",
          "title": "Url"
        },
        "License": {
          "$ref": "#/definitions/License",
          "description": "The URL pointing to the license which this content falls under.",
          "title": "License"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Authors", "License", "Title"]
    },
    "License": {
      "title": "License",
      "enum": [
        "None",
        "https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "https://creativecommons.org/licenses/by-sa/4.0/"
      ],
      "type": "string"
    },
    "Title": {
      "title": "Title",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+/title$",
          "type": "string",
          "title": "$id"
        },
        "Canonical": {
          "description": "The title of this item, which here is defined as the associated header text *exactly* as it appears on the page.\n\nFor items that represent a single table column, this is the label that appears at the top of the column.\n\nUse this title if you want high fidelity to the book. For most interactive UX, it's recommended to use {@link Title.Standard} instead.",
          "pattern": "^[A-Z][a-zâ€™ \\(\\)-]+$",
          "type": "string",
          "title": "Canonical"
        },
        "Standard": {
          "description": "The recommended title for most implementations.\n\nThis is usually the same as the canonical title, but editorializes a bit by trimming out things like \"Oracle 15\" in some Ironsworn oracles (because *nobody* remembers it as \"Oracle 15\").\n\nIf you need the shortest possible name, see {@link Title.Short} instead.",
          "pattern": "^[A-Z][a-zâ€™ -]+$",
          "type": "string",
          "title": "Standard"
        },
        "Short": {
          "description": "The shortest title for this item that remains distinct amongst its siblings.\n\nUnless you're very pressed for space, most UX should use {@link Title.Standard} instead.",
          "pattern": "^[A-Z][a-z -]+$",
          "type": "string",
          "title": "Short"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Canonical", "Short", "Standard"]
    },
    "NatureKey": {
      "title": "NatureKey",
      "enum": [
        "Animal",
        "Anomaly",
        "Beast",
        "Firstborn",
        "Horror",
        "Ironlander"
      ],
      "type": "string"
    },
    "TruthClassic": {
      "title": "TruthClassic",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^ironsworn/setting_truths/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Options": {
          "type": "array",
          "items": { "$ref": "#/definitions/TruthOptionClassic" },
          "title": "Options"
        },
        "Title": { "$ref": "#/definitions/TitleCaseTitle", "title": "Title" },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Options", "Source", "Title"]
    },
    "TruthOptionClassic": {
      "title": "TruthOptionClassic",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^ironsworn/setting_truths/[a-z_-]+/[1-3]$",
          "type": "string",
          "title": "$id"
        },
        "Description": {
          "description": "A user-facing markdown description of the item, consisting of one or more paragraphs.",
          "type": "string",
          "title": "Description"
        },
        "Quest starter": {
          "description": "A markdown string describing the quest starter associated with this item.",
          "type": "string",
          "title": "Quest starter"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Description", "Quest starter"]
    },
    "TitleCaseTitle": {
      "title": "TitleCaseTitle",
      "type": "object",
      "properties": {
        "Canonical": {
          "description": "The title of this item, which here is defined as the associated header text *exactly* as it appears on the page.\n\nFor items that represent a single table column, this is the label that appears at the top of the column.\n\nUse this title if you want high fidelity to the book. For most interactive UX, it's recommended to use {@link Title.Standard} instead.",
          "pattern": "^[A-Z][A-z \\(\\)-â€™]+$",
          "type": "string",
          "title": "Canonical"
        },
        "Standard": {
          "description": "The recommended title for most implementations.\n\nThis is usually the same as the canonical title, but editorializes a bit by trimming out things like \"Oracle 15\" in some Ironsworn oracles (because *nobody* remembers it as \"Oracle 15\").\n\nIf you need the shortest possible name, see {@link Title.Short} instead.",
          "pattern": "^[A-Z][A-z \\(\\)-â€™]+$",
          "type": "string",
          "title": "Standard"
        },
        "Short": {
          "description": "The shortest title for this item that remains distinct amongst its siblings.\n\nUnless you're very pressed for space, most UX should use {@link Title.Standard} instead.",
          "pattern": "^[A-Z][A-z -â€™]+$",
          "type": "string",
          "title": "Short"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+/title$",
          "type": "string",
          "title": "$id"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Canonical", "Short", "Standard"]
    },
    "DelveSiteDomain": {
      "description": "Interface describing a delve site domain.\n\nThe **domain** represents the physical characteristics of the siteâ€”the terrain or architecture you must traverse.\n\nTogether, the theme and domain help you visualize your exploration of the site, and provide oracle tables for features and dangers.",
      "title": "DelveSiteDomain",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^ironsworn/domains/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Type": {
          "$ref": "#/definitions/DelveCardType.Domain",
          "description": "Indicates whether this is a site Theme or a site Domain.",
          "title": "Type"
        },
        "Features": {
          "description": "The Features contributed by this Domain card. Effectively a 'partial' oracle table; combine with the features of a Theme card to complete it.",
          "type": "array",
          "items": [
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [21], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [43],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [44], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [56],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [57], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [64],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [65], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [68],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [69], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [72],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [73], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [76],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [77], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [80],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [81], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [84],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [85], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [88],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [89], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [98],
                  "title": "Ceiling"
                },
                "Result": {
                  "type": "string",
                  "enum": ["Something unusual or unexpected"],
                  "title": "Result"
                }
              },
              "required": ["Ceiling", "Floor", "Result"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [99], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [99],
                  "title": "Ceiling"
                },
                "Result": {
                  "type": "string",
                  "enum": ["You transition into a new theme"],
                  "title": "Result"
                }
              },
              "required": ["Ceiling", "Floor", "Result"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [100], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [100],
                  "title": "Ceiling"
                },
                "Result": {
                  "type": "string",
                  "enum": ["You transition into a new domain"],
                  "title": "Result"
                }
              },
              "required": ["Ceiling", "Floor", "Result"]
            }
          ],
          "minItems": 12,
          "maxItems": 12,
          "title": "Features"
        },
        "Dangers": {
          "description": "The Dangers contributed by this Domain card. Effectively a 'partial' oracle table; combine with the dangers of Theme and the Reveal a Danger move oracle table to complete it.",
          "type": "array",
          "items": [
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [31], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [33],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [34], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [36],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [37], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [39],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [40], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [42],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [43], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [45],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            }
          ],
          "minItems": 5,
          "maxItems": 5,
          "title": "Dangers"
        },
        "Summary": {
          "description": "The summary text that appears immediately below the card's title. For best rendering, ensure that it fits on a single line.",
          "type": "string",
          "title": "Summary"
        },
        "Description": {
          "description": "An extended description for this card that doesn't appear on the card itself. For 'canonical' Themes and Domains, these are presented on p. 84 - 93 of *Ironsworn: Delve*.\n\nMost are two paragraphs long, approximately 90 words (600 characters); the longest 'canonical' description clocks in at 98 words (619 characters). Allot space accordingly.",
          "type": "string",
          "title": "Description"
        },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Title": { "$ref": "#/definitions/Title", "title": "Title" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Dangers",
        "Description",
        "Features",
        "Source",
        "Summary",
        "Title",
        "Type"
      ]
    },
    "DelveCardType.Domain": {
      "title": "DelveCardType.Domain",
      "type": "string",
      "enum": ["domain"]
    },
    "OracleTableRow": {
      "description": "Interface representing a single row in an oracle table.",
      "title": "OracleTableRow",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The ID of this row.",
          "pattern": "^(ironsworn|starforged)/oracles(/[a-z_-]+)+/[1-9][0-9]*(-[1-9][0-9]*)?(/subtable/[1-9][0-9]*(-[1-9][0-9]*)?)?$",
          "type": "string",
          "title": "$id"
        },
        "Floor": {
          "anyOf": [
            {
              "description": "The low end of the dice range for this row.",
              "minimum": 1,
              "maximum": 100,
              "type": ["null", "integer"]
            },
            { "type": "null" }
          ],
          "title": "Floor"
        },
        "Ceiling": {
          "anyOf": [
            {
              "description": "The high end of the dice range for this row.",
              "minimum": 1,
              "maximum": 100,
              "type": ["null", "integer"]
            },
            { "type": "null" }
          ],
          "title": "Ceiling"
        },
        "Result": {
          "description": "The primary result text for the row, annotated in Markdown.\nIn the book, this is frequently the only column aside from the roll column. Otherwise, it is the first column.\nSome tables label this column as something other than Result; see the parent (or grandparent) Oracle.Display for more information.",
          "type": "string",
          "title": "Result"
        },
        "Summary": {
          "description": "A secondary markdown string that must be presented to the user for the implementation to be complete, but may benefit from progressive disclosure (such as a collapsible element, popover/tooltip, etc).\n\nGenerally, `Summary` is longer than `Result`.\n\nSome tables label this column as something other than `Result`; see the parent (or grandparent) `Oracle.Display.Table` for more information.\n\n`null` is used in cases where an 'empty' `Summary` exists (example: Starship Type, p. 326). In the book, these table cells are rendered with the text `--` (and this is the recommended placeholder for tabular display). For display as a single result (e.g. VTT table roll output), however, `null` values can be safely omitted.",
          "type": ["null", "string"],
          "title": "Summary"
        },
        "Oracle rolls": {
          "description": "Additional oracle tables that should be rolled when this row is selected.",
          "pattern": "^(starforged|ironsworn)/oracles/[a-z_-]+/[a-z_-/]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Oracle rolls"
        },
        "Subtable": {
          "description": "A table to be rolled when this row is selected. If this row references an external oracle, the `Oracles` property is used instead.",
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/OracleTableRow" }
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TruthOptionSubtableRowStarforged"
              }
            }
          ],
          "title": "Subtable"
        },
        "Multiple rolls": {
          "description": "Data for rows that call for multiple rolls, e.g. on `Roll twice` results.",
          "$ref": "#/definitions/MultipleRolls",
          "title": "Multiple rolls"
        },
        "Attributes": {
          "description": "The attributes set by this row.",
          "type": "array",
          "items": { "$ref": "#/definitions/Attribute" },
          "title": "Attributes"
        },
        "Roll template": {
          "$ref": "#/definitions/RollTemplate",
          "description": "Describes the string values of this item that should be replaced with template strings and filled with the results of one or more oracle rolls.",
          "title": "Roll template"
        },
        "Suggestions": {
          "$ref": "#/definitions/Suggestions",
          "description": "\"Non-canonical\" suggestions of related items. They might be convenient to present to the user, but in most implementations rolling them automatically is not recommended.",
          "title": "Suggestions"
        },
        "Content": {
          "$ref": "#/definitions/OracleContent",
          "description": "Metadata that describes an oracle's semantic or lexical content.",
          "title": "Content"
        },
        "Game objects": {
          "description": "Any game objects that are explicitly pointed to by the original text. For most implementations, it is *not* recommended to generate them automatically - see \"Peeling the Onion\", p. 293.",
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/GameObject" }
            },
            { "type": "null" }
          ],
          "title": "Game objects"
        },
        "Display": {
          "$ref": "#/definitions/Display_1",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Ceiling", "Floor", "Result"]
    },
    "TruthOptionSubtableRowStarforged": {
      "title": "TruthOptionSubtableRowStarforged",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The ID of this row.",
          "pattern": "^(starforged|ironsworn)/setting_truths/[a-z_-]+/(1-33|34-67|68-100|[1-3])/[1-9][0-9]*(-[1-9][0-9]*)?$",
          "type": "string",
          "title": "$id"
        },
        "Floor": {
          "anyOf": [
            {
              "description": "The low end of the dice range for this row.",
              "minimum": 1,
              "maximum": 100,
              "type": ["null", "integer"]
            },
            { "type": "null" }
          ],
          "title": "Floor"
        },
        "Ceiling": {
          "anyOf": [
            {
              "description": "The high end of the dice range for this row.",
              "minimum": 1,
              "maximum": 100,
              "type": ["null", "integer"]
            },
            { "type": "null" }
          ],
          "title": "Ceiling"
        },
        "Result": {
          "description": "The primary result text for the row, annotated in Markdown.\nIn the book, this is frequently the only column aside from the roll column. Otherwise, it is the first column.\nSome tables label this column as something other than Result; see the parent (or grandparent) Oracle.Display for more information.",
          "type": "string",
          "title": "Result"
        },
        "Summary": {
          "description": "A secondary markdown string that must be presented to the user for the implementation to be complete, but may benefit from progressive disclosure (such as a collapsible element, popover/tooltip, etc).\n\nGenerally, `Summary` is longer than `Result`.\n\nSome tables label this column as something other than `Result`; see the parent (or grandparent) `Oracle.Display.Table` for more information.\n\n`null` is used in cases where an 'empty' `Summary` exists (example: Starship Type, p. 326). In the book, these table cells are rendered with the text `--` (and this is the recommended placeholder for tabular display). For display as a single result (e.g. VTT table roll output), however, `null` values can be safely omitted.",
          "type": ["null", "string"],
          "title": "Summary"
        },
        "Oracle rolls": {
          "description": "Additional oracle tables that should be rolled when this row is selected.",
          "pattern": "^(starforged|ironsworn)/oracles/[a-z_-]+/[a-z_-/]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Oracle rolls"
        },
        "Subtable": {
          "description": "A table to be rolled when this row is selected. If this row references an external oracle, the `Oracles` property is used instead.",
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/OracleTableRow" }
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TruthOptionSubtableRowStarforged"
              }
            }
          ],
          "title": "Subtable"
        },
        "Multiple rolls": {
          "description": "Data for rows that call for multiple rolls, e.g. on `Roll twice` results.",
          "$ref": "#/definitions/MultipleRolls",
          "title": "Multiple rolls"
        },
        "Attributes": {
          "description": "The attributes set by this row.",
          "type": "array",
          "items": { "$ref": "#/definitions/Attribute" },
          "title": "Attributes"
        },
        "Roll template": {
          "$ref": "#/definitions/RollTemplate",
          "description": "Describes the string values of this item that should be replaced with template strings and filled with the results of one or more oracle rolls.",
          "title": "Roll template"
        },
        "Suggestions": {
          "$ref": "#/definitions/Suggestions",
          "description": "\"Non-canonical\" suggestions of related items. They might be convenient to present to the user, but in most implementations rolling them automatically is not recommended.",
          "title": "Suggestions"
        },
        "Content": {
          "$ref": "#/definitions/OracleContent",
          "description": "Metadata that describes an oracle's semantic or lexical content.",
          "title": "Content"
        },
        "Game objects": {
          "description": "Any game objects that are explicitly pointed to by the original text. For most implementations, it is *not* recommended to generate them automatically - see \"Peeling the Onion\", p. 293.",
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/GameObject" }
            },
            { "type": "null" }
          ],
          "title": "Game objects"
        },
        "Display": {
          "$ref": "#/definitions/Display_1",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Ceiling", "Floor", "Result"]
    },
    "MultipleRolls": {
      "description": "Describes {@link OracleTableRow} results that call for multiple rolls, most commonly \"Roll twice\" results.",
      "title": "MultipleRolls",
      "type": "object",
      "properties": {
        "Amount": {
          "description": "The number of rolls to make on the parent oracle table.",
          "type": "integer",
          "title": "Amount"
        },
        "Allow duplicates": {
          "description": "Whether to allow duplicate results when generating multiple rolls.\n\nImplicitly required by `Make it worse`.",
          "type": "boolean",
          "title": "Allow duplicates"
        },
        "Make it worse": {
          "description": "Whether duplicate rolls should be compounded in an Ironsworn-style \"Make it worse\" results.\n\nTypically this is accompanied by `Row.Result` text like \"Roll twice more on this table. Both results occur. If they are the same result, make it worse.\"\n\nCan safely be ignored in Starforged-only implementations. Implicitly requires `Allow duplicates`.",
          "type": "boolean",
          "title": "Make it worse"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Allow duplicates", "Amount", "Make it worse"]
    },
    "Attribute": {
      "description": "Describes an attribute key/value pair, set by an oracle row. The key-value pair should be set on any game object for which that row is generated.\n\nAttributes exist to describe prerequisites that might be fulfilled by more than one table, that don't exist on tables at all, or that a generated game object might want to 'force' as one of it's roll results.\n\nSee documentation for a list of available values.",
      "title": "Attribute",
      "type": "object",
      "properties": {
        "Key": { "$ref": "#/definitions/AttributeKey", "title": "Key" },
        "Value": { "type": "string", "title": "Value" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Key"]
    },
    "AttributeKey": {
      "title": "AttributeKey",
      "enum": [
        "Atmosphere",
        "Authority",
        "Creature scale",
        "Derelict type",
        "Disposition",
        "Dominion",
        "Encountered behavior",
        "Environment",
        "Faction type",
        "Fringe group",
        "Guild",
        "Influence",
        "Initial contact",
        "Leadership",
        "Life",
        "Location",
        "Location theme",
        "Planetary class",
        "Population",
        "Region",
        "Role",
        "Zone"
      ],
      "type": "string"
    },
    "RollTemplate": {
      "description": "Describes the string keys of this item that should be replaced with template strings and filled with the results of one or more oracles.",
      "title": "RollTemplate",
      "anyOf": [{ "$ref": "#/definitions/RollTemplate_1" }, { "type": "null" }]
    },
    "RollTemplate_1": {
      "description": "Describes the string keys of this item that should be replaced with template strings and filled with the results of one or more oracles.",
      "title": "RollTemplate_1",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[a-z_-]+/.+/roll_template$",
          "type": "string",
          "title": "$id"
        },
        "Result": {
          "description": "A template string for the parent's `Result` property, to be filled with an oracle table roll Result.",
          "type": "string",
          "title": "Result"
        },
        "Summary": {
          "description": "A template string for the parent's `Summary` property, to be filled with an oracle table roll Result.",
          "type": "string",
          "title": "Summary"
        },
        "Description": {
          "description": "A template string for the parent's `Description` property, to be filled with an oracle table roll Result.",
          "type": "string",
          "title": "Description"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id"]
    },
    "Suggestions": {
      "description": "Describes \"non-canonical\" suggestions for game content related to the parent item.\n\nThese are intended be offered as convenient shortcuts for the user (for instance, including a menu dropdown for rolling on suggested tables); having them roll automatically is **not recommended** for most projects.\n\nThese can be safely ignored if that functionality is not desired.",
      "title": "Suggestions",
      "anyOf": [{ "$ref": "#/definitions/Suggestions_1" }, { "type": "null" }]
    },
    "Suggestions_1": {
      "description": "Describes \"non-canonical\" suggestions for game content related to the parent item.\n\nThese are intended be offered as convenient shortcuts for the user (for instance, including a menu dropdown for rolling on suggested tables); having them roll automatically is **not recommended** for most projects.\n\nThese can be safely ignored if that functionality is not desired.",
      "title": "Suggestions_1",
      "type": "object",
      "properties": {
        "Game objects": {
          "description": "Suggested game objects and their parameters.",
          "type": "array",
          "items": { "$ref": "#/definitions/GameObject" },
          "title": "Game objects"
        },
        "Oracle rolls": {
          "description": "Suggested oracle rolls, by table ID. Multiples of the same ID can be used to indicate that multiple rolls should be made.",
          "pattern": "^(starforged|ironsworn)/oracles/[a-z_-]+/[a-z_-/]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Oracle rolls"
        },
        "Moves": {
          "description": "Suggested move IDs.",
          "pattern": "^(starforged|ironsworn)/moves/[a-z_-]+/[a-z_-]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Moves"
        },
        "Assets": {
          "description": "Suggested asset IDs.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Assets"
        },
        "Encounters": {
          "description": "Suggested encounter IDs.",
          "pattern": "^(starforged/encounters|ironsworn/encounters/[a-z_-]+)/[a-z_-]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Encounters"
        },
        "Themes": {
          "description": "Suggested delve site themes.",
          "pattern": "^ironsworn/themes/[a-z_-]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Themes"
        },
        "Domains": {
          "description": "Suggested delve site domains.",
          "pattern": "^ironsworn/domains/[a-z_-]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Domains"
        },
        "Regions": {
          "description": "Suggested Ironlands regions.",
          "pattern": "^ironsworn/regions/[a-z_-]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Regions"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "GameObject": {
      "description": "Describes a game object, with optional required parameters (for example, a specific Location result).",
      "title": "GameObject",
      "type": "object",
      "properties": {
        "Object type": {
          "$ref": "#/definitions/GameObjectType",
          "title": "Object type"
        },
        "Requires": {
          "$ref": "#/definitions/Requirements",
          "title": "Requires"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Object type"]
    },
    "GameObjectType": {
      "title": "GameObjectType",
      "enum": [
        "Character",
        "Creature",
        "Derelict",
        "Derelict Zone",
        "Faction",
        "Planet",
        "Precursor Vault",
        "Settlement",
        "Starship"
      ],
      "type": "string"
    },
    "Requirements": {
      "description": "Data describing an item's requirements.",
      "title": "Requirements",
      "type": "object",
      "properties": {
        "Attributes": {
          "description": "A list of attribute keys, and values of those keys that satisfy the requirements.",
          "type": "array",
          "items": { "$ref": "#/definitions/AttributeChoices" },
          "title": "Attributes"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Attributes"]
    },
    "AttributeChoices": {
      "title": "AttributeChoices",
      "type": "object",
      "properties": {
        "Key": { "$ref": "#/definitions/AttributeKey", "title": "Key" },
        "Values": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Values"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Key"]
    },
    "OracleContent": {
      "description": "Interface for metadata that describes an oracle's semantic or lexical content.",
      "title": "OracleContent",
      "anyOf": [{ "$ref": "#/definitions/OracleContent_1" }, { "type": "null" }]
    },
    "OracleContent_1": {
      "description": "Interface for metadata that describes an oracle's semantic or lexical content.",
      "title": "OracleContent_1",
      "type": "object",
      "properties": {
        "Part of speech": {
          "description": "The part of speech of this oracle.",
          "type": "array",
          "items": {
            "enum": [
              "adjective",
              "common noun",
              "compound noun",
              "fragment",
              "name",
              "noun",
              "plural",
              "possessive case",
              "proper noun",
              "proper noun fragment",
              "sentences",
              "verb"
            ],
            "type": "string"
          },
          "title": "Part of speech"
        },
        "Tags": {
          "description": "Any arbitrary string tags associated with this oracle.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Tags"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "Display_1": {
      "description": "Interface for data relevant to an item's display/rendering.",
      "title": "Display_1",
      "anyOf": [{ "$ref": "#/definitions/Display" }, { "type": "null" }]
    },
    "DelveSiteTheme": {
      "description": "Interface describing a delve site theme.\n\nThe **theme** represents the condition or state of the site, and indicates the kinds of denizens and threats you might find there.\n\nTogether, the theme and domain help you visualize your exploration of the site, and provide oracle tables for features and dangers.",
      "title": "DelveSiteTheme",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^ironsworn/themes/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Type": {
          "$ref": "#/definitions/DelveCardType.Theme",
          "description": "Indicates whether this is a site Theme or a site Domain.",
          "title": "Type"
        },
        "Features": {
          "description": "The Features contributed by this Theme card. Effectively a 'partial' oracle table; combine with the features of a Domain card to complete it.",
          "type": "array",
          "items": [
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [1], "title": "Floor" },
                "Ceiling": { "type": "number", "enum": [4], "title": "Ceiling" }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [5], "title": "Floor" },
                "Ceiling": { "type": "number", "enum": [8], "title": "Ceiling" }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [9], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [12],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [13], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [16],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [17], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [20],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            }
          ],
          "minItems": 5,
          "maxItems": 5,
          "title": "Features"
        },
        "Dangers": {
          "description": "The Dangers contributed by this Theme card.  Effectively a 'partial' oracle table; combine with the dangers of Domain and the Reveal a Danger move oracle table to complete it.",
          "type": "array",
          "items": [
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [1], "title": "Floor" },
                "Ceiling": { "type": "number", "enum": [5], "title": "Ceiling" }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [6], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [10],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [11], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [12],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [13], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [14],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [15], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [16],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [17], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [18],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [19], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [20],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [21], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [22],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [23], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [24],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [25], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [26],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [27], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [28],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            },
            {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "Floor": { "type": "number", "enum": [29], "title": "Floor" },
                "Ceiling": {
                  "type": "number",
                  "enum": [30],
                  "title": "Ceiling"
                }
              },
              "required": ["Ceiling", "Floor"]
            }
          ],
          "minItems": 12,
          "maxItems": 12,
          "title": "Dangers"
        },
        "Summary": {
          "description": "The summary text that appears immediately below the card's title. For best rendering, ensure that it fits on a single line.",
          "type": "string",
          "title": "Summary"
        },
        "Description": {
          "description": "An extended description for this card that doesn't appear on the card itself. For 'canonical' Themes and Domains, these are presented on p. 84 - 93 of *Ironsworn: Delve*.\n\nMost are two paragraphs long, approximately 90 words (600 characters); the longest 'canonical' description clocks in at 98 words (619 characters). Allot space accordingly.",
          "type": "string",
          "title": "Description"
        },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Title": { "$ref": "#/definitions/Title", "title": "Title" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Dangers",
        "Description",
        "Features",
        "Source",
        "Summary",
        "Title",
        "Type"
      ]
    },
    "DelveCardType.Theme": {
      "title": "DelveCardType.Theme",
      "type": "string",
      "enum": ["theme"]
    },
    "IronlandsRegion": {
      "title": "IronlandsRegion",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^ironsworn/regions/[a-z_-]$",
          "type": "string",
          "title": "$id"
        },
        "Features": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Features"
        },
        "Quest starter": {
          "description": "A markdown string describing the quest starter associated with this item.",
          "type": "string",
          "title": "Quest starter"
        },
        "Summary": {
          "description": "A user-facing markdown summary of the item. Summary is shorter than {@link HasDescription| Description}, when they're both present.",
          "type": "string",
          "title": "Summary"
        },
        "Title": { "$ref": "#/definitions/TitleCaseTitle", "title": "Title" },
        "Tags": {
          "description": "Arbitrary strings tags that describe optional metadata that doesn't fit in other properties.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Tags"
        },
        "Display": {
          "$ref": "#/definitions/Display",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Description": {
          "description": "A user-facing markdown description of the item, consisting of one or more paragraphs.",
          "type": "string",
          "title": "Description"
        },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Description",
        "Display",
        "Features",
        "Quest starter",
        "Source",
        "Summary",
        "Title"
      ]
    },
    "DelveRarity": {
      "description": "Represents a Rarity (described in Ironsworn: Delve)",
      "title": "DelveRarity",
      "type": "object",
      "properties": {
        "XP cost": {
          "minimum": 3,
          "maximum": 5,
          "type": "integer",
          "title": "XP cost"
        },
        "Asset": {
          "description": "The ID of the asset, to which this rarity applies its effects.",
          "type": "string",
          "title": "Asset"
        },
        "Title": { "$ref": "#/definitions/TitleCaseTitle", "title": "Title" },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+$",
          "type": "string",
          "title": "$id"
        },
        "Display": {
          "$ref": "#/definitions/Display",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Description": {
          "description": "A user-facing markdown description of the item, consisting of one or more paragraphs.",
          "type": "string",
          "title": "Description"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Asset",
        "Description",
        "Display",
        "Source",
        "Title",
        "XP cost"
      ]
    },
    "AssetType": {
      "description": "Represents an Asset Type such as Command Vehicle, Companion, or Path, and serves as a container for all assets of that type.",
      "title": "AssetType",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Assets": {
          "description": "The assets that belong to this asset type.",
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/Asset" },
          "defaultProperties": [],
          "title": "Assets"
        },
        "Title": { "$ref": "#/definitions/Title", "title": "Title" },
        "Display": {
          "$ref": "#/definitions/Display",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Usage": { "$ref": "#/definitions/AssetUsage", "title": "Usage" },
        "Description": {
          "description": "A user-facing markdown description of the item, consisting of one or more paragraphs.",
          "type": "string",
          "title": "Description"
        },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Aliases": {
          "description": "Alternate names for this item, including: names it had earlier in development that have since changed, alternate spellings/punctuation, common misspellings, and so on.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Aliases"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Assets",
        "Description",
        "Display",
        "Source",
        "Title",
        "Usage"
      ]
    },
    "Asset": {
      "description": "An interface representing an *Ironsworn: Starforged* asset card.",
      "title": "Asset",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Title": { "$ref": "#/definitions/TitleCaseTitle", "title": "Title" },
        "Display": {
          "$ref": "#/definitions/Display",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "States": {
          "description": "Describes any states that the asset might have, such as \"Broken\". Some states may disable the asset entirely.",
          "type": "array",
          "items": { "$ref": "#/definitions/AssetState" },
          "title": "States"
        },
        "Asset type": {
          "description": "The ID of the asset's parent AssetType",
          "type": "string",
          "title": "Asset type"
        },
        "Usage": {
          "$ref": "#/definitions/AssetUsage",
          "description": "Information on the asset's usage, such as whether its abilities are shared amongst the player characters.",
          "title": "Usage"
        },
        "Attachments": {
          "description": "Details on what attachments (other assets) are accepted by this asset.",
          "$ref": "#/definitions/AssetAttachment",
          "title": "Attachments"
        },
        "Inputs": {
          "description": "Data describing the Input controls that should be embedded in the card. Inputs embedded in specific asset abilities appear as keys of the corresponding ability object, instead.",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              { "$ref": "#/definitions/InputClock" },
              { "$ref": "#/definitions/InputNumber" },
              { "$ref": "#/definitions/InputSelect" },
              { "$ref": "#/definitions/InputText" }
            ]
          },
          "defaultProperties": [],
          "title": "Inputs"
        },
        "Requirement": {
          "description": "An optional markdown string representing the requirement text that appears at the top of some asset cards.",
          "type": "string",
          "title": "Requirement"
        },
        "Abilities": {
          "description": "The asset's abilities.",
          "type": "array",
          "items": [
            { "$ref": "#/definitions/AssetAbility" },
            { "$ref": "#/definitions/AssetAbility" },
            { "$ref": "#/definitions/AssetAbility" }
          ],
          "minItems": 3,
          "maxItems": 3,
          "title": "Abilities"
        },
        "Condition meter": {
          "description": "Information on this asset's condition meter, if any.",
          "$ref": "#/definitions/ConditionMeter",
          "title": "Condition meter"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Tags"
        },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Aliases": {
          "description": "Alternate names for this item, including: names it had earlier in development that have since changed, alternate spellings/punctuation, common misspellings, and so on.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Aliases"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Abilities",
        "Asset type",
        "Display",
        "Source",
        "Title",
        "Usage"
      ]
    },
    "AssetState": {
      "description": "Describes a possible state for an asset, like the \"broken\" status for certain assets (mainly Modules in *Starforged*).\n\nStates are frequently toggled on and off by players; for real-world gameplay, this is generally represented by flipping the card over. A checkbox or other on/off toggle might serve the same function in a digital implementation.",
      "title": "AssetState",
      "type": "object",
      "properties": {
        "Label": {
          "description": "A string label for the state.",
          "pattern": "^[a-z].+$",
          "type": "string",
          "title": "Label"
        },
        "Enabled": {
          "description": "Whether this state is currently enabled.",
          "type": "boolean",
          "title": "Enabled"
        },
        "Disables asset": {
          "description": "Whether this state should disable the entire asset when `AssetState.Enabled === true`",
          "type": "boolean",
          "title": "Disables asset"
        },
        "Impact": {
          "description": "Whether this state counts as an Impact for the asset's owner.\n\nNote that for vehicles, this shouldn't be applied automatically unless your implementation has some way of telling which vehicle the PC is currently using.",
          "type": "boolean",
          "title": "Impact"
        },
        "Permanent": {
          "description": "Whether or not this state is permanent.",
          "type": "boolean",
          "title": "Permanent"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+$",
          "type": "string",
          "title": "$id"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Disables asset",
        "Enabled",
        "Impact",
        "Label",
        "Permanent"
      ]
    },
    "AssetUsage": {
      "title": "AssetUsage",
      "type": "object",
      "properties": {
        "Shared": {
          "description": "Whether the asset's abilities are shared with Allies.\n\nIf set to `true`, the asset's abilities can be invoked by **any** player character; if your app facilitates co-op or guided play, consider how you might expose these abilities to players other than the asset's owner.\n\nDefaults to `true` for Command Vehicle, Support Vehicle, and Module assets.",
          "type": "boolean",
          "title": "Shared"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Shared"]
    },
    "AssetAttachment": {
      "description": "Details which assets are valid attachments. The most prominent example in *Ironsworn: Starforged* is the STARSHIP asset (`Starship/Assets/Command_vehicle/Starship`); Rover (`Starship/Assets/Support_vehicle/Rover`) also has an elective ability that adds this property.",
      "title": "AssetAttachment",
      "type": "object",
      "properties": {
        "Asset types": {
          "description": "The type of asset that this asset accepts as attachments.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Asset types"
        },
        "Max": {
          "description": "The maximum number of attached assets accepted by this asset. If undefined or null, there is no maximum.",
          "type": ["null", "integer"],
          "title": "Max"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Asset types", "Max"]
    },
    "InputClock": {
      "description": "An input representing an *Ironsworn: Starforged* clock.",
      "title": "InputClock",
      "type": "object",
      "properties": {
        "Input type": {
          "$ref": "#/definitions/InputType.Clock",
          "title": "Input type"
        },
        "Clock type": {
          "$ref": "#/definitions/ClockType",
          "description": "Whether the clock is a Tension Clock or a Campaign Clock. For assets this doesn't really matter since they have their own specific trigger conditions, and can probably be ignored.",
          "title": "Clock type"
        },
        "Segments": {
          "$ref": "#/definitions/ClockSegments",
          "description": "An integer representing the total number of segments in this Clock. *Ironsworn: Starforged* uses clocks with 4, 6, 8, and 10 segments.\n\n`Filled` should not exceed this number.",
          "title": "Segments"
        },
        "Filled": {
          "description": "An integer representing how many filled segments this clock has. This is always 0 in Dataforged; it's included to make it easy to store clock states with the same interface.",
          "type": "integer",
          "title": "Filled"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+(/[1-3])?/inputs/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Adjustable": {
          "description": "Whether the input's value is expected to change over the course of a campaign. For example, name fields are typically `false`, while something like a clock or tally would be `true`.\n\nIt's a good idea to make everything editable regardless, but this property might inform whether your UI presents that functionality \"front and center\" or as a secondary interaction (via long press, right click, etc);",
          "type": "boolean",
          "title": "Adjustable"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Adjustable",
        "Clock type",
        "Filled",
        "Input type",
        "Label",
        "Segments"
      ]
    },
    "InputType.Clock": {
      "title": "InputType.Clock",
      "type": "string",
      "enum": ["clock"]
    },
    "ClockType": {
      "description": "See clocks (p. 234) for more information.",
      "title": "ClockType",
      "enum": ["campaign", "tension"],
      "type": "string"
    },
    "ClockSegments": {
      "title": "ClockSegments",
      "enum": [10, 4, 6, 8],
      "type": "number"
    },
    "InputNumber": {
      "description": "An input where the user sets an integer.\nSuggested rendering: a number input spinner, similar to `<input type='number'>` in HTML.",
      "title": "InputNumber",
      "type": "object",
      "properties": {
        "Input type": {
          "$ref": "#/definitions/InputType.Number",
          "title": "Input type"
        },
        "Min": { "type": "integer", "title": "Min" },
        "Max": { "type": ["null", "integer"], "title": "Max" },
        "Step": { "type": "number", "enum": [1], "title": "Step" },
        "Value": { "type": "integer", "title": "Value" },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+(/[1-3])?/inputs/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Adjustable": {
          "description": "Whether the input's value is expected to change over the course of a campaign. For example, name fields are typically `false`, while something like a clock or tally would be `true`.\n\nIt's a good idea to make everything editable regardless, but this property might inform whether your UI presents that functionality \"front and center\" or as a secondary interaction (via long press, right click, etc);",
          "type": "boolean",
          "title": "Adjustable"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Adjustable",
        "Input type",
        "Label",
        "Max",
        "Min",
        "Step",
        "Value"
      ]
    },
    "InputType.Number": {
      "title": "InputType.Number",
      "type": "string",
      "enum": ["number"]
    },
    "InputSelect": {
      "description": "An input where the user selects a single option from a list of pre-set options.\nSuggested rendering: a drop-down selection menu.",
      "title": "InputSelect",
      "type": "object",
      "properties": {
        "Input type": {
          "$ref": "#/definitions/InputType.Select",
          "title": "Input type"
        },
        "Sets attributes": {
          "description": "Hints which attribute(s) are set by this dropdown's options.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/InputSelectAttributeDefinition"
          },
          "defaultProperties": [],
          "title": "Sets attributes"
        },
        "Options": {
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/InputSelectOption" },
          "defaultProperties": [],
          "title": "Options"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+(/[1-3])?/inputs/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Adjustable": {
          "description": "Whether the input's value is expected to change over the course of a campaign. For example, name fields are typically `false`, while something like a clock or tally would be `true`.\n\nIt's a good idea to make everything editable regardless, but this property might inform whether your UI presents that functionality \"front and center\" or as a secondary interaction (via long press, right click, etc);",
          "type": "boolean",
          "title": "Adjustable"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Adjustable",
        "Input type",
        "Label",
        "Options",
        "Sets attributes"
      ]
    },
    "InputType.Select": {
      "title": "InputType.Select",
      "type": "string",
      "enum": ["select"]
    },
    "InputSelectAttributeDefinition": {
      "description": "Provides hints for the keys and typing of an {@link InputSelect}'s child {@link InputSelectOption}s.",
      "title": "InputSelectAttributeDefinition",
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/InputSelectOptionType",
          "title": "Type"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Type"]
    },
    "InputSelectOptionType": {
      "description": "The type of an attribute set by a Select Input.",
      "title": "InputSelectOptionType",
      "enum": ["condition meter", "number", "stat", "string"],
      "type": "string"
    },
    "InputSelectOption": {
      "description": "Represents an option in an {@link InputSelect}.",
      "title": "InputSelectOption",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+/inputs/[a-z_-]+/options/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Set attributes": {
          "description": "A keyed object describing what attribute keys should be set to when this option is active. *All* items in the object should be set in this manner.",
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^[0-9]+$": { "$ref": "#/definitions/InputSelectOptionSetter" }
          },
          "title": "Set attributes"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Label", "Set attributes"]
    },
    "InputSelectOptionSetter": {
      "title": "InputSelectOptionSetter",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+/inputs/[a-z_-]+/options/[a-z_-]+/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Type": {
          "$ref": "#/definitions/InputSelectOptionType",
          "title": "Type"
        },
        "Value": { "type": ["string", "integer"], "title": "Value" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Type", "Value"]
    },
    "InputText": {
      "description": "A text input.\nSuggested rendering: a single-line text input, similar to `<input type='text'>` in HTML.",
      "title": "InputText",
      "type": "object",
      "properties": {
        "Input type": {
          "$ref": "#/definitions/InputType.Text",
          "title": "Input type"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+(/[1-3])?/inputs/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Adjustable": {
          "description": "Whether the input's value is expected to change over the course of a campaign. For example, name fields are typically `false`, while something like a clock or tally would be `true`.\n\nIt's a good idea to make everything editable regardless, but this property might inform whether your UI presents that functionality \"front and center\" or as a secondary interaction (via long press, right click, etc);",
          "type": "boolean",
          "title": "Adjustable"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Adjustable", "Input type", "Label"]
    },
    "InputType.Text": {
      "title": "InputType.Text",
      "type": "string",
      "enum": ["text"]
    },
    "AssetAbility": {
      "description": "Represents one of an asset's three abilities.",
      "title": "AssetAbility",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+/[1-3]$",
          "type": "string",
          "title": "$id"
        },
        "Label": {
          "description": "Ironsworn companion assets provide labels for their abilities. Starforged asset abilities do not have labels.",
          "type": "string",
          "title": "Label"
        },
        "Moves": {
          "description": "New moves added by this asset ability.",
          "type": "array",
          "items": { "$ref": "#/definitions/Move" },
          "title": "Moves"
        },
        "Inputs": {
          "description": "User inputs (text, clocks, etc) associated with this asset ability.",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              { "$ref": "#/definitions/InputClock" },
              { "$ref": "#/definitions/InputNumber" },
              { "$ref": "#/definitions/InputSelect" },
              { "$ref": "#/definitions/InputText" }
            ]
          },
          "defaultProperties": [],
          "title": "Inputs"
        },
        "Alter moves": {
          "description": "Information on how this ability alters moves when enabled.",
          "type": "array",
          "items": { "$ref": "#/definitions/AlterMove" },
          "title": "Alter moves"
        },
        "Alter properties": {
          "description": "Information on how this ability alters its parent asset when enabled.",
          "$ref": "#/definitions/AssetAlterProperties",
          "title": "Alter properties"
        },
        "Alter momentum": {
          "description": "Information on how this ability alters its owner's momentum (triggers an effect on burn, on reset, etc)",
          "$ref": "#/definitions/AlterMomentum",
          "title": "Alter momentum"
        },
        "Enabled": {
          "description": "Whether the asset ability is enabled or not. In most cases, the first asset ability defaults to 'true' and the others to 'false'. If none of an asset's abilities are set to 'true', the player can pick which the ability they start with when purchasing the asset.",
          "type": "boolean",
          "title": "Enabled"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Enabled", "Text"]
    },
    "Move": {
      "description": "Interface representing a Starforged move.",
      "title": "Move",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/moves/([a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3])/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Title": {
          "$ref": "#/definitions/TitleCaseTitle",
          "description": "Note the \"Canonical\" key for asset-specific moves is something of a misnomer, as in the original text doesn't name them. They're provided in the same format for convenience, however.",
          "title": "Title"
        },
        "Asset": {
          "description": "The ID of the parent Asset of the move, if any.",
          "type": "string",
          "title": "Asset"
        },
        "Category": {
          "description": "The ID of the move's category.",
          "type": "string",
          "title": "Category"
        },
        "Progress move": {
          "description": "Whether or not the move is a Progress Move. Progress moves roll two challenge dice against a progress score.",
          "type": "boolean",
          "title": "Progress move"
        },
        "Variant of": {
          "description": "The ID of the move that this move is a variant of, if any.",
          "type": "string",
          "title": "Variant of"
        },
        "Trigger": {
          "$ref": "#/definitions/MoveTrigger",
          "description": "The move's trigger data.",
          "title": "Trigger"
        },
        "Oracles": {
          "description": "The IDs of any oracles directly referenced by the move, or vice versa.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Oracles"
        },
        "Outcomes": {
          "description": "Outcome information for the move.",
          "$ref": "#/definitions/Outcomes",
          "title": "Outcomes"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Tags"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "Display": {
          "$ref": "#/definitions/Display",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Optional": {
          "description": "Whether or not the source material presents this rules item as optional.",
          "default": false,
          "type": "boolean",
          "title": "Optional"
        },
        "Suggestions": {
          "$ref": "#/definitions/Suggestions_2",
          "description": "\"Non-canonical\" suggestions of related items. They might be convenient to present to the user, but in most implementations rolling them automatically is not recommended.",
          "title": "Suggestions"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Category",
        "Display",
        "Optional",
        "Source",
        "Text",
        "Title",
        "Trigger"
      ]
    },
    "MoveTrigger": {
      "description": "Describes the trigger conditions of the move.",
      "title": "MoveTrigger",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/trigger$",
          "type": "string",
          "title": "$id"
        },
        "Text": {
          "description": "A markdown string containing the primary trigger text for this move.\n\nSecondary triggers (for specific stats or uses of an asset ability) are described in `Options`.",
          "type": "string",
          "title": "Text"
        },
        "By": {
          "description": "Information on who can trigger this item. Used mainly by asset abilities, some of which can trigger from an Ally's move.\n\nIf unspecified, assume `Ally` is `false` and `Player` is `true`.",
          "$ref": "#/definitions/MoveTriggerBy",
          "title": "By"
        },
        "Options": {
          "description": "Information on any action rolls or progress rolls that are made when this move is triggered (which may describe a specific subset of the primary trigger in their own `Text` property).\n\nIf there's no action rolls or progress rolls attached to this move, this is `undefined`.",
          "type": "array",
          "items": {
            "anyOf": [
              { "$ref": "#/definitions/MoveTriggerOptionAction" },
              { "$ref": "#/definitions/MoveTriggerOptionProgress" }
            ]
          },
          "title": "Options"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id"]
    },
    "MoveTriggerBy": {
      "title": "MoveTriggerBy",
      "type": "object",
      "properties": {
        "Player": {
          "description": "Whether the player character who owns this item can trigger it. Unsurprisingly, this is usually true, but there's a few exceptions: see *Starforged's* LOYALIST asset for an example.",
          "type": "boolean",
          "title": "Player"
        },
        "Ally": {
          "description": "Whether an Ally (a player character other than the owner) can trigger this item. This is usually false, but there's several exceptions among asset abilities.",
          "type": "boolean",
          "title": "Ally"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Ally", "Player"]
    },
    "MoveTriggerOptionAction": {
      "title": "MoveTriggerOptionAction",
      "type": "object",
      "properties": {
        "Roll type": {
          "$ref": "#/definitions/RollType.Action",
          "description": "Whether this option is an action roll or progress roll.",
          "title": "Roll type"
        },
        "Using": {
          "description": "The stat(s) or progress track(s) that may be rolled with this move trigger option.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Using"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/trigger/options/[0-9]+$",
          "type": "string",
          "title": "$id"
        },
        "Method": {
          "$ref": "#/definitions/RollMethod",
          "description": "The method used to choose the stat or track in the `Using` array.",
          "title": "Method"
        },
        "Custom stat": {
          "description": "Defines a custom stat, if one is included in this object's `With` array.",
          "$ref": "#/definitions/CustomStat",
          "title": "Custom stat"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Method", "Roll type", "Using"]
    },
    "RollType.Action": {
      "title": "RollType.Action",
      "type": "string",
      "enum": ["action roll"]
    },
    "RollMethod": {
      "description": "The stat(s) or progress track(s) that may be rolled with the parent move trigger option.",
      "title": "RollMethod",
      "enum": [
        "all",
        "any",
        "highest",
        "inherit",
        "lowest",
        "strong hit",
        "weak hit"
      ],
      "type": "string"
    },
    "CustomStat": {
      "title": "CustomStat",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/moves/([a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[0-9]+)/[a-z_-]+/trigger/options/[0-9]+/custom_stat$",
          "type": "string",
          "title": "$id"
        },
        "Options": {
          "type": "array",
          "items": { "$ref": "#/definitions/CustomStatOption" },
          "title": "Options"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Label", "Options"]
    },
    "CustomStatOption": {
      "title": "CustomStatOption",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/moves/([a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[0-9]+)/[a-z_-]+/trigger/options/[0-9]+/custom_stat/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Value": {
          "description": "The numeric value to be used as +stat when making an Action Roll.",
          "type": "integer",
          "title": "Value"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Label", "Value"]
    },
    "MoveTriggerOptionProgress": {
      "title": "MoveTriggerOptionProgress",
      "type": "object",
      "properties": {
        "Roll type": {
          "$ref": "#/definitions/RollType.Progress",
          "description": "Whether this option is an action roll or progress roll.",
          "title": "Roll type"
        },
        "Using": {
          "description": "The stat(s) or progress track(s) that may be rolled with this move trigger option.",
          "type": "array",
          "items": {
            "enum": [
              "bonds legacy",
              "bonds track",
              "combat progress",
              "connection progress",
              "delve progress",
              "discoveries legacy",
              "expedition progress",
              "journey progress",
              "quests legacy",
              "scene challenge progress",
              "vow progress"
            ],
            "type": "string"
          },
          "title": "Using"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/trigger/options/[0-9]+$",
          "type": "string",
          "title": "$id"
        },
        "Method": {
          "$ref": "#/definitions/RollMethod",
          "description": "The method used to choose the stat or track in the `Using` array.",
          "title": "Method"
        },
        "Custom stat": {
          "description": "Defines a custom stat, if one is included in this object's `With` array.",
          "$ref": "#/definitions/CustomStat",
          "title": "Custom stat"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Method", "Roll type", "Using"]
    },
    "RollType.Progress": {
      "title": "RollType.Progress",
      "type": "string",
      "enum": ["progress roll"]
    },
    "Outcomes": {
      "title": "Outcomes",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/outcomes$",
          "type": "string",
          "title": "$id"
        },
        "Strong hit": {
          "$ref": "#/definitions/OutcomeStrongHit",
          "title": "Strong hit"
        },
        "Weak hit": {
          "$ref": "#/definitions/OutcomeWeakHit",
          "title": "Weak hit"
        },
        "Miss": { "$ref": "#/definitions/OutcomeMiss", "title": "Miss" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Miss", "Strong hit", "Weak hit"]
    },
    "OutcomeStrongHit": {
      "title": "OutcomeStrongHit",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/outcomes/strong_hit$",
          "type": "string",
          "title": "$id"
        },
        "With a match": {
          "description": "Defines a different outcome for this result with a match. Its text should replace the text of this object.",
          "$ref": "#/definitions/OutcomeStrongHitMatch",
          "title": "With a match"
        },
        "In control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "default": true,
          "type": "boolean",
          "title": "In control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong hit", "Weak hit"],
          "type": "string",
          "title": "Count as"
        },
        "Reroll": {
          "description": "Information on rerolls offered by this move.",
          "$ref": "#/definitions/MoveReroll",
          "title": "Reroll"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id"]
    },
    "OutcomeStrongHitMatch": {
      "title": "OutcomeStrongHitMatch",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/outcomes/strong_hit/with_a_match$",
          "type": "string",
          "title": "$id"
        },
        "In control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "default": true,
          "type": "boolean",
          "title": "In control"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong hit", "Weak hit"],
          "type": "string",
          "title": "Count as"
        },
        "Reroll": {
          "description": "Information on rerolls offered by this move.",
          "$ref": "#/definitions/MoveReroll",
          "title": "Reroll"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id"]
    },
    "MoveReroll": {
      "description": "Describes a reroll offered by a move outcome. The vast majority of rerolls in *Ironsworn* are elective, so automatic rerolling isn't recommended.",
      "title": "MoveReroll",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "type": "string",
          "title": "$id"
        },
        "Text": {
          "description": "The markdown string describing the conditions of the reroll. It should be presented to the user so that they can decide whether a reroll is appropriate.",
          "type": "string",
          "title": "Text"
        },
        "Dice": {
          "$ref": "#/definitions/RerollType",
          "description": "The dice to be rerolled.",
          "title": "Dice"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Dice"]
    },
    "RerollType": {
      "description": "Enumerates which dice are to be rerolled.",
      "title": "RerollType",
      "enum": ["action die", "all", "any", "challenge dice", "challenge die"],
      "type": "string"
    },
    "OutcomeWeakHit": {
      "title": "OutcomeWeakHit",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/outcomes/weak_hit$",
          "type": "string",
          "title": "$id"
        },
        "In control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "default": false,
          "type": "boolean",
          "title": "In control"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong hit", "Weak hit"],
          "type": "string",
          "title": "Count as"
        },
        "Reroll": {
          "description": "Information on rerolls offered by this move.",
          "$ref": "#/definitions/MoveReroll",
          "title": "Reroll"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id"]
    },
    "OutcomeMiss": {
      "title": "OutcomeMiss",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/outcomes/miss$",
          "type": "string",
          "title": "$id"
        },
        "With a match": {
          "description": "Defines a different outcome for this result with a match. Its text should replace the text of this object.",
          "$ref": "#/definitions/OutcomeMissMatch",
          "title": "With a match"
        },
        "In control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "default": false,
          "type": "boolean",
          "title": "In control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong hit", "Weak hit"],
          "type": "string",
          "title": "Count as"
        },
        "Reroll": {
          "description": "Information on rerolls offered by this move.",
          "$ref": "#/definitions/MoveReroll",
          "title": "Reroll"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id"]
    },
    "OutcomeMissMatch": {
      "title": "OutcomeMissMatch",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/outcomes/miss/with_a_match$",
          "type": "string",
          "title": "$id"
        },
        "In control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "default": false,
          "type": "boolean",
          "title": "In control"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong hit", "Weak hit"],
          "type": "string",
          "title": "Count as"
        },
        "Reroll": {
          "description": "Information on rerolls offered by this move.",
          "$ref": "#/definitions/MoveReroll",
          "title": "Reroll"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id"]
    },
    "Suggestions_2": {
      "description": "Describes \"non-canonical\" suggestions for game content related to the parent item.\n\nThese are intended be offered as convenient shortcuts for the user (for instance, including a menu dropdown for rolling on suggested tables); having them roll automatically is **not recommended** for most projects.\n\nThese can be safely ignored if that functionality is not desired.",
      "title": "Suggestions_2",
      "$ref": "#/definitions/Suggestions_1"
    },
    "AlterMove": {
      "description": "Describes alterations applied to moves by asset abilities.",
      "title": "AlterMove",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[1-9][0-9]*$",
          "type": "string",
          "title": "$id"
        },
        "Moves": {
          "description": "The `$id`s of the move(s) to be altered. If it's `null`, it can alter *any* move to which its trigger conditions apply. If it's `undefined`, see `Extends` instead.",
          "anyOf": [
            { "type": "array", "items": { "type": "string" } },
            { "type": "null" },
            { "type": "null" }
          ],
          "title": "Moves"
        },
        "Alters": {
          "description": "Some asset abilities alter/extend other asset abilities, specified as an array of IDs. Only changed properties are specified; other properties are the same.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Alters"
        },
        "Trigger": {
          "description": "The trigger required by the asset ability. If `undefined`, the move alteration applies to all uses of the specified moves, so long as they also meet any implicit asset requirements (fictional framing, `Asset.Requirement`, not being Broken or Out of Action, etc).",
          "$ref": "#/definitions/MoveTrigger",
          "title": "Trigger"
        },
        "Text": {
          "description": "Markdown rules text describing added effects which apply *before* the move is rolled, such as adds.",
          "type": "string",
          "title": "Text"
        },
        "Outcomes": {
          "description": "Added rules text that applies on move outcomes.",
          "$ref": "#/definitions/AlterMoveOutcomes",
          "title": "Outcomes"
        },
        "Suggestions": {
          "$ref": "#/definitions/Suggestions_2",
          "description": "\"Non-canonical\" suggestions of related items. They might be convenient to present to the user, but in most implementations rolling them automatically is not recommended.",
          "title": "Suggestions"
        },
        "Title": {
          "$ref": "#/definitions/TitleCaseTitle_1",
          "description": "Note the \"Canonical\" key for asset-specific moves is something of a misnomer, as in the original text doesn't name them. They're provided in the same format for convenience, however.",
          "title": "Title"
        },
        "Asset": {
          "description": "The ID of the parent Asset of the move, if any.",
          "type": "string",
          "title": "Asset"
        },
        "Category": {
          "description": "The ID of the move's category.",
          "type": "string",
          "title": "Category"
        },
        "Progress move": {
          "description": "Whether or not the move is a Progress Move. Progress moves roll two challenge dice against a progress score.",
          "type": "boolean",
          "title": "Progress move"
        },
        "Variant of": {
          "description": "The ID of the move that this move is a variant of, if any.",
          "type": "string",
          "title": "Variant of"
        },
        "Oracles": {
          "description": "The IDs of any oracles directly referenced by the move, or vice versa.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Oracles"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Tags"
        },
        "Display": {
          "$ref": "#/definitions/Display_2",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Source": {
          "$ref": "#/definitions/Source_1",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Optional": {
          "description": "Whether or not the source material presents this rules item as optional.",
          "default": false,
          "type": "boolean",
          "title": "Optional"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id"]
    },
    "AlterMoveOutcomes": {
      "title": "AlterMoveOutcomes",
      "type": "object",
      "properties": {
        "Strong hit": {
          "$ref": "#/definitions/AlterStrongHit",
          "title": "Strong hit"
        },
        "Weak hit": {
          "$ref": "#/definitions/AlterWeakHit",
          "title": "Weak hit"
        },
        "Miss": { "$ref": "#/definitions/AlterMiss", "title": "Miss" },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/outcomes$",
          "type": "string",
          "title": "$id"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id"]
    },
    "AlterStrongHit": {
      "title": "AlterStrongHit",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/outcomes/strong_hit$",
          "type": "string",
          "title": "$id"
        },
        "With a match": {
          "description": "Defines a different outcome for this result with a match. Its text should replace the text of this object.",
          "$ref": "#/definitions/OutcomeStrongHitMatch",
          "title": "With a match"
        },
        "In control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "default": true,
          "type": "boolean",
          "title": "In control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong hit", "Weak hit"],
          "type": "string",
          "title": "Count as"
        },
        "Reroll": {
          "description": "Information on rerolls offered by this move.",
          "$ref": "#/definitions/MoveReroll",
          "title": "Reroll"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AlterWeakHit": {
      "title": "AlterWeakHit",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/outcomes/weak_hit$",
          "type": "string",
          "title": "$id"
        },
        "In control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "default": false,
          "type": "boolean",
          "title": "In control"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong hit", "Weak hit"],
          "type": "string",
          "title": "Count as"
        },
        "Reroll": {
          "description": "Information on rerolls offered by this move.",
          "$ref": "#/definitions/MoveReroll",
          "title": "Reroll"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AlterMiss": {
      "title": "AlterMiss",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_-]+/[a-z_-]+|assets/[a-z_-]+/[a-z_-]+/[1-3]/alter_moves/[0-9]+|moves/assets/[a-z_-]+/[a-z_-]+/[1-3]/[a-z_-]+)/outcomes/miss$",
          "type": "string",
          "title": "$id"
        },
        "With a match": {
          "description": "Defines a different outcome for this result with a match. Its text should replace the text of this object.",
          "$ref": "#/definitions/OutcomeMissMatch",
          "title": "With a match"
        },
        "In control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "default": false,
          "type": "boolean",
          "title": "In control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong hit", "Weak hit"],
          "type": "string",
          "title": "Count as"
        },
        "Reroll": {
          "description": "Information on rerolls offered by this move.",
          "$ref": "#/definitions/MoveReroll",
          "title": "Reroll"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "TitleCaseTitle_1": {
      "title": "TitleCaseTitle_1",
      "$ref": "#/definitions/TitleCaseTitle"
    },
    "Display_2": {
      "description": "Interface for data relevant to an item's display/rendering.",
      "title": "Display_2",
      "$ref": "#/definitions/Display"
    },
    "Source_1": {
      "description": "Interface representing data on this item's source. For 'canonical' content, this is usually a book with numbered pages, but it might also be a link to a web site.",
      "title": "Source_1",
      "$ref": "#/definitions/Source"
    },
    "AssetAlterProperties": {
      "description": "Describes changes that an asset ability makes to its parent asset when active. Any properties with object values should be merged recursively.",
      "title": "AssetAlterProperties",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "type": "string",
          "title": "$id"
        },
        "Abilities": {
          "type": "array",
          "items": { "$ref": "#/definitions/AssetAlterPropertiesAbility" },
          "title": "Abilities"
        },
        "Attachments": {
          "$ref": "#/definitions/AssetAlterPropertiesAttachment",
          "title": "Attachments"
        },
        "Condition meter": {
          "$ref": "#/definitions/AssetAlterPropertiesConditionMeter",
          "title": "Condition meter"
        },
        "States": {
          "description": "Describes any states that the asset might have, such as \"Broken\". Some states may disable the asset entirely.",
          "type": "array",
          "items": { "$ref": "#/definitions/AssetState" },
          "title": "States"
        },
        "Title": { "$ref": "#/definitions/TitleCaseTitle_2", "title": "Title" },
        "Tags": { "type": "undefined", "title": "Tags" },
        "Display": {
          "$ref": "#/definitions/Display_3",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Source": {
          "$ref": "#/definitions/Source_2",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Aliases": {
          "description": "Alternate names for this item, including: names it had earlier in development that have since changed, alternate spellings/punctuation, common misspellings, and so on.",
          "type": "undefined",
          "title": "Aliases"
        },
        "Usage": {
          "$ref": "#/definitions/AssetUsage_1",
          "description": "Information on the asset's usage, such as whether its abilities are shared amongst the player characters.",
          "title": "Usage"
        },
        "Asset type": {
          "description": "The ID of the asset's parent AssetType",
          "type": "string",
          "title": "Asset type"
        },
        "Inputs": {
          "description": "Data describing the Input controls that should be embedded in the card. Inputs embedded in specific asset abilities appear as keys of the corresponding ability object, instead.",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              { "$ref": "#/definitions/InputClock" },
              { "$ref": "#/definitions/InputNumber" },
              { "$ref": "#/definitions/InputSelect" },
              { "$ref": "#/definitions/InputText" }
            ]
          },
          "defaultProperties": [],
          "title": "Inputs"
        },
        "Requirement": {
          "description": "An optional markdown string representing the requirement text that appears at the top of some asset cards.",
          "type": "string",
          "title": "Requirement"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id"]
    },
    "AssetAlterPropertiesAbility": {
      "title": "AssetAlterPropertiesAbility",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+/[1-3]$",
          "type": "string",
          "title": "$id"
        },
        "Label": {
          "description": "Ironsworn companion assets provide labels for their abilities. Starforged asset abilities do not have labels.",
          "type": "string",
          "title": "Label"
        },
        "Moves": {
          "description": "New moves added by this asset ability.",
          "type": "array",
          "items": { "$ref": "#/definitions/Move" },
          "title": "Moves"
        },
        "Inputs": {
          "description": "User inputs (text, clocks, etc) associated with this asset ability.",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              { "$ref": "#/definitions/InputClock" },
              { "$ref": "#/definitions/InputNumber" },
              { "$ref": "#/definitions/InputSelect" },
              { "$ref": "#/definitions/InputText" }
            ]
          },
          "defaultProperties": [],
          "title": "Inputs"
        },
        "Alter moves": {
          "description": "Information on how this ability alters moves when enabled.",
          "type": "array",
          "items": { "$ref": "#/definitions/AlterMove" },
          "title": "Alter moves"
        },
        "Alter properties": {
          "description": "Information on how this ability alters its parent asset when enabled.",
          "$ref": "#/definitions/AssetAlterProperties",
          "title": "Alter properties"
        },
        "Alter momentum": {
          "description": "Information on how this ability alters its owner's momentum (triggers an effect on burn, on reset, etc)",
          "$ref": "#/definitions/AlterMomentum",
          "title": "Alter momentum"
        },
        "Enabled": {
          "description": "Whether the asset ability is enabled or not. In most cases, the first asset ability defaults to 'true' and the others to 'false'. If none of an asset's abilities are set to 'true', the player can pick which the ability they start with when purchasing the asset.",
          "type": "boolean",
          "title": "Enabled"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AlterMomentum": {
      "title": "AlterMomentum",
      "type": "object",
      "properties": {
        "Burn": {
          "description": "Information on how the player's momentum burn is altered.",
          "type": "array",
          "items": { "$ref": "#/definitions/AlterMomentumBurn" },
          "title": "Burn"
        },
        "Reset": {
          "description": "Information on how the player's momentum reset is altered.",
          "type": "array",
          "items": { "$ref": "#/definitions/AlterMomentumReset" },
          "title": "Reset"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+$",
          "type": "string",
          "title": "$id"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id"]
    },
    "AlterMomentumBurn": {
      "title": "AlterMomentumBurn",
      "type": "object",
      "properties": {
        "Trigger": {
          "$ref": "#/definitions/HasText",
          "description": "The trigger condition for altering the PC's momentum burn.",
          "title": "Trigger"
        },
        "Effect": {
          "$ref": "#/definitions/HasText",
          "description": "The effect altering the PC's momentum burn.",
          "title": "Effect"
        },
        "Outcomes": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Outcomes"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+$",
          "type": "string",
          "title": "$id"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Effect", "Trigger"]
    },
    "HasText": {
      "description": "Interface for items that reproduce Starforged rules text in markdown.",
      "title": "HasText",
      "type": "object",
      "properties": {
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+$",
          "type": "string",
          "title": "$id"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Text"]
    },
    "AlterMomentumReset": {
      "title": "AlterMomentumReset",
      "type": "object",
      "properties": {
        "Trigger": {
          "$ref": "#/definitions/HasText",
          "description": "The trigger condition for altering the PC's momentum reset.",
          "title": "Trigger"
        },
        "Value": {
          "description": "The amount by which the PC's momentum reset is change.",
          "type": "integer",
          "title": "Value"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+$",
          "type": "string",
          "title": "$id"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Trigger", "Value"]
    },
    "AssetAlterPropertiesAttachment": {
      "title": "AssetAlterPropertiesAttachment",
      "type": "object",
      "properties": {
        "Asset types": {
          "description": "The type of asset that this asset accepts as attachments.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Asset types"
        },
        "Max": {
          "description": "The maximum number of attached assets accepted by this asset. If undefined or null, there is no maximum.",
          "type": ["null", "integer"],
          "title": "Max"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AssetAlterPropertiesConditionMeter": {
      "title": "AssetAlterPropertiesConditionMeter",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+/condition_meter$",
          "type": "string",
          "title": "$id"
        },
        "Min": {
          "description": "The minimum value of the meter. Usually this is 0. Momentum is currently the only exception to this and goes as low as -6.",
          "default": 0,
          "type": "integer",
          "title": "Min"
        },
        "Max": {
          "description": "The maximum value of the meter.",
          "default": 5,
          "type": "integer",
          "title": "Max"
        },
        "Conditions": {
          "description": "The conditions that can apply to this meter.",
          "type": "array",
          "items": {
            "description": "Conditions (such as impacts) that can apply to asset cards with condition meters. These are typically presented as tick boxes on the asset card.",
            "enum": ["battered", "cursed", "out of action", "wrecked"],
            "type": "string"
          },
          "title": "Conditions"
        },
        "Aliases": {
          "description": "Certain common types of asset meters, like companion health and vehicle integrity, are collectively referenced by {@link MoveTriggerOptionAction.Using}. The array will include an appropriate alias if that is the case.",
          "type": "array",
          "items": {
            "description": "Names of non-player condition meters (for e.g. companions and vehicles) that are referenced by moves and other assets.\nIf an asset condition meter can be used in this manner, the alias is included in its Aliases array.",
            "enum": [
              "attached asset meter",
              "command vehicle integrity",
              "companion health",
              "incidental vehicle integrity",
              "support vehicle integrity",
              "vehicle integrity"
            ],
            "type": "string"
          },
          "title": "Aliases"
        },
        "Value": {
          "description": "The initial value of the meter.",
          "type": "integer",
          "title": "Value"
        },
        "Rollable": {
          "description": "Whether the meter value can be used in place of a stat in an action roll.",
          "type": "boolean",
          "title": "Rollable"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "pattern": "^[a-z].+$",
          "type": "string",
          "title": "Label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "TitleCaseTitle_2": { "title": "TitleCaseTitle_2", "type": "undefined" },
    "Display_3": {
      "description": "Interface for data relevant to an item's display/rendering.",
      "title": "Display_3",
      "type": "undefined"
    },
    "Source_2": {
      "description": "Interface representing data on this item's source. For 'canonical' content, this is usually a book with numbered pages, but it might also be a link to a web site.",
      "title": "Source_2",
      "type": "undefined"
    },
    "AssetUsage_1": { "title": "AssetUsage_1", "type": "undefined" },
    "ConditionMeter": {
      "description": "Interface representing a condition meter such as health, spirit, supply.",
      "title": "ConditionMeter",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_-]+/[a-z_-]+/condition_meter$",
          "type": "string",
          "title": "$id"
        },
        "Min": {
          "description": "The minimum value of the meter. Usually this is 0. Momentum is currently the only exception to this and goes as low as -6.",
          "default": 0,
          "type": "integer",
          "title": "Min"
        },
        "Max": {
          "description": "The maximum value of the meter.",
          "default": 5,
          "type": "integer",
          "title": "Max"
        },
        "Conditions": {
          "description": "The conditions that can apply to this meter.",
          "type": "array",
          "items": {
            "description": "Conditions (such as impacts) that can apply to asset cards with condition meters. These are typically presented as tick boxes on the asset card.",
            "enum": ["battered", "cursed", "out of action", "wrecked"],
            "type": "string"
          },
          "title": "Conditions"
        },
        "Aliases": {
          "description": "Certain common types of asset meters, like companion health and vehicle integrity, are collectively referenced by {@link MoveTriggerOptionAction.Using}. The array will include an appropriate alias if that is the case.",
          "type": "array",
          "items": {
            "description": "Names of non-player condition meters (for e.g. companions and vehicles) that are referenced by moves and other assets.\nIf an asset condition meter can be used in this manner, the alias is included in its Aliases array.",
            "enum": [
              "attached asset meter",
              "command vehicle integrity",
              "companion health",
              "incidental vehicle integrity",
              "support vehicle integrity",
              "vehicle integrity"
            ],
            "type": "string"
          },
          "title": "Aliases"
        },
        "Value": {
          "description": "The initial value of the meter.",
          "type": "integer",
          "title": "Value"
        },
        "Rollable": {
          "description": "Whether the meter value can be used in place of a stat in an action roll.",
          "type": "boolean",
          "title": "Rollable"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "pattern": "^[a-z].+$",
          "type": "string",
          "title": "Label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Conditions",
        "Label",
        "Max",
        "Min",
        "Rollable",
        "Value"
      ]
    },
    "MoveCategory": {
      "description": "Represents a category of moves such as \"Session Moves\" or \"Combat Moves\", and serves as a container for moves within that category.",
      "title": "MoveCategory",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/moves/[a-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Moves": {
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/Move" },
          "defaultProperties": [],
          "title": "Moves"
        },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Description": {
          "description": "A user-facing markdown description of the item, consisting of one or more paragraphs.",
          "type": "string",
          "title": "Description"
        },
        "Display": {
          "$ref": "#/definitions/Display",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Optional": {
          "description": "Whether or not the source material presents this rules item as optional.",
          "default": false,
          "type": "boolean",
          "title": "Optional"
        },
        "Title": { "$ref": "#/definitions/Title", "title": "Title" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": [
        "$id",
        "Description",
        "Display",
        "Moves",
        "Optional",
        "Source",
        "Title"
      ]
    },
    "OracleSet": {
      "description": "Represents an oracle set: a grouping that can contain both {@link OracleTable}s and other instances of {@link OracleSet}, but doesn't have its own `Table` key.",
      "title": "OracleSet",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(ironsworn|starforged)/oracles/[a-z_-]+(/[a-z_-]+)?$",
          "type": "string",
          "title": "$id"
        },
        "Sample names": {
          "description": "A list of sample names for this category. Only used by Planetary Class {@link OracleSet}s.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Sample names"
        },
        "Sets": {
          "description": "Oracle sets contained by this set.\n\nThis key appears only on {@link OracleSet}, and thus only on 'branch' nodes of the oracle hierarchy 'tree'.",
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/OracleSet" },
          "defaultProperties": [],
          "title": "Sets"
        },
        "Tables": {
          "description": "Oracle tables contained by this set.\n\nThis key appears only on {@link OracleSet}, and thus only on 'branch' nodes of the oracle hierarchy 'tree'.",
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/OracleTable" },
          "defaultProperties": [],
          "title": "Tables"
        },
        "Display": {
          "$ref": "#/definitions/OracleSetDisplay",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Title": { "$ref": "#/definitions/Title", "title": "Title" },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Usage": {
          "description": "Information on the usage of this oracle: recommended number of rolls, etc.",
          "$ref": "#/definitions/OracleUsage",
          "title": "Usage"
        },
        "Summary": {
          "description": "A user-facing markdown summary of the item. Summary is shorter than {@link HasDescription| Description}, when they're both present.",
          "type": "string",
          "title": "Summary"
        },
        "Description": {
          "description": "A user-facing markdown description of the item, consisting of one or more paragraphs.",
          "type": "string",
          "title": "Description"
        },
        "Content": {
          "$ref": "#/definitions/OracleContent_2",
          "description": "Metadata that describes an oracle's semantic or lexical content.",
          "title": "Content"
        },
        "Ancestors": {
          "description": "An array containing the ID of every {@link OracleSet} ancestor of this item. The array is sorted from the most recent ancestor (e.g. one level up) to the most distant.",
          "pattern": "^(ironsworn|starforged)/oracles/[a-z_-/]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Ancestors"
        },
        "On a match": {
          "description": "Describes the match behaviour of this oracle's table, if any, and provides a `Text` string describing it. Only appears on a handful of move oracles like Ask the Oracle and Advance a Threat.\n\nThis key appears only on {@link OracleTable}s that have a `Table`.",
          "$ref": "#/definitions/OracleMatch",
          "title": "On a match"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Ancestors", "Display", "Source", "Title"]
    },
    "OracleTable": {
      "description": "Represents an oracle that has a `Table` composed of {@link OracleTableRow} objects. Appears only as a 'leaf' note on the oracle hierarchy 'tree'.",
      "title": "OracleTable",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(ironsworn|starforged)/oracles/[a-z_-]+((/[a-z_-]+)+)?$",
          "type": "string",
          "title": "$id"
        },
        "Title": { "$ref": "#/definitions/Title", "title": "Title" },
        "Display": {
          "$ref": "#/definitions/OracleTableDisplay",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Table": {
          "description": "Represents a single oracle table, where 'table' is defined as being something with a single roll range.\n\nThis key appears only on {@link OracleSet}, and thus only on 'leaf' nodes of the oracle hierarchy 'tree'.",
          "type": "array",
          "items": {
            "anyOf": [
              { "$ref": "#/definitions/OracleTableRow" },
              { "$ref": "#/definitions/RowNullStub" }
            ]
          },
          "title": "Table"
        },
        "On a match": {
          "description": "Describes the match behaviour of this oracle's table, if any, and provides a `Text` string describing it. Only appears on a handful of move oracles like Ask the Oracle and Advance a Threat.",
          "$ref": "#/definitions/OracleMatch",
          "title": "On a match"
        },
        "Source": {
          "$ref": "#/definitions/Source",
          "description": "Information on this item's source.",
          "title": "Source"
        },
        "Usage": {
          "description": "Information on the usage of this oracle: recommended number of rolls, etc.",
          "$ref": "#/definitions/OracleUsage",
          "title": "Usage"
        },
        "Summary": {
          "description": "A user-facing markdown summary of the item. Summary is shorter than {@link HasDescription| Description}, when they're both present.",
          "type": "string",
          "title": "Summary"
        },
        "Description": {
          "description": "A user-facing markdown description of the item, consisting of one or more paragraphs.",
          "type": "string",
          "title": "Description"
        },
        "Content": {
          "$ref": "#/definitions/OracleContent_2",
          "description": "Metadata that describes an oracle's semantic or lexical content.",
          "title": "Content"
        },
        "Ancestors": {
          "description": "An array containing the ID of every {@link OracleSet} ancestor of this item. The array is sorted from the most recent ancestor (e.g. one level up) to the most distant.",
          "pattern": "^(ironsworn|starforged)/oracles/[a-z_-/]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Ancestors"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Ancestors", "Display", "Source", "Table", "Title"]
    },
    "OracleTableDisplay": {
      "description": "Information on displaying {@link OracleTable}, including information on its rendering in the original text.",
      "title": "OracleTableDisplay",
      "type": "object",
      "properties": {
        "Columns": {
          "description": "Information on the rendering of this table when it's provided as a standalone table (as opposed to a column of another table).\n\nIf close correspondence to the text's table rendering is desired, `Display[\"Column of\"]` should be preferred (when present).",
          "type": "array",
          "items": [{ "$ref": "#/definitions/TableColumnRoll" }],
          "minItems": 1,
          "additionalItems": {
            "anyOf": [
              { "$ref": "#/definitions/TableColumnRoll" },
              { "$ref": "#/definitions/TableColumnText" }
            ]
          },
          "title": "Columns"
        },
        "Column of": {
          "description": "If this oracle's `Table` should be rendered as a column of another table, it's indicated here.\n\nIf `undefined`, this table is rendered as a standalone table.\n\nIf this is set (and the rendering such 'embedded' columns is desired), then `Display.Table` may be safely ignored.",
          "type": "string",
          "title": "Column of"
        },
        "Embed in": {
          "description": "This table is displayed as embedded in a row of another table.",
          "type": "string",
          "title": "Embed in"
        },
        "Icon": {
          "description": "A URL pointing to a single SVG icon.",
          "pattern": "^img/vector/[A-z-_0-9/]+\\.svg$",
          "type": "string",
          "title": "Icon"
        },
        "Images": {
          "description": "An array of URLs pointing to one or more WEBP images.",
          "pattern": "^img/raster/[A-z-_0-9/]+\\.webp$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Images"
        },
        "Color": {
          "description": "A hex color associated with this item, for use as e.g. an accent color in its display.",
          "pattern": "^#[A-f0-9][A-f0-9][A-f0-9][A-f0-9][A-f0-9][A-f0-9]$",
          "type": "string",
          "title": "Color"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+$",
          "type": "string",
          "title": "$id"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Columns"]
    },
    "TableColumnRoll": {
      "title": "TableColumnRoll",
      "type": "object",
      "properties": {
        "Label": {
          "description": "The label or header text to use for this column.",
          "default": "Roll",
          "type": "string",
          "title": "Label"
        },
        "Type": {
          "$ref": "#/definitions/TableColumnType.Range",
          "title": "Type"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+$",
          "type": "string",
          "title": "$id"
        },
        "Content": {
          "description": "The ID of the {@link OracleTable} whose {@link OracleTable.Table} content will be displayed in the table.",
          "type": "string",
          "title": "Content"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Content", "Label", "Type"]
    },
    "TableColumnType.Range": {
      "title": "TableColumnType.Range",
      "type": "string",
      "enum": ["dice range"]
    },
    "TableColumnText": {
      "description": "Describes the rendering of a table column that displays textual content (as opposed to {@link TableColumnRoll}, which displays numerical ranges).",
      "title": "TableColumnText",
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/TableColumnType.String",
          "title": "Type"
        },
        "Label": {
          "description": "The label or header text to use for this column.",
          "default": "Result",
          "type": "string",
          "title": "Label"
        },
        "Key": {
          "$ref": "#/definitions/KeysWithValuesOfType",
          "description": "The key of each {@link OracleTableRow} in the {@link OracleTable.Table}, whose string value is displayed in the rendered table.",
          "default": "Result",
          "title": "Key"
        },
        "Content": {
          "description": "The ID of the {@link OracleTable} whose {@link OracleTable.Table} content will be displayed in the table.",
          "type": "string",
          "title": "Content"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+$",
          "type": "string",
          "title": "$id"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Content", "Key", "Label", "Type"]
    },
    "TableColumnType.String": {
      "title": "TableColumnType.String",
      "type": "string",
      "enum": ["string"]
    },
    "KeysWithValuesOfType": {
      "title": "KeysWithValuesOfType",
      "enum": [
        "$id",
        "Attributes",
        "Ceiling",
        "Content",
        "Display",
        "Floor",
        "Game objects",
        "Multiple rolls",
        "Oracle rolls",
        "Result",
        "Roll template",
        "Subtable",
        "Suggestions",
        "Summary"
      ],
      "type": "string"
    },
    "RowNullStub": {
      "description": "A row stub that has no dice range assigned to it, but still contains user-facing strings that are relevant to rendering the table. Typically, their dice range appears as \"--\" in the book.",
      "title": "RowNullStub",
      "type": "object",
      "properties": {
        "Floor": {
          "description": "The low end of the dice range for this row.",
          "type": "null",
          "title": "Floor"
        },
        "Ceiling": {
          "description": "The high end of the dice range for this row.",
          "type": "null",
          "title": "Ceiling"
        },
        "Result": {
          "description": "The primary result text for the row, annotated in Markdown.\nIn the book, this is frequently the only column aside from the roll column. Otherwise, it is the first column.\nSome tables label this column as something other than Result; see the parent (or grandparent) Oracle.Display for more information.",
          "type": "string",
          "title": "Result"
        },
        "Summary": {
          "description": "A secondary markdown string that must be presented to the user for the implementation to be complete, but may benefit from progressive disclosure (such as a collapsible element, popover/tooltip, etc).\n\nGenerally, `Summary` is longer than `Result`.\n\nSome tables label this column as something other than `Result`; see the parent (or grandparent) `Oracle.Display.Table` for more information.\n\n`null` is used in cases where an 'empty' `Summary` exists (example: Starship Type, p. 326). In the book, these table cells are rendered with the text `--` (and this is the recommended placeholder for tabular display). For display as a single result (e.g. VTT table roll output), however, `null` values can be safely omitted.",
          "type": ["null", "string"],
          "title": "Summary"
        },
        "Suggestions": {
          "$ref": "#/definitions/Suggestions",
          "description": "\"Non-canonical\" suggestions of related items. They might be convenient to present to the user, but in most implementations rolling them automatically is not recommended.",
          "title": "Suggestions"
        },
        "Display": {
          "$ref": "#/definitions/Display_1",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Content": {
          "$ref": "#/definitions/OracleContent",
          "description": "Metadata that describes an oracle's semantic or lexical content.",
          "title": "Content"
        },
        "Roll template": {
          "$ref": "#/definitions/RollTemplate",
          "description": "Describes the string values of this item that should be replaced with template strings and filled with the results of one or more oracle rolls.",
          "title": "Roll template"
        },
        "Game objects": {
          "description": "Any game objects that are explicitly pointed to by the original text. For most implementations, it is *not* recommended to generate them automatically - see \"Peeling the Onion\", p. 293.",
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/GameObject" }
            },
            { "type": "null" }
          ],
          "title": "Game objects"
        },
        "Oracle rolls": {
          "description": "Additional oracle tables that should be rolled when this row is selected.",
          "pattern": "^(starforged|ironsworn)/oracles/[a-z_-]+/[a-z_-/]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Oracle rolls"
        },
        "Subtable": {
          "description": "A table to be rolled when this row is selected. If this row references an external oracle, the `Oracles` property is used instead.",
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/OracleTableRow" }
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TruthOptionSubtableRowStarforged"
              }
            }
          ],
          "title": "Subtable"
        },
        "Multiple rolls": {
          "description": "Data for rows that call for multiple rolls, e.g. on `Roll twice` results.",
          "$ref": "#/definitions/MultipleRolls",
          "title": "Multiple rolls"
        },
        "Attributes": {
          "description": "The attributes set by this row.",
          "type": "array",
          "items": { "$ref": "#/definitions/Attribute" },
          "title": "Attributes"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Ceiling", "Floor", "Result"]
    },
    "OracleMatch": {
      "title": "OracleMatch",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(ironsworn|starforged)/oracles/[a-z_-]+((/[a-z_-]+)+)?/on_a_match$",
          "type": "string",
          "title": "$id"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Text"]
    },
    "OracleUsage": {
      "description": "Describes the recommended usage of this item.",
      "title": "OracleUsage",
      "type": "object",
      "properties": {
        "Initial": {
          "description": "Whether this table should be included in the initial oracle rolls when generating a game object. This is a somewhat arbitrary recommendation, and may not be appropriate for all implementations (or all game situations). Rather it's a reasonable starting point in *most* cases.\n\nThat said, the game itself recommends **against** rolling all possible results at once (see \"Peeling the Onion\", p. 293, *Starforged*). If your goal is to implement the game 'as-written', consider how you might include some means of \"progressive disclosure\" of oracle results.\n\nMay be deprecated in the future in favour of dedicated object template information.",
          "type": "boolean",
          "title": "Initial"
        },
        "Suggestions": {
          "description": "\"Non-canonical\" suggestions of related items. They might be convenient to present to the user, but in most implementations rolling them automatically is not recommended.",
          "$ref": "#/definitions/Suggestions_1",
          "title": "Suggestions"
        },
        "Requires": {
          "description": "Prerequisites for this item.",
          "$ref": "#/definitions/Requirements",
          "title": "Requires"
        },
        "Min rolls": {
          "description": "The minimum number of rolls when using this oracle to create a game object, *if* this oracle is rolled. Assume it's 1 if not specified.",
          "type": "integer",
          "title": "Min rolls"
        },
        "Max rolls": {
          "description": "The maximum number of rolls when using this oracle to create a game object. Assume it's 1 if not specified.",
          "type": "integer",
          "title": "Max rolls"
        },
        "Repeatable": {
          "description": "Whether the table's standard use is iterative.  Common examples are Feature, Opportunity, and Peril tables, which are most often used repeatedly to describe different areas of/events in a place, rather than being assigned as a description of the place as a whole.\n\nMutually exclusive with `Max rolls`. If undefined, assume `false`.",
          "type": "boolean",
          "title": "Repeatable"
        },
        "Allow duplicates": {
          "description": "Whether multiple rolls (as in object generation, or with {@link MultipleRolls}) .",
          "type": "boolean",
          "title": "Allow duplicates"
        },
        "Sets": {
          "description": "Hints which attributes are set by this table.",
          "type": "array",
          "items": { "$ref": "#/definitions/AttributeChoices" },
          "title": "Sets"
        },
        "Roll template": {
          "$ref": "#/definitions/RollTemplate_2",
          "description": "Describes the string values of this item that should be replaced with template strings and filled with the results of one or more oracle rolls.",
          "title": "Roll template"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+$",
          "type": "string",
          "title": "$id"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "RollTemplate_2": {
      "description": "Describes the string keys of this item that should be replaced with template strings and filled with the results of one or more oracles.",
      "title": "RollTemplate_2",
      "$ref": "#/definitions/RollTemplate_1"
    },
    "OracleContent_2": {
      "description": "Interface for metadata that describes an oracle's semantic or lexical content.",
      "title": "OracleContent_2",
      "$ref": "#/definitions/OracleContent_1"
    },
    "OracleSetDisplay": {
      "description": "Information on displaying {@link OracleSet}, including information on its rendering in the original text.\n\nIf an {@link OracleSet} has `Columns`, it represents a \"supertable\" composed of multiple roll or string columns.",
      "title": "OracleSetDisplay",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+$",
          "type": "string",
          "title": "$id"
        },
        "Columns": {
          "description": "Information on the rendering of this table when it's provided as a standalone table (as opposed to a column of another table).\n\nIf close correspondence to the text's table rendering is desired, `Display[\"Column of\"]` should be preferred (when present).",
          "type": "array",
          "items": [{ "$ref": "#/definitions/TableColumnRoll" }],
          "minItems": 1,
          "additionalItems": {
            "anyOf": [
              { "$ref": "#/definitions/TableColumnRoll" },
              { "$ref": "#/definitions/TableColumnText" }
            ]
          },
          "title": "Columns"
        },
        "Icon": {
          "description": "A URL pointing to a single SVG icon.",
          "pattern": "^img/vector/[A-z-_0-9/]+\\.svg$",
          "type": "string",
          "title": "Icon"
        },
        "Images": {
          "description": "An array of URLs pointing to one or more WEBP images.",
          "pattern": "^img/raster/[A-z-_0-9/]+\\.webp$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Images"
        },
        "Color": {
          "description": "A hex color associated with this item, for use as e.g. an accent color in its display.",
          "pattern": "^#[A-f0-9][A-f0-9][A-f0-9][A-f0-9][A-f0-9][A-f0-9]$",
          "type": "string",
          "title": "Color"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id"]
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}
