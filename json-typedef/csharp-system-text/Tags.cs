// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Datasworn
{
    /// <summary>
    /// A dictionary of tags, keyed by the RulesetID that the tags are from.
    /// </summary>
    [JsonConverter(typeof(TagsJsonConverter))]
    public class Tags
    {
        /// <summary>
        /// The underlying data being wrapped.
        /// </summary>
        public IDictionary<string, IDictionary<string, Tag>> Value { get; set; }
    }

    public class TagsJsonConverter : JsonConverter<Tags>
    {
        public override Tags Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            return new Tags { Value = JsonSerializer.Deserialize<IDictionary<string, IDictionary<string, Tag>>>(ref reader, options) };
        }

        public override void Write(Utf8JsonWriter writer, Tags value, JsonSerializerOptions options)
        {
            JsonSerializer.Serialize<IDictionary<string, IDictionary<string, Tag>>>(writer, value.Value, options);
        }
    }
}
