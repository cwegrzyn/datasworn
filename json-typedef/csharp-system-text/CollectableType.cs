// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Datasworn
{
    [JsonConverter(typeof(CollectableTypeJsonConverter))]
    public enum CollectableType
    {
        Asset,

        AtlasEntry,

        Move,

        Npc,

        OracleRollable,
    }
    public class CollectableTypeJsonConverter : JsonConverter<CollectableType>
    {
        public override CollectableType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "asset":
                    return CollectableType.Asset;
                case "atlas_entry":
                    return CollectableType.AtlasEntry;
                case "move":
                    return CollectableType.Move;
                case "npc":
                    return CollectableType.Npc;
                case "oracle_rollable":
                    return CollectableType.OracleRollable;
                default:
                    throw new ArgumentException(String.Format("Bad CollectableType value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, CollectableType value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case CollectableType.Asset:
                    JsonSerializer.Serialize<string>(writer, "asset", options);
                    return;
                case CollectableType.AtlasEntry:
                    JsonSerializer.Serialize<string>(writer, "atlas_entry", options);
                    return;
                case CollectableType.Move:
                    JsonSerializer.Serialize<string>(writer, "move", options);
                    return;
                case CollectableType.Npc:
                    JsonSerializer.Serialize<string>(writer, "npc", options);
                    return;
                case CollectableType.OracleRollable:
                    JsonSerializer.Serialize<string>(writer, "oracle_rollable", options);
                    return;
            }
        }
    }
}
