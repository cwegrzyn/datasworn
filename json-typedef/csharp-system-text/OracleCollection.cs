// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Datasworn
{
    [JsonConverter(typeof(OracleCollectionJsonConverter))]
    public abstract class OracleCollection
    {
    }

    public class OracleCollectionJsonConverter : JsonConverter<OracleCollection>
    {
        public override OracleCollection Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            var readerCopy = reader;
            var tagValue = JsonDocument.ParseValue(ref reader).RootElement.GetProperty("oracle_type").GetString();

            switch (tagValue)
            {
                case "OracleTableSharedText3":
                    return JsonSerializer.Deserialize<OracleCollectionOracleTableSharedText3>(ref readerCopy, options);
                case "table_shared_rolls":
                    return JsonSerializer.Deserialize<OracleCollectionTableSharedRolls>(ref readerCopy, options);
                case "table_shared_text":
                    return JsonSerializer.Deserialize<OracleCollectionTableSharedText>(ref readerCopy, options);
                case "table_shared_text2":
                    return JsonSerializer.Deserialize<OracleCollectionTableSharedText2>(ref readerCopy, options);
                case "tables":
                    return JsonSerializer.Deserialize<OracleCollectionTables>(ref readerCopy, options);
                default:
                    throw new ArgumentException(String.Format("Bad OracleType value: {0}", tagValue));
            }
        }

        public override void Write(Utf8JsonWriter writer, OracleCollection value, JsonSerializerOptions options)
        {
            JsonSerializer.Serialize(writer, value, value.GetType(), options);
        }
    }
}
