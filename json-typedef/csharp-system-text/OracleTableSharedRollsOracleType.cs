// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Datasworn
{
    /// <summary>
    /// A table with one shared roll column, and multiple unique text columns.
    /// </summary>
    [JsonConverter(typeof(OracleTableSharedRollsOracleTypeJsonConverter))]
    public enum OracleTableSharedRollsOracleType
    {
        TableSharedRolls,
    }
    public class OracleTableSharedRollsOracleTypeJsonConverter : JsonConverter<OracleTableSharedRollsOracleType>
    {
        public override OracleTableSharedRollsOracleType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "table_shared_rolls":
                    return OracleTableSharedRollsOracleType.TableSharedRolls;
                default:
                    throw new ArgumentException(String.Format("Bad OracleTableSharedRollsOracleType value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, OracleTableSharedRollsOracleType value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case OracleTableSharedRollsOracleType.TableSharedRolls:
                    JsonSerializer.Serialize<string>(writer, "table_shared_rolls", options);
                    return;
            }
        }
    }
}
