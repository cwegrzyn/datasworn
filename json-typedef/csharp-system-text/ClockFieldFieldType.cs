// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Datasworn
{
    [JsonConverter(typeof(ClockFieldFieldTypeJsonConverter))]
    public enum ClockFieldFieldType
    {
        Clock,
    }
    public class ClockFieldFieldTypeJsonConverter : JsonConverter<ClockFieldFieldType>
    {
        public override ClockFieldFieldType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "clock":
                    return ClockFieldFieldType.Clock;
                default:
                    throw new ArgumentException(String.Format("Bad ClockFieldFieldType value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, ClockFieldFieldType value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case ClockFieldFieldType.Clock:
                    JsonSerializer.Serialize<string>(writer, "clock", options);
                    return;
            }
        }
    }
}
