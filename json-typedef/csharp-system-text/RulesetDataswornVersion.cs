// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Datasworn
{
    /// <summary>
    /// The version of the Datasworn format used by this data.
    /// </summary>
    [JsonConverter(typeof(RulesetDataswornVersionJsonConverter))]
    public enum RulesetDataswornVersion
    {
        DefaultName,
    }
    public class RulesetDataswornVersionJsonConverter : JsonConverter<RulesetDataswornVersion>
    {
        public override RulesetDataswornVersion Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "0.1.0":
                    return RulesetDataswornVersion.DefaultName;
                default:
                    throw new ArgumentException(String.Format("Bad RulesetDataswornVersion value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, RulesetDataswornVersion value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case RulesetDataswornVersion.DefaultName:
                    JsonSerializer.Serialize<string>(writer, "0.1.0", options);
                    return;
            }
        }
    }
}
