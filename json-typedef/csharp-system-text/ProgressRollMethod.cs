// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Datasworn
{
    [JsonConverter(typeof(ProgressRollMethodJsonConverter))]
    public enum ProgressRollMethod
    {
        Miss,

        ProgressRoll,

        StrongHit,

        WeakHit,
    }
    public class ProgressRollMethodJsonConverter : JsonConverter<ProgressRollMethod>
    {
        public override ProgressRollMethod Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "miss":
                    return ProgressRollMethod.Miss;
                case "progress_roll":
                    return ProgressRollMethod.ProgressRoll;
                case "strong_hit":
                    return ProgressRollMethod.StrongHit;
                case "weak_hit":
                    return ProgressRollMethod.WeakHit;
                default:
                    throw new ArgumentException(String.Format("Bad ProgressRollMethod value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, ProgressRollMethod value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case ProgressRollMethod.Miss:
                    JsonSerializer.Serialize<string>(writer, "miss", options);
                    return;
                case ProgressRollMethod.ProgressRoll:
                    JsonSerializer.Serialize<string>(writer, "progress_roll", options);
                    return;
                case ProgressRollMethod.StrongHit:
                    JsonSerializer.Serialize<string>(writer, "strong_hit", options);
                    return;
                case ProgressRollMethod.WeakHit:
                    JsonSerializer.Serialize<string>(writer, "weak_hit", options);
                    return;
            }
        }
    }
}
