// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Datasworn
{
    [JsonConverter(typeof(OracleColumnText3TypeJsonConverter))]
    public enum OracleColumnText3Type
    {
        OracleRollable,
    }
    public class OracleColumnText3TypeJsonConverter : JsonConverter<OracleColumnText3Type>
    {
        public override OracleColumnText3Type Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "oracle_rollable":
                    return OracleColumnText3Type.OracleRollable;
                default:
                    throw new ArgumentException(String.Format("Bad OracleColumnText3Type value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, OracleColumnText3Type value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case OracleColumnText3Type.OracleRollable:
                    JsonSerializer.Serialize<string>(writer, "oracle_rollable", options);
                    return;
            }
        }
    }
}
