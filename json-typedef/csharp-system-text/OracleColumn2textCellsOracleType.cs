// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Datasworn
{
    [JsonConverter(typeof(OracleColumn2textCellsOracleTypeJsonConverter))]
    public enum OracleColumn2textCellsOracleType
    {
        ColumnText2,
    }
    public class OracleColumn2textCellsOracleTypeJsonConverter : JsonConverter<OracleColumn2textCellsOracleType>
    {
        public override OracleColumn2textCellsOracleType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "column_text2":
                    return OracleColumn2textCellsOracleType.ColumnText2;
                default:
                    throw new ArgumentException(String.Format("Bad OracleColumn2textCellsOracleType value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, OracleColumn2textCellsOracleType value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case OracleColumn2textCellsOracleType.ColumnText2:
                    JsonSerializer.Serialize<string>(writer, "column_text2", options);
                    return;
            }
        }
    }
}
