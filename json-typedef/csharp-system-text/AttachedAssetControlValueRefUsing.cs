// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Datasworn
{
    /// <summary>
    /// A reference to the value of an attached asset control. For example, a
    /// Module asset could use this to roll using the `integrity` control of an
    /// attached Vehicle.
    /// </summary>
    [JsonConverter(typeof(AttachedAssetControlValueRefUsingJsonConverter))]
    public enum AttachedAssetControlValueRefUsing
    {
        AttachedAssetControl,
    }
    public class AttachedAssetControlValueRefUsingJsonConverter : JsonConverter<AttachedAssetControlValueRefUsing>
    {
        public override AttachedAssetControlValueRefUsing Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "attached_asset_control":
                    return AttachedAssetControlValueRefUsing.AttachedAssetControl;
                default:
                    throw new ArgumentException(String.Format("Bad AttachedAssetControlValueRefUsing value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, AttachedAssetControlValueRefUsing value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case AttachedAssetControlValueRefUsing.AttachedAssetControl:
                    JsonSerializer.Serialize<string>(writer, "attached_asset_control", options);
                    return;
            }
        }
    }
}
