// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Datasworn
{
    /// <summary>
    /// Special roll instructions to use when rolling multiple times on a single
    /// oracle table.
    /// </summary>
    [JsonConverter(typeof(OracleTableRollDuplicatesJsonConverter))]
    public enum OracleTableRollDuplicates
    {
        /// <summary>
        /// Duplicates should be kept.
        /// </summary>
        Keep,

        /// <summary>
        /// Duplicates should be kept, and they compound to make things worse.
        /// </summary>
        MakeItWorse,

        /// <summary>
        /// Duplicates should be re-rolled.
        /// </summary>
        Reroll,
    }
    public class OracleTableRollDuplicatesJsonConverter : JsonConverter<OracleTableRollDuplicates>
    {
        public override OracleTableRollDuplicates Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "keep":
                    return OracleTableRollDuplicates.Keep;
                case "make_it_worse":
                    return OracleTableRollDuplicates.MakeItWorse;
                case "reroll":
                    return OracleTableRollDuplicates.Reroll;
                default:
                    throw new ArgumentException(String.Format("Bad OracleTableRollDuplicates value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, OracleTableRollDuplicates value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case OracleTableRollDuplicates.Keep:
                    JsonSerializer.Serialize<string>(writer, "keep", options);
                    return;
                case OracleTableRollDuplicates.MakeItWorse:
                    JsonSerializer.Serialize<string>(writer, "make_it_worse", options);
                    return;
                case OracleTableRollDuplicates.Reroll:
                    JsonSerializer.Serialize<string>(writer, "reroll", options);
                    return;
            }
        }
    }
}
