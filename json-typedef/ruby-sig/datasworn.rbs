# Code generated by jtd-codegen for Ruby Type Signatures v0.1.1

module Datasworn

  class RulesPackage
    attr_accessor package_type: String

    def self.from_json_data: (untyped) -> RulesPackage
    def to_json_data: () -> untyped
  end

  class RulesPackageExpansion < RulesPackage
    attr_accessor datasworn_version: SemanticVersion
    attr_accessor id: ExpansionID
    attr_accessor ruleset: RulesetID
    attr_accessor assets: Hash[String, AssetType]?
    attr_accessor atlas: Hash[String, Atlas]?
    attr_accessor delve_sites: Hash[String, DelveSite]?
    attr_accessor moves: Hash[String, MoveCategory]?
    attr_accessor npcs: Hash[String, NpcCollection]?
    attr_accessor oracles: Hash[String, OracleCollection]?
    attr_accessor rarities: Hash[String, Rarity]?
    attr_accessor rules: RulesExpansion?
    attr_accessor site_domains: Hash[String, DelveSiteDomain]?
    attr_accessor site_themes: Hash[String, DelveSiteTheme]?
    attr_accessor truths: Hash[String, Truth]?

    def self.from_json_data: (untyped) -> RulesPackageExpansion
    def to_json_data: () -> untyped
  end

  class RulesPackageRuleset < RulesPackage
    attr_accessor assets: Hash[String, AssetType]
    attr_accessor datasworn_version: SemanticVersion
    attr_accessor id: RulesetID
    attr_accessor moves: Hash[String, MoveCategory]
    attr_accessor oracles: Hash[String, OracleCollection]
    attr_accessor rules: Rules
    attr_accessor atlas: Hash[String, Atlas]?
    attr_accessor delve_sites: Hash[String, DelveSite]?
    attr_accessor npcs: Hash[String, NpcCollection]?
    attr_accessor rarities: Hash[String, Rarity]?
    attr_accessor site_domains: Hash[String, DelveSiteDomain]?
    attr_accessor site_themes: Hash[String, DelveSiteTheme]?
    attr_accessor truths: Hash[String, Truth]?

    def self.from_json_data: (untyped) -> RulesPackageRuleset
    def to_json_data: () -> untyped
  end

  class ActionRollMethod
    attr_accessor value: String

    ALL: ActionRollMethod
    HIGHEST: ActionRollMethod
    LOWEST: ActionRollMethod
    MISS: ActionRollMethod
    PLAYER_CHOICE: ActionRollMethod
    STRONG_HIT: ActionRollMethod
    WEAK_HIT: ActionRollMethod

    def self.from_json_data: (untyped) -> ActionRollMethod
    def to_json_data: () -> untyped
  end

  class Asset
    attr_accessor abilities: Array[AssetAbility]
    attr_accessor asset_type: Label
    attr_accessor count_as_impact: bool
    attr_accessor id: AssetID
    attr_accessor name: Label
    attr_accessor shared: bool
    attr_accessor source: Source
    attr_accessor attachments: AssetAttachment?
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor controls: Hash[String, AssetControlField]?
    attr_accessor icon: SvgImageURL?
    attr_accessor options: Hash[String, AssetOptionField]?
    attr_accessor requirement: MarkdownString?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> Asset
    def to_json_data: () -> untyped
  end

  class AssetAbility
    attr_accessor enabled: bool
    attr_accessor id: AssetAbilityID
    attr_accessor text: MarkdownString
    attr_accessor controls: Hash[String, AssetAbilityControlField]?
    attr_accessor enhance_asset: AssetEnhancement?
    attr_accessor enhance_moves: Array[MoveEnhancement]?
    attr_accessor moves: Hash[String, Move]?
    attr_accessor name: Label?
    attr_accessor options: Hash[String, AssetAbilityOptionField]?

    def self.from_json_data: (untyped) -> AssetAbility
    def to_json_data: () -> untyped
  end

  class AssetAbilityControlField
    attr_accessor field_type: String

    def self.from_json_data: (untyped) -> AssetAbilityControlField
    def to_json_data: () -> untyped
  end

  class AssetAbilityControlFieldCheckbox < AssetAbilityControlField
    attr_accessor disables_asset: bool
    attr_accessor id: AssetAbilityControlFieldID
    attr_accessor is_impact: bool
    attr_accessor label: InputLabel
    attr_accessor value: bool
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetAbilityControlFieldCheckbox
    def to_json_data: () -> untyped
  end

  class AssetAbilityControlFieldClock < AssetAbilityControlField
    attr_accessor id: AssetAbilityControlFieldID
    attr_accessor label: InputLabel
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor value: Integer
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetAbilityControlFieldClock
    def to_json_data: () -> untyped
  end

  class AssetAbilityControlFieldCounter < AssetAbilityControlField
    attr_accessor id: AssetAbilityControlFieldID
    attr_accessor label: InputLabel
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor value: Integer
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetAbilityControlFieldCounter
    def to_json_data: () -> untyped
  end

  class AssetAbilityControlFieldID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetAbilityControlFieldID
    def to_json_data: () -> untyped
  end

  class AssetAbilityID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetAbilityID
    def to_json_data: () -> untyped
  end

  class AssetAbilityOptionField
    attr_accessor field_type: String

    def self.from_json_data: (untyped) -> AssetAbilityOptionField
    def to_json_data: () -> untyped
  end

  class AssetAbilityOptionFieldText < AssetAbilityOptionField
    attr_accessor id: AssetAbilityOptionFieldID
    attr_accessor label: InputLabel
    attr_accessor value: String
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetAbilityOptionFieldText
    def to_json_data: () -> untyped
  end

  class AssetAbilityOptionFieldID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetAbilityOptionFieldID
    def to_json_data: () -> untyped
  end

  class AssetAttachment
    attr_accessor assets: Array[AssetIDWildcard]
    attr_accessor max: Integer

    def self.from_json_data: (untyped) -> AssetAttachment
    def to_json_data: () -> untyped
  end

  class AssetConditionMeterControlField
    attr_accessor field_type: String

    def self.from_json_data: (untyped) -> AssetConditionMeterControlField
    def to_json_data: () -> untyped
  end

  class AssetConditionMeterControlFieldCardFlip < AssetConditionMeterControlField
    attr_accessor disables_asset: bool
    attr_accessor id: AssetConditionMeterControlFieldID
    attr_accessor is_impact: bool
    attr_accessor label: InputLabel
    attr_accessor value: bool
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetConditionMeterControlFieldCardFlip
    def to_json_data: () -> untyped
  end

  class AssetConditionMeterControlFieldCheckbox < AssetConditionMeterControlField
    attr_accessor disables_asset: bool
    attr_accessor id: AssetConditionMeterControlFieldID
    attr_accessor is_impact: bool
    attr_accessor label: InputLabel
    attr_accessor value: bool
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetConditionMeterControlFieldCheckbox
    def to_json_data: () -> untyped
  end

  class AssetConditionMeterControlFieldID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetConditionMeterControlFieldID
    def to_json_data: () -> untyped
  end

  class AssetControlField
    attr_accessor field_type: String

    def self.from_json_data: (untyped) -> AssetControlField
    def to_json_data: () -> untyped
  end

  class AssetControlFieldCardFlip < AssetControlField
    attr_accessor disables_asset: bool
    attr_accessor id: AssetControlFieldID
    attr_accessor is_impact: bool
    attr_accessor label: InputLabel
    attr_accessor value: bool
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetControlFieldCardFlip
    def to_json_data: () -> untyped
  end

  class AssetControlFieldCheckbox < AssetControlField
    attr_accessor disables_asset: bool
    attr_accessor id: AssetControlFieldID
    attr_accessor is_impact: bool
    attr_accessor label: InputLabel
    attr_accessor value: bool
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetControlFieldCheckbox
    def to_json_data: () -> untyped
  end

  class AssetControlFieldConditionMeterMoves
    attr_accessor recover: Array[MoveIDWildcard]?
    attr_accessor suffer: Array[MoveIDWildcard]?

    def self.from_json_data: (untyped) -> AssetControlFieldConditionMeterMoves
    def to_json_data: () -> untyped
  end

  class AssetControlFieldConditionMeter < AssetControlField
    attr_accessor id: AssetControlFieldID
    attr_accessor label: InputLabel
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor value: Integer
    attr_accessor controls: Hash[String, AssetConditionMeterControlField]?
    attr_accessor icon: SvgImageURL?
    attr_accessor moves: AssetControlFieldConditionMeterMoves?

    def self.from_json_data: (untyped) -> AssetControlFieldConditionMeter
    def to_json_data: () -> untyped
  end

  class AssetControlFieldSelectEnhancementChoice
    attr_accessor choice_type: String

    def self.from_json_data: (untyped) -> AssetControlFieldSelectEnhancementChoice
    def to_json_data: () -> untyped
  end

  class AssetControlFieldSelectEnhancementChoiceChoice < AssetControlFieldSelectEnhancementChoice
    attr_accessor label: InputLabel
    attr_accessor enhance_asset: AssetEnhancement?
    attr_accessor enhance_moves: Array[MoveEnhancement]?

    def self.from_json_data: (untyped) -> AssetControlFieldSelectEnhancementChoiceChoice
    def to_json_data: () -> untyped
  end

  class AssetControlFieldSelectEnhancementChoiceChoiceGroup < AssetControlFieldSelectEnhancementChoice
    attr_accessor choices: Hash[String, SelectEnhancementFieldChoice]
    attr_accessor name: InputLabel

    def self.from_json_data: (untyped) -> AssetControlFieldSelectEnhancementChoiceChoiceGroup
    def to_json_data: () -> untyped
  end

  class AssetControlFieldSelectEnhancement < AssetControlField
    attr_accessor choices: Hash[String, AssetControlFieldSelectEnhancementChoice]
    attr_accessor id: AssetControlFieldID
    attr_accessor label: InputLabel
    attr_accessor value: DictKey
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetControlFieldSelectEnhancement
    def to_json_data: () -> untyped
  end

  class AssetControlFieldEnhancement
    attr_accessor field_type: String

    def self.from_json_data: (untyped) -> AssetControlFieldEnhancement
    def to_json_data: () -> untyped
  end

  class AssetControlFieldEnhancementConditionMeter < AssetControlFieldEnhancement
    attr_accessor max: Integer

    def self.from_json_data: (untyped) -> AssetControlFieldEnhancementConditionMeter
    def to_json_data: () -> untyped
  end

  class AssetControlFieldID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetControlFieldID
    def to_json_data: () -> untyped
  end

  class AssetControlFieldIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetControlFieldIDWildcard
    def to_json_data: () -> untyped
  end

  class AssetEnhancement
    attr_accessor attachments: AssetAttachment?
    attr_accessor controls: Hash[String, AssetControlFieldEnhancement]?
    attr_accessor count_as_impact: bool?
    attr_accessor shared: bool?
    attr_accessor suggestions: Suggestions?

    def self.from_json_data: (untyped) -> AssetEnhancement
    def to_json_data: () -> untyped
  end

  class AssetID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetID
    def to_json_data: () -> untyped
  end

  class AssetIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetIDWildcard
    def to_json_data: () -> untyped
  end

  class AssetOptionField
    attr_accessor field_type: String

    def self.from_json_data: (untyped) -> AssetOptionField
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldSelectEnhancementChoice
    attr_accessor choice_type: String

    def self.from_json_data: (untyped) -> AssetOptionFieldSelectEnhancementChoice
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldSelectEnhancementChoiceChoice < AssetOptionFieldSelectEnhancementChoice
    attr_accessor label: InputLabel
    attr_accessor enhance_asset: AssetEnhancement?
    attr_accessor enhance_moves: Array[MoveEnhancement]?

    def self.from_json_data: (untyped) -> AssetOptionFieldSelectEnhancementChoiceChoice
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldSelectEnhancementChoiceChoiceGroup < AssetOptionFieldSelectEnhancementChoice
    attr_accessor choices: Hash[String, SelectEnhancementFieldChoice]
    attr_accessor name: InputLabel

    def self.from_json_data: (untyped) -> AssetOptionFieldSelectEnhancementChoiceChoiceGroup
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldSelectEnhancement < AssetOptionField
    attr_accessor choices: Hash[String, AssetOptionFieldSelectEnhancementChoice]
    attr_accessor id: AssetOptionFieldID
    attr_accessor label: InputLabel
    attr_accessor value: DictKey
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetOptionFieldSelectEnhancement
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldSelectValue < AssetOptionField
    attr_accessor choices: Hash[String, SelectValueFieldChoice]
    attr_accessor id: AssetOptionFieldID
    attr_accessor label: InputLabel
    attr_accessor value: DictKey
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetOptionFieldSelectValue
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldText < AssetOptionField
    attr_accessor id: AssetOptionFieldID
    attr_accessor label: InputLabel
    attr_accessor value: String
    attr_accessor icon: SvgImageURL?

    def self.from_json_data: (untyped) -> AssetOptionFieldText
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetOptionFieldID
    def to_json_data: () -> untyped
  end

  class AssetOptionFieldIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetOptionFieldIDWildcard
    def to_json_data: () -> untyped
  end

  class AssetType
    attr_accessor id: AssetTypeID
    attr_accessor name: Label
    attr_accessor source: Source
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor contents: Hash[String, Asset]?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: AssetTypeID?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: AssetTypeID?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> AssetType
    def to_json_data: () -> untyped
  end

  class AssetTypeID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AssetTypeID
    def to_json_data: () -> untyped
  end

  class Atlas
    attr_accessor id: AtlasID
    attr_accessor name: Label
    attr_accessor source: Source
    attr_accessor canonical_name: Label?
    attr_accessor collections: Hash[String, Atlas]?
    attr_accessor color: CSSColor?
    attr_accessor contents: Hash[String, AtlasEntry]?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: AtlasID?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: AtlasID?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> Atlas
    def to_json_data: () -> untyped
  end

  class AtlasEntry
    attr_accessor description: MarkdownString
    attr_accessor features: Array[MarkdownString]
    attr_accessor id: AtlasEntryID
    attr_accessor name: Label
    attr_accessor source: Source
    attr_accessor canonical_name: Label?
    attr_accessor quest_starter: MarkdownString?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Hash[String, Hash[String, String]]?
    attr_accessor your_truth: MarkdownString?

    def self.from_json_data: (untyped) -> AtlasEntry
    def to_json_data: () -> untyped
  end

  class AtlasEntryID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AtlasEntryID
    def to_json_data: () -> untyped
  end

  class AtlasEntryIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AtlasEntryIDWildcard
    def to_json_data: () -> untyped
  end

  class AtlasID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AtlasID
    def to_json_data: () -> untyped
  end

  class AtlasIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> AtlasIDWildcard
    def to_json_data: () -> untyped
  end

  class AuthorInfo
    attr_accessor name: String
    attr_accessor email: String?
    attr_accessor url: String?

    def self.from_json_data: (untyped) -> AuthorInfo
    def to_json_data: () -> untyped
  end

  class ChallengeRank
    attr_accessor value: Integer

    def self.from_json_data: (untyped) -> ChallengeRank
    def to_json_data: () -> untyped
  end

  class ConditionMeterKey
    attr_accessor value: DictKey

    def self.from_json_data: (untyped) -> ConditionMeterKey
    def to_json_data: () -> untyped
  end

  class ConditionMeterRule
    attr_accessor description: MarkdownString
    attr_accessor label: InputLabel
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor shared: bool
    attr_accessor value: Integer

    def self.from_json_data: (untyped) -> ConditionMeterRule
    def to_json_data: () -> untyped
  end

  class ConditionMeterRuleID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> ConditionMeterRuleID
    def to_json_data: () -> untyped
  end

  class CSSColor
    attr_accessor value: String

    def self.from_json_data: (untyped) -> CSSColor
    def to_json_data: () -> untyped
  end

  class DelveSite
    attr_accessor denizens: Array[DelveSiteDenizen]
    attr_accessor description: MarkdownString
    attr_accessor domain: DelveSiteDomainID
    attr_accessor id: DelveSiteID
    attr_accessor name: Label
    attr_accessor rank: ChallengeRank
    attr_accessor source: Source
    attr_accessor theme: DelveSiteThemeID
    attr_accessor canonical_name: Label?
    attr_accessor extra_card: String?
    attr_accessor icon: SvgImageURL?
    attr_accessor region: AtlasEntryID?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> DelveSite
    def to_json_data: () -> untyped
  end

  class DelveSiteDenizen
    attr_accessor frequency: DelveSiteDenizenFrequency
    attr_accessor id: DelveSiteDenizenID
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor name: Label?
    attr_accessor npc: NpcID?

    def self.from_json_data: (untyped) -> DelveSiteDenizen
    def to_json_data: () -> untyped
  end

  class DelveSiteDenizenFrequency
    attr_accessor value: String

    COMMON: DelveSiteDenizenFrequency
    RARE: DelveSiteDenizenFrequency
    UNCOMMON: DelveSiteDenizenFrequency
    UNFORESEEN: DelveSiteDenizenFrequency
    VERY_COMMON: DelveSiteDenizenFrequency

    def self.from_json_data: (untyped) -> DelveSiteDenizenFrequency
    def to_json_data: () -> untyped
  end

  class DelveSiteDenizenID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteDenizenID
    def to_json_data: () -> untyped
  end

  class DelveSiteDomain
    attr_accessor dangers: Array[DelveSiteDomainDangerRow]
    attr_accessor features: Array[DelveSiteDomainFeatureRow]
    attr_accessor id: DelveSiteDomainID
    attr_accessor name: Label
    attr_accessor source: Source
    attr_accessor summary: MarkdownString
    attr_accessor canonical_name: Label?
    attr_accessor description: MarkdownString?
    attr_accessor icon: SvgImageURL?
    attr_accessor name_oracle: OracleTableID?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> DelveSiteDomain
    def to_json_data: () -> untyped
  end

  class DelveSiteDomainDangerRow
    attr_accessor id: DomainDangerRowID
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor result: MarkdownString
    attr_accessor description: MarkdownString?
    attr_accessor embed_table: OracleTableID?
    attr_accessor i18n: I18nHints?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleTableRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> DelveSiteDomainDangerRow
    def to_json_data: () -> untyped
  end

  class DelveSiteDomainFeatureRow
    attr_accessor id: DomainFeatureRowID
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor result: MarkdownString
    attr_accessor description: MarkdownString?
    attr_accessor embed_table: OracleTableID?
    attr_accessor i18n: I18nHints?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleTableRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> DelveSiteDomainFeatureRow
    def to_json_data: () -> untyped
  end

  class DelveSiteDomainID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteDomainID
    def to_json_data: () -> untyped
  end

  class DelveSiteID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteID
    def to_json_data: () -> untyped
  end

  class DelveSiteTheme
    attr_accessor dangers: Array[DelveSiteThemeDangerRow]
    attr_accessor features: Array[DelveSiteThemeFeatureRow]
    attr_accessor id: DelveSiteThemeID
    attr_accessor name: Label
    attr_accessor source: Source
    attr_accessor summary: MarkdownString
    attr_accessor canonical_name: Label?
    attr_accessor description: MarkdownString?
    attr_accessor icon: SvgImageURL?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> DelveSiteTheme
    def to_json_data: () -> untyped
  end

  class DelveSiteThemeDangerRow
    attr_accessor id: ThemeDangerRowID
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor result: MarkdownString
    attr_accessor description: MarkdownString?
    attr_accessor embed_table: OracleTableID?
    attr_accessor i18n: I18nHints?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleTableRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> DelveSiteThemeDangerRow
    def to_json_data: () -> untyped
  end

  class DelveSiteThemeFeatureRow
    attr_accessor id: ThemeFeatureRowID
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor result: MarkdownString
    attr_accessor description: MarkdownString?
    attr_accessor embed_table: OracleTableID?
    attr_accessor i18n: I18nHints?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleTableRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> DelveSiteThemeFeatureRow
    def to_json_data: () -> untyped
  end

  class DelveSiteThemeID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DelveSiteThemeID
    def to_json_data: () -> untyped
  end

  class DiceExpression
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DiceExpression
    def to_json_data: () -> untyped
  end

  class DictKey
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DictKey
    def to_json_data: () -> untyped
  end

  class DomainDangerRowID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DomainDangerRowID
    def to_json_data: () -> untyped
  end

  class DomainFeatureRowID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> DomainFeatureRowID
    def to_json_data: () -> untyped
  end

  class ExpansionID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> ExpansionID
    def to_json_data: () -> untyped
  end

  class I18nHint
    attr_accessor part_of_speech: PartOfSpeech?

    def self.from_json_data: (untyped) -> I18nHint
    def to_json_data: () -> untyped
  end

  class I18nHintsTemplate
    attr_accessor description: I18nHint?
    attr_accessor result: I18nHint?
    attr_accessor summary: I18nHint?

    def self.from_json_data: (untyped) -> I18nHintsTemplate
    def to_json_data: () -> untyped
  end

  class I18nHints
    attr_accessor description: I18nHint?
    attr_accessor result: I18nHint?
    attr_accessor summary: I18nHint?
    attr_accessor template: I18nHintsTemplate?

    def self.from_json_data: (untyped) -> I18nHints
    def to_json_data: () -> untyped
  end

  class ImpactCategory
    attr_accessor contents: Hash[String, ImpactRule]
    attr_accessor description: MarkdownString
    attr_accessor label: InputLabel

    def self.from_json_data: (untyped) -> ImpactCategory
    def to_json_data: () -> untyped
  end

  class ImpactRule
    attr_accessor description: MarkdownString
    attr_accessor label: InputLabel
    attr_accessor permanent: bool
    attr_accessor prevents_recovery: Array[ConditionMeterKey]
    attr_accessor shared: bool

    def self.from_json_data: (untyped) -> ImpactRule
    def to_json_data: () -> untyped
  end

  class ImpactRuleCollectionID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> ImpactRuleCollectionID
    def to_json_data: () -> untyped
  end

  class ImpactRuleID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> ImpactRuleID
    def to_json_data: () -> untyped
  end

  class InputLabel
    attr_accessor value: String

    def self.from_json_data: (untyped) -> InputLabel
    def to_json_data: () -> untyped
  end

  class Label
    attr_accessor value: String

    def self.from_json_data: (untyped) -> Label
    def to_json_data: () -> untyped
  end

  class MarkdownString
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MarkdownString
    def to_json_data: () -> untyped
  end

  class Move
    attr_accessor roll_type: String

    def self.from_json_data: (untyped) -> Move
    def to_json_data: () -> untyped
  end

  class MoveActionRoll < Move
    attr_accessor id: MoveID
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor source: Source
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerActionRoll
    attr_accessor canonical_name: Label?
    attr_accessor oracles: Array[OracleTableID]?
    attr_accessor replaces: MoveID?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> MoveActionRoll
    def to_json_data: () -> untyped
  end

  class MoveNoRoll < Move
    attr_accessor id: MoveID
    attr_accessor name: Label
    attr_accessor source: Source
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerNoRoll
    attr_accessor canonical_name: Label?
    attr_accessor oracles: Array[OracleTableID]?
    attr_accessor replaces: MoveID?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> MoveNoRoll
    def to_json_data: () -> untyped
  end

  class MoveProgressRoll < Move
    attr_accessor id: MoveID
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor source: Source
    attr_accessor text: MarkdownString
    attr_accessor tracks: ProgressTrackTypeInfo
    attr_accessor trigger: TriggerProgressRoll
    attr_accessor canonical_name: Label?
    attr_accessor oracles: Array[OracleTableID]?
    attr_accessor replaces: MoveID?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> MoveProgressRoll
    def to_json_data: () -> untyped
  end

  class MoveSpecialTrack < Move
    attr_accessor id: MoveID
    attr_accessor name: Label
    attr_accessor outcomes: MoveOutcomes
    attr_accessor source: Source
    attr_accessor text: MarkdownString
    attr_accessor trigger: TriggerSpecialTrack
    attr_accessor canonical_name: Label?
    attr_accessor oracles: Array[OracleTableID]?
    attr_accessor replaces: MoveID?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> MoveSpecialTrack
    def to_json_data: () -> untyped
  end

  class MoveCategory
    attr_accessor id: MoveCategoryID
    attr_accessor name: Label
    attr_accessor source: Source
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor contents: Hash[String, Move]?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: MoveCategoryID?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: MoveCategoryID?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> MoveCategory
    def to_json_data: () -> untyped
  end

  class MoveCategoryID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MoveCategoryID
    def to_json_data: () -> untyped
  end

  class MoveEnhancement
    attr_accessor roll_type: String

    def self.from_json_data: (untyped) -> MoveEnhancement
    def to_json_data: () -> untyped
  end

  class MoveEnhancementActionRoll < MoveEnhancement
    attr_accessor enhances: Array[MoveIDWildcard]
    attr_accessor trigger: TriggerActionRollEnhancement?

    def self.from_json_data: (untyped) -> MoveEnhancementActionRoll
    def to_json_data: () -> untyped
  end

  class MoveEnhancementNoRoll < MoveEnhancement
    attr_accessor enhances: Array[MoveIDWildcard]
    attr_accessor trigger: TriggerNoRollEnhancement?

    def self.from_json_data: (untyped) -> MoveEnhancementNoRoll
    def to_json_data: () -> untyped
  end

  class MoveEnhancementProgressRoll < MoveEnhancement
    attr_accessor enhances: Array[MoveIDWildcard]
    attr_accessor trigger: TriggerProgressRollEnhancement?

    def self.from_json_data: (untyped) -> MoveEnhancementProgressRoll
    def to_json_data: () -> untyped
  end

  class MoveEnhancementSpecialTrack < MoveEnhancement
    attr_accessor enhances: Array[MoveIDWildcard]
    attr_accessor trigger: TriggerSpecialTrackEnhancement?

    def self.from_json_data: (untyped) -> MoveEnhancementSpecialTrack
    def to_json_data: () -> untyped
  end

  class MoveID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MoveID
    def to_json_data: () -> untyped
  end

  class MoveIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> MoveIDWildcard
    def to_json_data: () -> untyped
  end

  class MoveOutcome
    attr_accessor text: MarkdownString

    def self.from_json_data: (untyped) -> MoveOutcome
    def to_json_data: () -> untyped
  end

  class MoveOutcomes
    attr_accessor miss: MoveOutcome
    attr_accessor strong_hit: MoveOutcome
    attr_accessor weak_hit: MoveOutcome

    def self.from_json_data: (untyped) -> MoveOutcomes
    def to_json_data: () -> untyped
  end

  class MoveRollType
    attr_accessor value: String

    ACTION_ROLL: MoveRollType
    NO_ROLL: MoveRollType
    PROGRESS_ROLL: MoveRollType
    SPECIAL_TRACK: MoveRollType

    def self.from_json_data: (untyped) -> MoveRollType
    def to_json_data: () -> untyped
  end

  class Npc
    attr_accessor description: MarkdownString
    attr_accessor drives: Array[MarkdownString]
    attr_accessor features: Array[MarkdownString]
    attr_accessor id: NpcID
    attr_accessor name: Label
    attr_accessor nature: NpcNature
    attr_accessor rank: ChallengeRank
    attr_accessor source: Source
    attr_accessor tactics: Array[MarkdownString]
    attr_accessor canonical_name: Label?
    attr_accessor quest_starter: MarkdownString?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Hash[String, Hash[String, String]]?
    attr_accessor variants: Hash[String, NpcVariant]?
    attr_accessor your_truth: MarkdownString?

    def self.from_json_data: (untyped) -> Npc
    def to_json_data: () -> untyped
  end

  class NpcCollection
    attr_accessor id: NpcCollectionID
    attr_accessor name: Label
    attr_accessor source: Source
    attr_accessor canonical_name: Label?
    attr_accessor color: CSSColor?
    attr_accessor contents: Hash[String, Npc]?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: NpcCollectionID?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor replaces: NpcCollectionID?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> NpcCollection
    def to_json_data: () -> untyped
  end

  class NpcCollectionID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> NpcCollectionID
    def to_json_data: () -> untyped
  end

  class NpcID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> NpcID
    def to_json_data: () -> untyped
  end

  class NpcIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> NpcIDWildcard
    def to_json_data: () -> untyped
  end

  class NpcNature
    attr_accessor value: Label

    def self.from_json_data: (untyped) -> NpcNature
    def to_json_data: () -> untyped
  end

  class NpcVariant
    attr_accessor description: MarkdownString
    attr_accessor id: NpcVariantID
    attr_accessor name: Label
    attr_accessor nature: NpcNature
    attr_accessor rank: ChallengeRank
    attr_accessor summary: MarkdownString?

    def self.from_json_data: (untyped) -> NpcVariant
    def to_json_data: () -> untyped
  end

  class NpcVariantID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> NpcVariantID
    def to_json_data: () -> untyped
  end

  class OracleCollection
    attr_accessor id: OracleCollectionID
    attr_accessor name: Label
    attr_accessor source: Source
    attr_accessor canonical_name: Label?
    attr_accessor collections: Hash[String, OracleCollection]?
    attr_accessor color: CSSColor?
    attr_accessor contents: Hash[String, OracleTable]?
    attr_accessor description: MarkdownString?
    attr_accessor enhances: OracleCollectionID?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor rendering: OracleCollectionRendering?
    attr_accessor replaces: OracleCollectionID?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> OracleCollection
    def to_json_data: () -> untyped
  end

  class OracleCollectionID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> OracleCollectionID
    def to_json_data: () -> untyped
  end

  class OracleCollectionRendering
    attr_accessor style: String

    def self.from_json_data: (untyped) -> OracleCollectionRendering
    def to_json_data: () -> untyped
  end

  class OracleCollectionRenderingMultiTable < OracleCollectionRendering
    attr_accessor columns: Hash[String, OracleCollectionTableColumn]

    def self.from_json_data: (untyped) -> OracleCollectionRenderingMultiTable
    def to_json_data: () -> untyped
  end

  class OracleCollectionRenderingTables < OracleCollectionRendering

    def self.from_json_data: (untyped) -> OracleCollectionRenderingTables
    def to_json_data: () -> untyped
  end

  class OracleCollectionTableColumn
    attr_accessor content_type: OracleTableColumnContentKey
    attr_accessor label: Label
    attr_accessor table_key: DictKey
    attr_accessor color: CSSColor?

    def self.from_json_data: (untyped) -> OracleCollectionTableColumn
    def to_json_data: () -> untyped
  end

  class OracleRollTemplate
    attr_accessor description: TemplateString?
    attr_accessor result: TemplateString?
    attr_accessor summary: TemplateString?

    def self.from_json_data: (untyped) -> OracleRollTemplate
    def to_json_data: () -> untyped
  end

  class OracleTableRecommendedRolls
    attr_accessor max: Integer
    attr_accessor min: Integer

    def self.from_json_data: (untyped) -> OracleTableRecommendedRolls
    def to_json_data: () -> untyped
  end

  class OracleTable
    attr_accessor dice: DiceExpression
    attr_accessor id: OracleTableID
    attr_accessor name: Label
    attr_accessor source: Source
    attr_accessor table: Array[OracleTableRow]
    attr_accessor canonical_name: Label?
    attr_accessor description: MarkdownString?
    attr_accessor icon: SvgImageURL?
    attr_accessor images: Array[WebpImageURL]?
    attr_accessor match: OracleTableMatchBehavior?
    attr_accessor recommended_rolls: OracleTableRecommendedRolls?
    attr_accessor rendering: OracleTableRendering?
    attr_accessor replaces: OracleTableID?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> OracleTable
    def to_json_data: () -> untyped
  end

  class OracleTableColumn
    attr_accessor content_type: OracleTableColumnContentKey
    attr_accessor label: Label
    attr_accessor color: CSSColor?

    def self.from_json_data: (untyped) -> OracleTableColumn
    def to_json_data: () -> untyped
  end

  class OracleTableColumnContentKey
    attr_accessor value: String

    DESCRIPTION: OracleTableColumnContentKey
    RESULT: OracleTableColumnContentKey
    ROLL: OracleTableColumnContentKey
    SUMMARY: OracleTableColumnContentKey

    def self.from_json_data: (untyped) -> OracleTableColumnContentKey
    def to_json_data: () -> untyped
  end

  class OracleTableID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> OracleTableID
    def to_json_data: () -> untyped
  end

  class OracleTableIDWildcard
    attr_accessor value: String

    def self.from_json_data: (untyped) -> OracleTableIDWildcard
    def to_json_data: () -> untyped
  end

  class OracleTableMatchBehavior
    attr_accessor text: MarkdownString

    def self.from_json_data: (untyped) -> OracleTableMatchBehavior
    def to_json_data: () -> untyped
  end

  class OracleTableRendering
    attr_accessor style: String

    def self.from_json_data: (untyped) -> OracleTableRendering
    def to_json_data: () -> untyped
  end

  class OracleTableRenderingColumn < OracleTableRendering

    def self.from_json_data: (untyped) -> OracleTableRenderingColumn
    def to_json_data: () -> untyped
  end

  class OracleTableRenderingEmbedInRow < OracleTableRendering

    def self.from_json_data: (untyped) -> OracleTableRenderingEmbedInRow
    def to_json_data: () -> untyped
  end

  class OracleTableRenderingStandalone < OracleTableRendering
    attr_accessor columns: Hash[String, OracleTableColumn]

    def self.from_json_data: (untyped) -> OracleTableRenderingStandalone
    def to_json_data: () -> untyped
  end

  class OracleTableRoll
    attr_accessor auto: bool
    attr_accessor dice: DiceExpression
    attr_accessor duplicates: OracleTableRollDuplicates
    attr_accessor number_of_rolls: Integer
    attr_accessor oracle: OracleTableID

    def self.from_json_data: (untyped) -> OracleTableRoll
    def to_json_data: () -> untyped
  end

  class OracleTableRollDuplicates
    attr_accessor value: String

    KEEP: OracleTableRollDuplicates
    MAKE_IT_WORSE: OracleTableRollDuplicates
    REROLL: OracleTableRollDuplicates

    def self.from_json_data: (untyped) -> OracleTableRollDuplicates
    def to_json_data: () -> untyped
  end

  class OracleTableRow
    attr_accessor id: OracleTableRowID
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor result: MarkdownString
    attr_accessor description: MarkdownString?
    attr_accessor embed_table: OracleTableID?
    attr_accessor i18n: I18nHints?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleTableRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> OracleTableRow
    def to_json_data: () -> untyped
  end

  class OracleTableRowID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> OracleTableRowID
    def to_json_data: () -> untyped
  end

  class PartOfSpeech
    attr_accessor value: String

    ADJECTIVE: PartOfSpeech
    ADJECTIVE_AS_PROPER_NOUN: PartOfSpeech
    ADJUNCT_COMMON_NOUN: PartOfSpeech
    ADJUNCT_PROPER_NOUN: PartOfSpeech
    ATTRIBUTIVE_VERB: PartOfSpeech
    COMMON_NOUN: PartOfSpeech
    COMMON_NOUN_AS_PROPER_NOUN: PartOfSpeech
    GERUND: PartOfSpeech
    PROPER_NOUN: PartOfSpeech
    VERB: PartOfSpeech

    def self.from_json_data: (untyped) -> PartOfSpeech
    def to_json_data: () -> untyped
  end

  class ProgressRollMethod
    attr_accessor value: String

    MISS: ProgressRollMethod
    PROGRESS_ROLL: ProgressRollMethod
    STRONG_HIT: ProgressRollMethod
    WEAK_HIT: ProgressRollMethod

    def self.from_json_data: (untyped) -> ProgressRollMethod
    def to_json_data: () -> untyped
  end

  class ProgressRollOptionUsing
    attr_accessor value: String

    PROGRESS_TRACK: ProgressRollOptionUsing

    def self.from_json_data: (untyped) -> ProgressRollOptionUsing
    def to_json_data: () -> untyped
  end

  class ProgressRollOption
    attr_accessor using: ProgressRollOptionUsing

    def self.from_json_data: (untyped) -> ProgressRollOption
    def to_json_data: () -> untyped
  end

  class ProgressTrackTypeInfo
    attr_accessor category: Label
    attr_accessor controls: Hash[String, untyped]?

    def self.from_json_data: (untyped) -> ProgressTrackTypeInfo
    def to_json_data: () -> untyped
  end

  class Rarity
    attr_accessor asset: AssetID
    attr_accessor description: MarkdownString
    attr_accessor id: RarityID
    attr_accessor name: Label
    attr_accessor source: Source
    attr_accessor xp_cost: Integer
    attr_accessor canonical_name: Label?
    attr_accessor icon: SvgImageURL?
    attr_accessor suggestions: Suggestions?
    attr_accessor tags: Hash[String, Hash[String, String]]?

    def self.from_json_data: (untyped) -> Rarity
    def to_json_data: () -> untyped
  end

  class RarityID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> RarityID
    def to_json_data: () -> untyped
  end

  class RollableValue
    attr_accessor using: String

    def self.from_json_data: (untyped) -> RollableValue
    def to_json_data: () -> untyped
  end

  class RollableValueAssetControl < RollableValue
    attr_accessor assets: Array[AssetIDWildcard]
    attr_accessor control: DictKey

    def self.from_json_data: (untyped) -> RollableValueAssetControl
    def to_json_data: () -> untyped
  end

  class RollableValueAssetOption < RollableValue
    attr_accessor assets: Array[AssetIDWildcard]
    attr_accessor option: DictKey

    def self.from_json_data: (untyped) -> RollableValueAssetOption
    def to_json_data: () -> untyped
  end

  class RollableValueAttachedAssetControl < RollableValue
    attr_accessor control: DictKey

    def self.from_json_data: (untyped) -> RollableValueAttachedAssetControl
    def to_json_data: () -> untyped
  end

  class RollableValueAttachedAssetOption < RollableValue
    attr_accessor option: DictKey

    def self.from_json_data: (untyped) -> RollableValueAttachedAssetOption
    def to_json_data: () -> untyped
  end

  class RollableValueConditionMeter < RollableValue
    attr_accessor condition_meter: ConditionMeterKey

    def self.from_json_data: (untyped) -> RollableValueConditionMeter
    def to_json_data: () -> untyped
  end

  class RollableValueCustom < RollableValue
    attr_accessor label: InputLabel
    attr_accessor value: Integer

    def self.from_json_data: (untyped) -> RollableValueCustom
    def to_json_data: () -> untyped
  end

  class RollableValueStat < RollableValue
    attr_accessor stat: StatKey

    def self.from_json_data: (untyped) -> RollableValueStat
    def to_json_data: () -> untyped
  end

  class Rules
    attr_accessor condition_meters: Hash[String, ConditionMeterRule]
    attr_accessor impacts: Hash[String, ImpactCategory]
    attr_accessor special_tracks: Hash[String, SpecialTrackRule]
    attr_accessor stats: Hash[String, StatRule]

    def self.from_json_data: (untyped) -> Rules
    def to_json_data: () -> untyped
  end

  class RulesExpansion
    attr_accessor condition_meters: Hash[String, ConditionMeterRule]?
    attr_accessor impacts: Hash[String, ImpactCategory]?
    attr_accessor special_tracks: Hash[String, SpecialTrackRule]?
    attr_accessor stats: Hash[String, StatRule]?

    def self.from_json_data: (untyped) -> RulesExpansion
    def to_json_data: () -> untyped
  end

  class RulesetID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> RulesetID
    def to_json_data: () -> untyped
  end

  class SelectEnhancementFieldChoiceChoiceType
    attr_accessor value: String

    CHOICE: SelectEnhancementFieldChoiceChoiceType

    def self.from_json_data: (untyped) -> SelectEnhancementFieldChoiceChoiceType
    def to_json_data: () -> untyped
  end

  class SelectEnhancementFieldChoice
    attr_accessor choice_type: SelectEnhancementFieldChoiceChoiceType
    attr_accessor label: InputLabel
    attr_accessor enhance_asset: AssetEnhancement?
    attr_accessor enhance_moves: Array[MoveEnhancement]?

    def self.from_json_data: (untyped) -> SelectEnhancementFieldChoice
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoice
    attr_accessor using: String

    def self.from_json_data: (untyped) -> SelectValueFieldChoice
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAssetControlChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceAssetControlChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAssetControlChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAssetControl < SelectValueFieldChoice
    attr_accessor assets: Array[AssetIDWildcard]
    attr_accessor choice_type: SelectValueFieldChoiceAssetControlChoiceType
    attr_accessor control: DictKey
    attr_accessor label: InputLabel

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAssetControl
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAssetOptionChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceAssetOptionChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAssetOptionChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAssetOption < SelectValueFieldChoice
    attr_accessor assets: Array[AssetIDWildcard]
    attr_accessor choice_type: SelectValueFieldChoiceAssetOptionChoiceType
    attr_accessor label: InputLabel
    attr_accessor option: DictKey

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAssetOption
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAttachedAssetControlChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceAttachedAssetControlChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAttachedAssetControlChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAttachedAssetControl < SelectValueFieldChoice
    attr_accessor choice_type: SelectValueFieldChoiceAttachedAssetControlChoiceType
    attr_accessor control: DictKey
    attr_accessor label: InputLabel

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAttachedAssetControl
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAttachedAssetOptionChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceAttachedAssetOptionChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAttachedAssetOptionChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceAttachedAssetOption < SelectValueFieldChoice
    attr_accessor choice_type: SelectValueFieldChoiceAttachedAssetOptionChoiceType
    attr_accessor label: InputLabel
    attr_accessor option: DictKey

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceAttachedAssetOption
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceConditionMeterChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceConditionMeterChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceConditionMeterChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceConditionMeter < SelectValueFieldChoice
    attr_accessor choice_type: SelectValueFieldChoiceConditionMeterChoiceType
    attr_accessor condition_meter: ConditionMeterKey
    attr_accessor label: InputLabel

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceConditionMeter
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceCustomChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceCustomChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceCustomChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceCustom < SelectValueFieldChoice
    attr_accessor choice_type: SelectValueFieldChoiceCustomChoiceType
    attr_accessor label: InputLabel
    attr_accessor value: Integer

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceCustom
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceStatChoiceType
    attr_accessor value: String

    CHOICE: SelectValueFieldChoiceStatChoiceType

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceStatChoiceType
    def to_json_data: () -> untyped
  end

  class SelectValueFieldChoiceStat < SelectValueFieldChoice
    attr_accessor choice_type: SelectValueFieldChoiceStatChoiceType
    attr_accessor label: InputLabel
    attr_accessor stat: StatKey

    def self.from_json_data: (untyped) -> SelectValueFieldChoiceStat
    def to_json_data: () -> untyped
  end

  class SemanticVersion
    attr_accessor value: String

    def self.from_json_data: (untyped) -> SemanticVersion
    def to_json_data: () -> untyped
  end

  class Source
    attr_accessor authors: Array[AuthorInfo]
    attr_accessor date: String
    attr_accessor license: String
    attr_accessor title: String
    attr_accessor url: String
    attr_accessor page: Integer?

    def self.from_json_data: (untyped) -> Source
    def to_json_data: () -> untyped
  end

  class SpecialTrackRollMethod
    attr_accessor value: String

    ALL: SpecialTrackRollMethod
    HIGHEST: SpecialTrackRollMethod
    LOWEST: SpecialTrackRollMethod
    MISS: SpecialTrackRollMethod
    PLAYER_CHOICE: SpecialTrackRollMethod
    STRONG_HIT: SpecialTrackRollMethod
    WEAK_HIT: SpecialTrackRollMethod

    def self.from_json_data: (untyped) -> SpecialTrackRollMethod
    def to_json_data: () -> untyped
  end

  class SpecialTrackRule
    attr_accessor description: MarkdownString
    attr_accessor label: InputLabel
    attr_accessor optional: bool
    attr_accessor shared: bool

    def self.from_json_data: (untyped) -> SpecialTrackRule
    def to_json_data: () -> untyped
  end

  class SpecialTrackRuleID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> SpecialTrackRuleID
    def to_json_data: () -> untyped
  end

  class SpecialTrackType
    attr_accessor value: DictKey

    def self.from_json_data: (untyped) -> SpecialTrackType
    def to_json_data: () -> untyped
  end

  class StatKey
    attr_accessor value: DictKey

    def self.from_json_data: (untyped) -> StatKey
    def to_json_data: () -> untyped
  end

  class StatRule
    attr_accessor description: MarkdownString
    attr_accessor label: InputLabel

    def self.from_json_data: (untyped) -> StatRule
    def to_json_data: () -> untyped
  end

  class StatRuleID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> StatRuleID
    def to_json_data: () -> untyped
  end

  class Suggestions
    attr_accessor assets: Array[AssetID]?
    attr_accessor atlas: Array[AtlasEntryID]?
    attr_accessor moves: Array[MoveID]?
    attr_accessor npcs: Array[NpcID]?
    attr_accessor oracles: Array[OracleTableID]?
    attr_accessor rarities: Array[RarityID]?
    attr_accessor site_domains: Array[DelveSiteDomainID]?
    attr_accessor site_themes: Array[DelveSiteThemeID]?

    def self.from_json_data: (untyped) -> Suggestions
    def to_json_data: () -> untyped
  end

  class SvgImageURL
    attr_accessor value: String

    def self.from_json_data: (untyped) -> SvgImageURL
    def to_json_data: () -> untyped
  end

  class TemplateString
    attr_accessor value: String

    def self.from_json_data: (untyped) -> TemplateString
    def to_json_data: () -> untyped
  end

  class ThemeDangerRowID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> ThemeDangerRowID
    def to_json_data: () -> untyped
  end

  class ThemeFeatureRowID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> ThemeFeatureRowID
    def to_json_data: () -> untyped
  end

  class TriggerActionRoll
    attr_accessor conditions: Array[TriggerActionRollCondition]
    attr_accessor text: MarkdownString

    def self.from_json_data: (untyped) -> TriggerActionRoll
    def to_json_data: () -> untyped
  end

  class TriggerActionRollCondition
    attr_accessor method: ActionRollMethod
    attr_accessor roll_options: Array[RollableValue]
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerActionRollCondition
    def to_json_data: () -> untyped
  end

  class TriggerActionRollConditionEnhancement
    attr_accessor method: ActionRollMethod
    attr_accessor roll_options: Array[RollableValue]
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerActionRollConditionEnhancement
    def to_json_data: () -> untyped
  end

  class TriggerActionRollEnhancement
    attr_accessor conditions: Array[TriggerActionRollConditionEnhancement]

    def self.from_json_data: (untyped) -> TriggerActionRollEnhancement
    def to_json_data: () -> untyped
  end

  class TriggerBy
    attr_accessor ally: bool
    attr_accessor player: bool

    def self.from_json_data: (untyped) -> TriggerBy
    def to_json_data: () -> untyped
  end

  class TriggerNoRoll
    attr_accessor conditions: Array[TriggerNoRollCondition]
    attr_accessor text: MarkdownString

    def self.from_json_data: (untyped) -> TriggerNoRoll
    def to_json_data: () -> untyped
  end

  class TriggerNoRollCondition
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerNoRollCondition
    def to_json_data: () -> untyped
  end

  class TriggerNoRollEnhancement
    attr_accessor conditions: Array[TriggerNoRollCondition]

    def self.from_json_data: (untyped) -> TriggerNoRollEnhancement
    def to_json_data: () -> untyped
  end

  class TriggerProgressRoll
    attr_accessor conditions: Array[TriggerProgressRollCondition]
    attr_accessor text: MarkdownString

    def self.from_json_data: (untyped) -> TriggerProgressRoll
    def to_json_data: () -> untyped
  end

  class TriggerProgressRollCondition
    attr_accessor method: ProgressRollMethod
    attr_accessor roll_options: Array[ProgressRollOption]
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerProgressRollCondition
    def to_json_data: () -> untyped
  end

  class TriggerProgressRollConditionEnhancement
    attr_accessor method: ProgressRollMethod
    attr_accessor roll_options: Array[ProgressRollOption]
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerProgressRollConditionEnhancement
    def to_json_data: () -> untyped
  end

  class TriggerProgressRollEnhancement
    attr_accessor conditions: Array[TriggerProgressRollConditionEnhancement]

    def self.from_json_data: (untyped) -> TriggerProgressRollEnhancement
    def to_json_data: () -> untyped
  end

  class TriggerSpecialTrack
    attr_accessor conditions: Array[TriggerSpecialTrackCondition]
    attr_accessor text: MarkdownString

    def self.from_json_data: (untyped) -> TriggerSpecialTrack
    def to_json_data: () -> untyped
  end

  class TriggerSpecialTrackCondition
    attr_accessor method: SpecialTrackRollMethod
    attr_accessor roll_options: Array[TriggerSpecialTrackConditionOption]
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerSpecialTrackCondition
    def to_json_data: () -> untyped
  end

  class TriggerSpecialTrackConditionEnhancement
    attr_accessor method: SpecialTrackRollMethod
    attr_accessor roll_options: Array[TriggerSpecialTrackConditionOption]
    attr_accessor by: TriggerBy?
    attr_accessor text: MarkdownString?

    def self.from_json_data: (untyped) -> TriggerSpecialTrackConditionEnhancement
    def to_json_data: () -> untyped
  end

  class TriggerSpecialTrackConditionOption
    attr_accessor using: SpecialTrackType

    def self.from_json_data: (untyped) -> TriggerSpecialTrackConditionOption
    def to_json_data: () -> untyped
  end

  class TriggerSpecialTrackEnhancement
    attr_accessor conditions: Array[TriggerSpecialTrackConditionEnhancement]

    def self.from_json_data: (untyped) -> TriggerSpecialTrackEnhancement
    def to_json_data: () -> untyped
  end

  class Truth
    attr_accessor id: TruthID
    attr_accessor name: Label
    attr_accessor options: Array[TruthOption]
    attr_accessor source: Source
    attr_accessor canonical_name: Label?
    attr_accessor icon: SvgImageURL?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor tags: Hash[String, Hash[String, String]]?
    attr_accessor your_character: MarkdownString?

    def self.from_json_data: (untyped) -> Truth
    def to_json_data: () -> untyped
  end

  class TruthID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> TruthID
    def to_json_data: () -> untyped
  end

  class TruthOption
    attr_accessor description: MarkdownString
    attr_accessor id: TruthOptionID
    attr_accessor quest_starter: MarkdownString
    attr_accessor max: Integer?
    attr_accessor min: Integer?
    attr_accessor summary: MarkdownString?
    attr_accessor table: Array[TruthOptionTableRow]?

    def self.from_json_data: (untyped) -> TruthOption
    def to_json_data: () -> untyped
  end

  class TruthOptionID
    attr_accessor value: String

    def self.from_json_data: (untyped) -> TruthOptionID
    def to_json_data: () -> untyped
  end

  class TruthOptionTableRow
    attr_accessor max: Integer
    attr_accessor min: Integer
    attr_accessor result: MarkdownString
    attr_accessor description: MarkdownString?
    attr_accessor embed_table: OracleTableID?
    attr_accessor i18n: I18nHints?
    attr_accessor icon: SvgImageURL?
    attr_accessor oracle_rolls: Array[OracleTableRoll]?
    attr_accessor suggestions: Suggestions?
    attr_accessor summary: MarkdownString?
    attr_accessor template: OracleRollTemplate?

    def self.from_json_data: (untyped) -> TruthOptionTableRow
    def to_json_data: () -> untyped
  end

  class WebpImageURL
    attr_accessor value: String

    def self.from_json_data: (untyped) -> WebpImageURL
    def to_json_data: () -> untyped
  end

  def self.from_json_data: (untyped, untyped) -> untyped
  def self.to_json_data: (untyped) -> untyped
end
