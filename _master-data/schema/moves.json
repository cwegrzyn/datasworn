{
  "type": "object",
  "properties": {
    "move_categories": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/YamlMoveCategory" },
      "defaultProperties": [],
      "title": "move_categories"
    },
    "_refs": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {},
        "additionalProperties": true
      },
      "defaultProperties": [],
      "title": "_refs"
    },
    "_templates": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {},
        "additionalProperties": true
      },
      "defaultProperties": [],
      "title": "_templates"
    },
    "source": {
      "$ref": "#/definitions/Source",
      "description": "Information on this item's source.",
      "title": "source"
    }
  },
  "defaultProperties": [],
  "additionalProperties": false,
  "required": ["move_categories", "source"],
  "definitions": {
    "YamlMoveCategory": {
      "title": "YamlMoveCategory",
      "type": "object",
      "properties": {
        "description": {
          "description": "A user-facing markdown description of the item, consisting of one or more paragraphs.",
          "type": "string",
          "title": "description"
        },
        "moves": {
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/YamlMove" },
          "defaultProperties": [],
          "title": "moves"
        },
        "display": {
          "description": "Data relevant to this item's display/rendering.",
          "$ref": "#/definitions/Display_1",
          "title": "display"
        },
        "optional": {
          "description": "Whether or not the source material presents this rules item as optional.",
          "default": false,
          "type": "boolean",
          "title": "optional"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/moves/[a-z_]+$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" },
        "title": { "$ref": "#/definitions/YamlTitle", "title": "title" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["description", "moves", "title"]
    },
    "YamlMove": {
      "title": "YamlMove",
      "type": "object",
      "properties": {
        "title": {
          "$ref": "#/definitions/YamlTitleCaseTitle",
          "title": "title"
        },
        "trigger": {
          "$ref": "#/definitions/YamlMoveTrigger",
          "title": "trigger"
        },
        "outcomes": {
          "$ref": "#/definitions/YamlOutcomes",
          "title": "outcomes"
        },
        "text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "text"
        },
        "suggestions": {
          "$ref": "#/definitions/Suggestions",
          "description": "\"Non-canonical\" suggestions of related items. They might be convenient to present to the user, but in most implementations rolling them automatically is not recommended.",
          "title": "suggestions"
        },
        "asset": {
          "description": "The ID of the parent Asset of the move, if any.",
          "type": "string",
          "title": "asset"
        },
        "progress_move": {
          "description": "Whether or not the move is a Progress Move. Progress moves roll two challenge dice against a progress score.",
          "type": "boolean",
          "title": "progress_move"
        },
        "variant_of": {
          "description": "The ID of the move that this move is a variant of, if any.",
          "type": "string",
          "title": "variant_of"
        },
        "oracles": {
          "description": "The IDs of any oracles directly referenced by the move, or vice versa.",
          "type": "array",
          "items": { "type": "string" },
          "title": "oracles"
        },
        "optional": {
          "description": "Whether or not the source material presents this rules item as optional.",
          "default": false,
          "type": "boolean",
          "title": "optional"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/moves/([a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3])/[a-z_]+$",
          "type": "string",
          "title": "$id"
        },
        "display": {
          "$ref": "#/definitions/Display",
          "description": "Data relevant to this item's display/rendering.",
          "title": "display"
        },
        "tags": {
          "description": "Arbitrary strings tags that describe optional metadata that doesn't fit in other properties.",
          "type": "array",
          "items": { "type": "string" },
          "title": "tags"
        },
        "category": {
          "description": "The ID of the move's category.",
          "type": "string",
          "title": "category"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["text", "title", "trigger"]
    },
    "YamlTitleCaseTitle": {
      "title": "YamlTitleCaseTitle",
      "type": "object",
      "properties": {
        "canonical": {
          "pattern": "^(?:([A-Z1-9][^\\s]*|by|of|in|a|an|and|the|\\((alternate version|by location|Scene Challenge)\\))\\s?)+$",
          "type": "string",
          "title": "canonical"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+/title$",
          "type": "string",
          "title": "$id"
        },
        "short": {
          "pattern": "^(?:([A-Z1-9][^\\s]*|by|of|in|a|an|and|the)\\s?)+$",
          "type": "string",
          "title": "short"
        },
        "standard": {
          "pattern": "^(?:([A-Z1-9][^\\s]*|by|of|in|a|an|and|the|\\((alternate version|by location|Scene Challenge)\\))\\s?)+$",
          "type": "string",
          "title": "standard"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["canonical"]
    },
    "YamlSource": {
      "title": "YamlSource",
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the source.\n\nFor 'canonical' content, use one of the enumerated `SourceTitle` strings.\n\nFor 3rd-party content (including homebrew) that's been released as part of a titled document, use the title of that document (e.g. \"Steelforged\", \"Ironsmith\").\n\nIf the source has no particular title (for instance, it's a single custom element in a VTT implementation), use \"Custom\".",
          "type": "string",
          "title": "title"
        },
        "authors": {
          "description": "The author(s) of this item. For 'canonical' content, this one's usually pretty obvious ðŸ˜‰ However, it's included so that homebrew content can use the same interface/schema.",
          "default": "['Shawn Tomkin']",
          "type": "array",
          "items": { "type": "string" },
          "title": "authors"
        },
        "date": {
          "description": "The 6-number date string formatted as `MMDDYY`. Relevant only during Starforged development; it will be deprecated once the game is released.",
          "pattern": "^(0[1-9]|1[0-2])([0-2][1-9]|3[0-1])([0-9][0-9])$",
          "type": "string",
          "title": "date"
        },
        "page": {
          "description": "The page on which the item appears most prominently in the source material (if it's in a format that uses page numbers).",
          "type": "integer",
          "title": "page"
        },
        "uri": {
          "description": "The URI where the source material is available.",
          "pattern": "^https?://.*$",
          "type": "string",
          "title": "uri"
        },
        "license": {
          "$ref": "#/definitions/License",
          "description": "The URI pointing to the license which this content falls under.",
          "title": "license"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "License": {
      "title": "License",
      "enum": [
        "None",
        "https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "https://creativecommons.org/licenses/by-sa/4.0/"
      ],
      "type": "string"
    },
    "YamlMoveTrigger": {
      "title": "YamlMoveTrigger",
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": {
            "anyOf": [
              { "$ref": "#/definitions/YamlMoveTriggerOptionAction" },
              { "$ref": "#/definitions/YamlMoveTriggerOptionProgress" }
            ]
          },
          "title": "options"
        },
        "text": {
          "description": "A markdown string containing the primary trigger text for this move.\n\nSecondary triggers (for specific stats or uses of an asset ability) are described in `Options`.",
          "type": "string",
          "title": "text"
        },
        "by": {
          "description": "Information on who can trigger this item. Used mainly by asset abilities, some of which can trigger from an Ally's move.\n\nIf unspecified, assume `Ally` is `false` and `Player` is `true`.",
          "$ref": "#/definitions/MoveTriggerBy",
          "title": "by"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_]+/[a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3]/alter/moves/[0-9]+|moves/assets/[a-z_]+/[a-z_]+/[1-3]/[a-z_]+)/trigger$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "YamlMoveTriggerOptionAction": {
      "title": "YamlMoveTriggerOptionAction",
      "type": "object",
      "properties": {
        "custom_stat": {
          "$ref": "#/definitions/YamlCustomStat",
          "title": "custom_stat"
        },
        "using": {
          "$ref": "#/definitions/Array",
          "description": "The stat(s) or progress track(s) that may be rolled with this move trigger option.",
          "title": "using"
        },
        "text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "text"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_]+/[a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3]/alter/moves/[0-9]+|moves/assets/[a-z_]+/[a-z_]+/[1-3]/[a-z_]+)/trigger/options/[0-9]+$",
          "type": "string",
          "title": "$id"
        },
        "method": {
          "$ref": "#/definitions/RollMethod",
          "description": "The method used to choose the stat or track in the `Using` array.",
          "title": "method"
        },
        "roll_type": {
          "$ref": "#/definitions/RollType.Action",
          "description": "Whether this option is an action roll or progress roll.",
          "title": "roll_type"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["using"]
    },
    "YamlCustomStat": {
      "title": "YamlCustomStat",
      "type": "object",
      "properties": {
        "options": {
          "type": "array",
          "items": { "$ref": "#/definitions/YamlCustomStatOption" },
          "title": "options"
        },
        "label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "label"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/moves/([a-z_]+|assets/[a-z_]+/[a-z_]+/[0-9]+)/[a-z_]+/trigger/options/[0-9]+/custom_stat$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["label", "options"]
    },
    "YamlCustomStatOption": {
      "title": "YamlCustomStatOption",
      "type": "object",
      "properties": {
        "label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "label"
        },
        "value": {
          "description": "The numeric value to be used as +stat when making an Action Roll.",
          "type": "integer",
          "title": "value"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/moves/([a-z_]+|assets/[a-z_]+/[a-z_]+/[0-9]+)/[a-z_]+/trigger/options/[0-9]+/custom_stat/[a-z_]+$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["label", "value"]
    },
    "Array": {
      "title": "Array",
      "type": "array",
      "items": {
        "enum": [
          "${{@ASSET_METER}}",
          "${{@ASSET_SELECT_METER}}",
          "${{@ASSET_SELECT_STAT}}",
          "${{@ASSET}}",
          "${{@CUSTOM_STAT}}",
          "attached_asset_meter",
          "command_vehicle_integrity",
          "companion_health",
          "edge",
          "health",
          "heart",
          "incidental_vehicle_integrity",
          "iron",
          "shadow",
          "spirit",
          "supply",
          "support_vehicle_integrity",
          "vehicle_integrity",
          "wits"
        ],
        "type": "string"
      }
    },
    "RollMethod": {
      "description": "The stat(s) or progress track(s) that may be rolled with the parent move trigger option.",
      "title": "RollMethod",
      "enum": [
        "all",
        "any",
        "highest",
        "inherit",
        "lowest",
        "strong_hit",
        "weak_hit"
      ],
      "type": "string"
    },
    "RollType.Action": {
      "title": "RollType.Action",
      "enum": ["action_roll"],
      "type": "string"
    },
    "YamlMoveTriggerOptionProgress": {
      "title": "YamlMoveTriggerOptionProgress",
      "type": "object",
      "properties": {
        "text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "text"
        },
        "custom_stat": {
          "description": "Defines a custom stat, if one is included in this object's `With` array.",
          "$ref": "#/definitions/CustomStat",
          "title": "custom_stat"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_]+/[a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3]/alter/moves/[0-9]+|moves/assets/[a-z_]+/[a-z_]+/[1-3]/[a-z_]+)/trigger/options/[0-9]+$",
          "type": "string",
          "title": "$id"
        },
        "method": {
          "$ref": "#/definitions/RollMethod",
          "description": "The method used to choose the stat or track in the `Using` array.",
          "title": "method"
        },
        "using": {
          "$ref": "#/definitions/Array_1",
          "description": "The stat(s) or progress track(s) that may be rolled with this move trigger option.",
          "title": "using"
        },
        "roll_type": {
          "$ref": "#/definitions/RollType.Progress",
          "description": "Whether this option is an action roll or progress roll.",
          "title": "roll_type"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "CustomStat": {
      "title": "CustomStat",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/moves/([a-z_]+|assets/[a-z_]+/[a-z_]+/[0-9]+)/[a-z_]+/trigger/options/[0-9]+/custom_stat$",
          "type": "string",
          "title": "$id"
        },
        "options": {
          "type": "array",
          "items": { "$ref": "#/definitions/CustomStatOption" },
          "title": "options"
        },
        "label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "label", "options"]
    },
    "CustomStatOption": {
      "title": "CustomStatOption",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/moves/([a-z_]+|assets/[a-z_]+/[a-z_]+/[0-9]+)/[a-z_]+/trigger/options/[0-9]+/custom_stat/[a-z_]+$",
          "type": "string",
          "title": "$id"
        },
        "value": {
          "description": "The numeric value to be used as +stat when making an Action Roll.",
          "type": "integer",
          "title": "value"
        },
        "label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "label", "value"]
    },
    "Array_1": {
      "title": "Array_1",
      "type": "array",
      "items": {
        "enum": [
          "bonds_legacy",
          "bonds_track",
          "combat_progress",
          "connection_progress",
          "delve_progress",
          "discoveries_legacy",
          "expedition_progress",
          "journey_progress",
          "quests_legacy",
          "scene_challenge_progress",
          "vow_progress"
        ],
        "type": "string"
      }
    },
    "RollType.Progress": {
      "title": "RollType.Progress",
      "enum": ["progress_roll"],
      "type": "string"
    },
    "MoveTriggerBy": {
      "title": "MoveTriggerBy",
      "type": "object",
      "properties": {
        "player": {
          "description": "Whether the player character who owns this item can trigger it. Unsurprisingly, this is usually true, but there's a few exceptions: see *Starforged's* LOYALIST asset for an example.",
          "type": "boolean",
          "title": "player"
        },
        "ally": {
          "description": "Whether an Ally (a player character other than the owner) can trigger this item. This is usually false, but there's several exceptions among asset abilities.",
          "type": "boolean",
          "title": "ally"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["ally", "player"]
    },
    "YamlOutcomes": {
      "title": "YamlOutcomes",
      "type": "object",
      "properties": {
        "strong_hit": {
          "$ref": "#/definitions/YamlOutcomeStrongHit",
          "title": "strong_hit"
        },
        "weak_hit": {
          "$ref": "#/definitions/YamlOutcomeWeakHit",
          "title": "weak_hit"
        },
        "miss": { "$ref": "#/definitions/YamlOutcomeMiss", "title": "miss" },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_]+/[a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3]/alter/moves/[0-9]+|moves/assets/[a-z_]+/[a-z_]+/[1-3]/[a-z_]+)/outcomes$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["miss", "strong_hit", "weak_hit"]
    },
    "YamlOutcomeStrongHit": {
      "title": "YamlOutcomeStrongHit",
      "type": "object",
      "properties": {
        "with_a_match": {
          "$ref": "#/definitions/YamlOutcomeStrongHitMatch",
          "title": "with_a_match"
        },
        "reroll": { "$ref": "#/definitions/YamlMoveReroll", "title": "reroll" },
        "text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "text"
        },
        "in_control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "in_control"
        },
        "count_as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["miss", "strong_hit", "weak_hit"],
          "type": "string",
          "title": "count_as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_]+/[a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3]/alter/moves/[0-9]+|moves/assets/[a-z_]+/[a-z_]+/[1-3]/[a-z_]+)/outcomes/((miss|strong_hit)(/with_a_match)?|weak_hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "YamlOutcomeStrongHitMatch": {
      "title": "YamlOutcomeStrongHitMatch",
      "type": "object",
      "properties": {
        "with_a_match": {
          "$ref": "#/definitions/YamlOutcome<2>",
          "title": "with_a_match"
        },
        "reroll": { "$ref": "#/definitions/YamlMoveReroll", "title": "reroll" },
        "text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "text"
        },
        "in_control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "in_control"
        },
        "count_as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["miss", "strong_hit", "weak_hit"],
          "type": "string",
          "title": "count_as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_]+/[a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3]/alter/moves/[0-9]+|moves/assets/[a-z_]+/[a-z_]+/[1-3]/[a-z_]+)/outcomes/((miss|strong_hit)(/with_a_match)?|weak_hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "YamlOutcome<2>": {
      "title": "YamlOutcome<2>",
      "type": "object",
      "properties": {
        "with_a_match": {
          "$ref": "#/definitions/YamlOutcome<2>",
          "title": "with_a_match"
        },
        "reroll": { "$ref": "#/definitions/YamlMoveReroll", "title": "reroll" },
        "text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "text"
        },
        "in_control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "in_control"
        },
        "count_as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["miss", "strong_hit", "weak_hit"],
          "type": "string",
          "title": "count_as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_]+/[a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3]/alter/moves/[0-9]+|moves/assets/[a-z_]+/[a-z_]+/[1-3]/[a-z_]+)/outcomes/((miss|strong_hit)(/with_a_match)?|weak_hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "YamlMoveReroll": {
      "title": "YamlMoveReroll",
      "type": "object",
      "properties": {
        "text": {
          "description": "The markdown string describing the conditions of the reroll. It should be presented to the user so that they can decide whether a reroll is appropriate.",
          "type": "string",
          "title": "text"
        },
        "dice": {
          "$ref": "#/definitions/RerollType",
          "description": "The dice to be rerolled.",
          "title": "dice"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["dice"]
    },
    "RerollType": {
      "description": "Enumerates which dice are to be rerolled.",
      "title": "RerollType",
      "enum": ["action_die", "all", "any", "challenge_dice", "challenge_die"],
      "type": "string"
    },
    "YamlOutcomeWeakHit": {
      "title": "YamlOutcomeWeakHit",
      "type": "object",
      "properties": {
        "with_a_match": {
          "$ref": "#/definitions/YamlOutcome<1>",
          "title": "with_a_match"
        },
        "reroll": { "$ref": "#/definitions/YamlMoveReroll", "title": "reroll" },
        "text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "text"
        },
        "in_control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "in_control"
        },
        "count_as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["miss", "strong_hit", "weak_hit"],
          "type": "string",
          "title": "count_as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_]+/[a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3]/alter/moves/[0-9]+|moves/assets/[a-z_]+/[a-z_]+/[1-3]/[a-z_]+)/outcomes/((miss|strong_hit)(/with_a_match)?|weak_hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "YamlOutcome<1>": {
      "title": "YamlOutcome<1>",
      "type": "object",
      "properties": {
        "with_a_match": {
          "$ref": "#/definitions/YamlOutcome<1>",
          "title": "with_a_match"
        },
        "reroll": { "$ref": "#/definitions/YamlMoveReroll", "title": "reroll" },
        "text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "text"
        },
        "in_control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "in_control"
        },
        "count_as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["miss", "strong_hit", "weak_hit"],
          "type": "string",
          "title": "count_as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_]+/[a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3]/alter/moves/[0-9]+|moves/assets/[a-z_]+/[a-z_]+/[1-3]/[a-z_]+)/outcomes/((miss|strong_hit)(/with_a_match)?|weak_hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "YamlOutcomeMiss": {
      "title": "YamlOutcomeMiss",
      "type": "object",
      "properties": {
        "with_a_match": {
          "$ref": "#/definitions/YamlOutcomeMissMatch",
          "title": "with_a_match"
        },
        "reroll": { "$ref": "#/definitions/YamlMoveReroll", "title": "reroll" },
        "text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "text"
        },
        "in_control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "in_control"
        },
        "count_as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["miss", "strong_hit", "weak_hit"],
          "type": "string",
          "title": "count_as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_]+/[a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3]/alter/moves/[0-9]+|moves/assets/[a-z_]+/[a-z_]+/[1-3]/[a-z_]+)/outcomes/((miss|strong_hit)(/with_a_match)?|weak_hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "YamlOutcomeMissMatch": {
      "title": "YamlOutcomeMissMatch",
      "type": "object",
      "properties": {
        "with_a_match": {
          "$ref": "#/definitions/YamlOutcome<0>",
          "title": "with_a_match"
        },
        "reroll": { "$ref": "#/definitions/YamlMoveReroll", "title": "reroll" },
        "text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "text"
        },
        "in_control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "in_control"
        },
        "count_as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["miss", "strong_hit", "weak_hit"],
          "type": "string",
          "title": "count_as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_]+/[a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3]/alter/moves/[0-9]+|moves/assets/[a-z_]+/[a-z_]+/[1-3]/[a-z_]+)/outcomes/((miss|strong_hit)(/with_a_match)?|weak_hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "YamlOutcome<0>": {
      "title": "YamlOutcome<0>",
      "type": "object",
      "properties": {
        "with_a_match": {
          "$ref": "#/definitions/YamlOutcome<0>",
          "title": "with_a_match"
        },
        "reroll": { "$ref": "#/definitions/YamlMoveReroll", "title": "reroll" },
        "text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "text"
        },
        "in_control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "in_control"
        },
        "count_as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["miss", "strong_hit", "weak_hit"],
          "type": "string",
          "title": "count_as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/(moves/[a-z_]+/[a-z_]+|assets/[a-z_]+/[a-z_]+/[1-3]/alter/moves/[0-9]+|moves/assets/[a-z_]+/[a-z_]+/[1-3]/[a-z_]+)/outcomes/((miss|strong_hit)(/with_a_match)?|weak_hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "Suggestions": {
      "description": "Describes \"non-canonical\" suggestions for game content related to the parent item.\n\nThese are intended be offered as convenient shortcuts for the user (for instance, including a menu dropdown for rolling on suggested tables); having them roll automatically is **not recommended** for most projects.\n\nThese can be safely ignored if that functionality is not desired.",
      "title": "Suggestions",
      "$ref": "#/definitions/Suggestions_1"
    },
    "Suggestions_1": {
      "description": "Describes \"non-canonical\" suggestions for game content related to the parent item.\n\nThese are intended be offered as convenient shortcuts for the user (for instance, including a menu dropdown for rolling on suggested tables); having them roll automatically is **not recommended** for most projects.\n\nThese can be safely ignored if that functionality is not desired.",
      "title": "Suggestions_1",
      "type": "object",
      "properties": {
        "game_objects": {
          "description": "Suggested game objects and their parameters.",
          "type": "array",
          "items": {
            "anyOf": [
              { "$ref": "#/definitions/CharacterRecord" },
              { "$ref": "#/definitions/CreatureRecord" },
              { "$ref": "#/definitions/DerelictRecord" },
              { "$ref": "#/definitions/DerelictSettlementRecord" },
              { "$ref": "#/definitions/DerelictStarshipRecord" },
              { "$ref": "#/definitions/DerelictZoneRecord" },
              { "$ref": "#/definitions/FactionDominionRecord" },
              { "$ref": "#/definitions/FactionFringeGroupRecord" },
              { "$ref": "#/definitions/FactionGuildRecord" },
              { "$ref": "#/definitions/FactionRecord" },
              { "$ref": "#/definitions/PlanetRecord" },
              { "$ref": "#/definitions/PrecursorVaultRecord" },
              { "$ref": "#/definitions/SettlementRecord" },
              { "$ref": "#/definitions/StarshipRecord" },
              { "$ref": "#/definitions/FleetRecord" }
            ]
          },
          "title": "game_objects"
        },
        "oracle_tables": {
          "description": "Suggested oracle rolls, by table ID. Multiples of the same ID can be used to indicate that multiple rolls should be made.",
          "pattern": "^(starforged|ironsworn)/oracles/[a-z_]+/[a-z_-/]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "oracle_tables"
        },
        "oracle_sets": {
          "description": "Suggested oracle sets, by ID.",
          "pattern": "^(starforged|ironsworn)/oracles/[a-z_]+/[a-z_-/]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "oracle_sets"
        },
        "moves": {
          "description": "Suggested move IDs.",
          "pattern": "^(starforged|ironsworn)/moves/[a-z_]+/[a-z_]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "moves"
        },
        "assets": {
          "description": "Suggested asset IDs.",
          "pattern": "^(starforged|ironsworn)/assets/[a-z_]+/[a-z_]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "assets"
        },
        "encounters": {
          "description": "Suggested encounter IDs.",
          "pattern": "^(starforged/encounters|ironsworn/encounters/[a-z_]+)/[a-z_]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "encounters"
        },
        "themes": {
          "description": "Suggested delve site themes.",
          "pattern": "^ironsworn/themes/[a-z_]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "themes"
        },
        "domains": {
          "description": "Suggested delve site domains.",
          "pattern": "^ironsworn/domains/[a-z_]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "domains"
        },
        "regions": {
          "description": "Suggested Ironlands regions.",
          "pattern": "^ironsworn/regions/[a-z_]+$",
          "type": "array",
          "items": { "type": "string" },
          "title": "regions"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "__type": {
      "title": "__type",
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap" },
            { "$ref": "#/definitions/AttributeMap_1" }
          ],
          "title": "requirements"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["object_type"]
    },
    "GameObjectType.Character": {
      "title": "GameObjectType.Character",
      "type": "string",
      "enum": ["character"]
    },
    "T": { "$ref": "#/definitions/GameObjectType.Character" },
    "__type_1": {
      "title": "__type_1",
      "type": "object",
      "properties": {
        "disposition": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Characters / Disposition",
                "enum": [
                  "cooperative",
                  "curious",
                  "demanding",
                  "desperate",
                  "friendly",
                  "helpful",
                  "hostile",
                  "indifferent",
                  "suspicious",
                  "threatening",
                  "unfriendly",
                  "wanting"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "disposition"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap": { "$ref": "#/definitions/__type_1" },
    "__type_2": {
      "title": "__type_2",
      "type": "object",
      "properties": {
        "role": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Character / Role",
                "enum": [
                  "agent",
                  "ai",
                  "artisan",
                  "assassin",
                  "courier",
                  "crew",
                  "criminal",
                  "cultist",
                  "diplomat",
                  "engineer",
                  "entertainer",
                  "explorer",
                  "farmer",
                  "fugitive",
                  "guard",
                  "guide",
                  "healer",
                  "historian",
                  "hunter",
                  "investigator",
                  "laborer",
                  "lawkeeper",
                  "leader",
                  "mercenary",
                  "merchant",
                  "miner",
                  "mystic",
                  "navigator",
                  "outcast",
                  "pilgrim",
                  "pilot",
                  "pirate",
                  "preacher",
                  "prophet",
                  "raider",
                  "researcher",
                  "scavenger",
                  "scholar",
                  "scout",
                  "shipwright",
                  "smuggler",
                  "soldier",
                  "spacer",
                  "technician",
                  "thief"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "role"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_1": { "$ref": "#/definitions/__type_2" },
    "CharacterRecord": { "$ref": "#/definitions/__type" },
    "__type_3": {
      "title": "__type_3",
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T_1", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_2" },
            { "$ref": "#/definitions/AttributeMap_3" },
            { "$ref": "#/definitions/AttributeMap_4" }
          ],
          "title": "requirements"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["object_type"]
    },
    "GameObjectType.Creature": {
      "title": "GameObjectType.Creature",
      "type": "string",
      "enum": ["creature"]
    },
    "T_1": { "$ref": "#/definitions/GameObjectType.Creature" },
    "__type_4": {
      "title": "__type_4",
      "type": "object",
      "properties": {
        "encountered_behavior": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Creatures / Encountered Behavior",
                "enum": [
                  "ambusher",
                  "apex_predator",
                  "builder",
                  "camouflager",
                  "forager",
                  "grazer",
                  "herder",
                  "hibernator",
                  "hoarder",
                  "hunter",
                  "lurer",
                  "migratory",
                  "mimic",
                  "nester",
                  "pack_hunter",
                  "prey",
                  "protector",
                  "scavenger",
                  "tracker",
                  "trapper"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "encountered_behavior"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_2": { "$ref": "#/definitions/__type_4" },
    "__type_5": {
      "title": "__type_5",
      "type": "object",
      "properties": {
        "environment": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Creatures / Environment",
                "enum": ["air", "interior", "land", "liquid", "space"],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "environment"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_3": { "$ref": "#/definitions/__type_5" },
    "__type_6": {
      "title": "__type_6",
      "type": "object",
      "properties": {
        "creature_scale": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Creatures / Scale/**",
                "enum": [
                  "colossal",
                  "huge",
                  "large",
                  "medium",
                  "minuscule",
                  "small",
                  "tiny",
                  "titanic",
                  "vast"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "creature_scale"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_4": { "$ref": "#/definitions/__type_6" },
    "CreatureRecord": { "$ref": "#/definitions/__type_3" },
    "DerelictRecord": {
      "title": "DerelictRecord",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T_2", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_5" },
            { "$ref": "#/definitions/AttributeMap_6" },
            { "$ref": "#/definitions/AttributeMap_7" },
            { "$ref": "#/definitions/AttributeMap_8" },
            { "$ref": "#/definitions/AttributeMap_9" }
          ],
          "title": "requirements"
        }
      },
      "required": ["object_type"]
    },
    "GameObjectType.Derelict": {
      "title": "GameObjectType.Derelict",
      "type": "string",
      "enum": ["derelict"]
    },
    "T_2": { "$ref": "#/definitions/GameObjectType.Derelict" },
    "__type_7": {
      "title": "__type_7",
      "type": "object",
      "properties": {
        "derelict_type": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by oracle: Oracles / Derelicts / Type",
                "enum": ["settlement", "starship"],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "derelict_type"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_5": { "$ref": "#/definitions/__type_7" },
    "__type_8": {
      "title": "__type_8",
      "type": "object",
      "properties": {
        "initial_contact": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "enum": [
                  "asking_for_help",
                  "captured",
                  "derelict",
                  "destroyed",
                  "dismissive",
                  "familiar",
                  "friendly",
                  "hostile",
                  "in_battle",
                  "neutral_automated",
                  "uncooperative",
                  "unresponsive",
                  "wary",
                  "welcoming"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "initial_contact"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_6": { "$ref": "#/definitions/__type_8" },
    "__type_9": {
      "title": "__type_9",
      "type": "object",
      "properties": {
        "location": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / ** / Location",
                "enum": ["deep_space", "orbital", "planetside"],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "location"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_7": { "$ref": "#/definitions/__type_9" },
    "__type_10": {
      "title": "__type_10",
      "type": "object",
      "properties": {
        "location_theme": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Location Themes / Theme Type",
                "enum": [
                  "chaotic",
                  "fortified",
                  "haunted",
                  "infested",
                  "inhabited",
                  "mechanical",
                  "ruined",
                  "sacred"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "location_theme"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_8": { "$ref": "#/definitions/__type_10" },
    "__type_11": {
      "title": "__type_11",
      "type": "object",
      "properties": {
        "region": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "enum": ["expanse", "outlands", "terminus"],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "region"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_9": { "$ref": "#/definitions/__type_11" },
    "DerelictSettlementRecord": {
      "title": "DerelictSettlementRecord",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "initial_contact": {
          "$ref": "#/definitions/SettlementInitialContact.Derelict",
          "title": "initial_contact"
        },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_5" },
            { "$ref": "#/definitions/AttributeMap_6" },
            { "$ref": "#/definitions/AttributeMap_7" },
            { "$ref": "#/definitions/AttributeMap_8" },
            { "$ref": "#/definitions/AttributeMap_9" },
            { "$ref": "#/definitions/AttributeMap_10" },
            { "$ref": "#/definitions/AttributeMap_11" }
          ],
          "title": "requirements"
        },
        "object_type": {
          "$ref": "#/definitions/GameObjectType.Derelict",
          "title": "object_type"
        },
        "derelict_type": {
          "$ref": "#/definitions/DerelictType.Settlement",
          "title": "derelict_type"
        }
      },
      "required": ["derelict_type", "initial_contact", "object_type"]
    },
    "__type_12": {
      "title": "__type_12",
      "type": "object",
      "properties": {
        "authority": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Settlements / Authority",
                "enum": [
                  "corrupt",
                  "fair",
                  "ineffectual",
                  "none_lawless",
                  "oppressive",
                  "tolerant",
                  "unyielding"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "authority"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_10": { "$ref": "#/definitions/__type_12" },
    "__type_13": {
      "title": "__type_13",
      "type": "object",
      "properties": {
        "population": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Settlements / Population",
                "enum": [
                  "dozens",
                  "few",
                  "hundreds",
                  "tens_of_thousands",
                  "thousands"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "population"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_11": { "$ref": "#/definitions/__type_13" },
    "DerelictType.Settlement": {
      "title": "DerelictType.Settlement",
      "type": "string",
      "enum": ["settlement"]
    },
    "SettlementInitialContact.Derelict": {
      "title": "SettlementInitialContact.Derelict",
      "type": "string",
      "enum": ["derelict"]
    },
    "DerelictStarshipRecord": {
      "title": "DerelictStarshipRecord",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "initial_contact": {
          "$ref": "#/definitions/StarshipInitialContact.Derelict",
          "title": "initial_contact"
        },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_5" },
            { "$ref": "#/definitions/AttributeMap_6" },
            { "$ref": "#/definitions/AttributeMap_7" },
            { "$ref": "#/definitions/AttributeMap_8" },
            { "$ref": "#/definitions/AttributeMap_9" },
            { "$ref": "#/definitions/AttributeMap_12" }
          ],
          "title": "requirements"
        },
        "object_type": {
          "$ref": "#/definitions/GameObjectType.Derelict",
          "title": "object_type"
        },
        "derelict_type": {
          "$ref": "#/definitions/DerelictType.Starship",
          "title": "derelict_type"
        }
      },
      "required": ["derelict_type", "initial_contact", "object_type"]
    },
    "__type_14": {
      "title": "__type_14",
      "type": "object",
      "properties": {
        "starship_type": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "enum": [
                  "carrier",
                  "corvette",
                  "courier",
                  "cruiser",
                  "dreadnought",
                  "escape",
                  "foundry",
                  "harvester",
                  "hauler",
                  "hunter",
                  "ironhome",
                  "mender",
                  "multipurpose",
                  "outbounder",
                  "pennant",
                  "prospector",
                  "reclaimer",
                  "shuttle",
                  "snub_fighter",
                  "unusual_or_unknown"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "starship_type"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_12": { "$ref": "#/definitions/__type_14" },
    "DerelictType.Starship": {
      "title": "DerelictType.Starship",
      "type": "string",
      "enum": ["starship"]
    },
    "StarshipInitialContact.Derelict": {
      "title": "StarshipInitialContact.Derelict",
      "type": "string",
      "enum": ["derelict"]
    },
    "__type_15": {
      "title": "__type_15",
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T_3", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_5" },
            { "$ref": "#/definitions/AttributeMap_7" },
            { "$ref": "#/definitions/AttributeMap_8" },
            { "$ref": "#/definitions/AttributeMap_9" }
          ],
          "title": "requirements"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["object_type"]
    },
    "GameObjectType.DerelictZone": {
      "title": "GameObjectType.DerelictZone",
      "type": "string",
      "enum": ["derelict_zone"]
    },
    "T_3": { "$ref": "#/definitions/GameObjectType.DerelictZone" },
    "DerelictZoneRecord": { "$ref": "#/definitions/__type_15" },
    "FactionDominionRecord": {
      "title": "FactionDominionRecord",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T_4", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_13" },
            { "$ref": "#/definitions/AttributeMap_14" },
            { "$ref": "#/definitions/AttributeMap_15" },
            { "$ref": "#/definitions/AttributeMap_16" }
          ],
          "title": "requirements"
        }
      },
      "required": ["object_type"]
    },
    "GameObjectType.Faction": {
      "title": "GameObjectType.Faction",
      "type": "string",
      "enum": ["faction"]
    },
    "T_4": { "$ref": "#/definitions/GameObjectType.Faction" },
    "__type_16": {
      "title": "__type_16",
      "type": "object",
      "properties": {
        "dominion": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Factions / Dominion",
                "enum": [
                  "agriculture",
                  "artistry",
                  "commerce",
                  "conquest",
                  "construction",
                  "diplomacy",
                  "education",
                  "environmentalism",
                  "exploration",
                  "faith",
                  "history",
                  "honor",
                  "industry",
                  "isolationism",
                  "law",
                  "mysticism",
                  "pacifism",
                  "prophecy",
                  "science",
                  "secrecy",
                  "technology",
                  "treachery",
                  "warfare",
                  "wealth"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "dominion"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_13": { "$ref": "#/definitions/__type_16" },
    "__type_17": {
      "title": "__type_17",
      "type": "object",
      "properties": {
        "faction_type": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Factions / Type",
                "enum": ["dominion", "fringe_group", "guild"],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "faction_type"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_14": { "$ref": "#/definitions/__type_17" },
    "__type_18": {
      "title": "__type_18",
      "type": "object",
      "properties": {
        "influence": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Factions / Influence",
                "enum": [
                  "dominant",
                  "established",
                  "forsaken",
                  "inescapable",
                  "isolated",
                  "localized",
                  "notable"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "influence"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_15": { "$ref": "#/definitions/__type_18" },
    "__type_19": {
      "title": "__type_19",
      "type": "object",
      "properties": {
        "leadership": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Factions / Leadership",
                "enum": [
                  "anarchist",
                  "authoritarian_dictatorship",
                  "clan_chiefs_or_elders",
                  "disputed_leadership",
                  "dynastic_lineage",
                  "elected_representatives",
                  "fated_or_prophesied_leader",
                  "machine_intelligence",
                  "oligarchical_elite",
                  "varied_decentralized"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "leadership"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_16": { "$ref": "#/definitions/__type_19" },
    "FactionFringeGroupRecord": {
      "title": "FactionFringeGroupRecord",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T_4", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_14" },
            { "$ref": "#/definitions/AttributeMap_15" },
            { "$ref": "#/definitions/AttributeMap_17" }
          ],
          "title": "requirements"
        }
      },
      "required": ["object_type"]
    },
    "__type_20": {
      "title": "__type_20",
      "type": "object",
      "properties": {
        "fringe_group": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Factions / Fringe Group",
                "enum": [
                  "cultists",
                  "exiles",
                  "gangsters",
                  "hackers",
                  "monster_hunters",
                  "pirates",
                  "raiders",
                  "rebels",
                  "rogue_ai",
                  "scavengers",
                  "smugglers"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "fringe_group"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_17": { "$ref": "#/definitions/__type_20" },
    "FactionGuildRecord": {
      "title": "FactionGuildRecord",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T_4", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_14" },
            { "$ref": "#/definitions/AttributeMap_15" },
            { "$ref": "#/definitions/AttributeMap_18" }
          ],
          "title": "requirements"
        }
      },
      "required": ["object_type"]
    },
    "__type_21": {
      "title": "__type_21",
      "type": "object",
      "properties": {
        "guild": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Factions / Guild",
                "enum": [
                  "assassins",
                  "bounty_hunters",
                  "couriers",
                  "courtesans",
                  "engineers",
                  "healers",
                  "industrialists",
                  "mercenaries",
                  "merchants",
                  "mystics",
                  "navigators",
                  "peacekeepers",
                  "researchers",
                  "spies"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "guild"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_18": { "$ref": "#/definitions/__type_21" },
    "__type_22": {
      "title": "__type_22",
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T_4", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_14" },
            { "$ref": "#/definitions/AttributeMap_15" }
          ],
          "title": "requirements"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["object_type"]
    },
    "FactionRecord": { "$ref": "#/definitions/__type_22" },
    "__type_23": {
      "title": "__type_23",
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T_5", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_7" },
            { "$ref": "#/definitions/AttributeMap_8" },
            { "$ref": "#/definitions/AttributeMap_9" },
            { "$ref": "#/definitions/AttributeMap_19" },
            { "$ref": "#/definitions/AttributeMap_20" },
            { "$ref": "#/definitions/AttributeMap_21" }
          ],
          "title": "requirements"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["object_type"]
    },
    "GameObjectType.Planet": {
      "title": "GameObjectType.Planet",
      "type": "string",
      "enum": ["planet"]
    },
    "T_5": { "$ref": "#/definitions/GameObjectType.Planet" },
    "__type_24": {
      "title": "__type_24",
      "type": "object",
      "properties": {
        "atmosphere": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Planets / * / Atmosphere",
                "enum": [
                  "breathable",
                  "corrosive",
                  "ideal",
                  "marginal",
                  "none_thin",
                  "toxic"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "atmosphere"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_19": { "$ref": "#/definitions/__type_24" },
    "__type_25": {
      "title": "__type_25",
      "type": "object",
      "properties": {
        "life": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by Oracles / Planets / * / Life",
                "enum": [
                  "bountiful",
                  "diverse",
                  "extinct",
                  "none",
                  "overrun",
                  "scarce"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "life"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_20": { "$ref": "#/definitions/__type_25" },
    "__type_26": {
      "title": "__type_26",
      "type": "object",
      "properties": {
        "planetary_class": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "description": "Set by \"Oracles / Planets / Class\"",
                "enum": [
                  "desert",
                  "furnace",
                  "grave",
                  "ice",
                  "jovian",
                  "jungle",
                  "ocean",
                  "rocky",
                  "shattered",
                  "tainted",
                  "vital"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "planetary_class"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_21": { "$ref": "#/definitions/__type_26" },
    "PlanetRecord": { "$ref": "#/definitions/__type_23" },
    "__type_27": {
      "title": "__type_27",
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T_6", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_7" },
            { "$ref": "#/definitions/AttributeMap_8" },
            { "$ref": "#/definitions/AttributeMap_9" }
          ],
          "title": "requirements"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["object_type"]
    },
    "GameObjectType.PrecursorVault": {
      "title": "GameObjectType.PrecursorVault",
      "type": "string",
      "enum": ["precursor_vault"]
    },
    "T_6": { "$ref": "#/definitions/GameObjectType.PrecursorVault" },
    "PrecursorVaultRecord": { "$ref": "#/definitions/__type_27" },
    "SettlementRecord": {
      "title": "SettlementRecord",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T_7", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_6" },
            { "$ref": "#/definitions/AttributeMap_7" },
            { "$ref": "#/definitions/AttributeMap_8" },
            { "$ref": "#/definitions/AttributeMap_9" },
            { "$ref": "#/definitions/AttributeMap_10" },
            { "$ref": "#/definitions/AttributeMap_11" }
          ],
          "title": "requirements"
        }
      },
      "required": ["object_type"]
    },
    "GameObjectType.Settlement": {
      "title": "GameObjectType.Settlement",
      "type": "string",
      "enum": ["settlement"]
    },
    "T_7": { "$ref": "#/definitions/GameObjectType.Settlement" },
    "StarshipRecord": {
      "title": "StarshipRecord",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T_8", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_6" },
            { "$ref": "#/definitions/AttributeMap_7" },
            { "$ref": "#/definitions/AttributeMap_8" },
            { "$ref": "#/definitions/AttributeMap_9" },
            { "$ref": "#/definitions/AttributeMap_12" }
          ],
          "title": "requirements"
        }
      },
      "required": ["object_type"]
    },
    "GameObjectType.Starship": {
      "title": "GameObjectType.Starship",
      "type": "string",
      "enum": ["starship"]
    },
    "T_8": { "$ref": "#/definitions/GameObjectType.Starship" },
    "FleetRecord": {
      "title": "FleetRecord",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "object_type": { "$ref": "#/definitions/T_8", "title": "object_type" },
        "inherit_rolls": { "type": "boolean", "title": "inherit_rolls" },
        "requirements": {
          "anyOf": [
            { "$ref": "#/definitions/AttributeMap_6" },
            { "$ref": "#/definitions/AttributeMap_7" },
            { "$ref": "#/definitions/AttributeMap_8" },
            { "$ref": "#/definitions/AttributeMap_9" },
            { "$ref": "#/definitions/AttributeMap_22" }
          ],
          "title": "requirements"
        }
      },
      "required": ["object_type"]
    },
    "__type_28": {
      "title": "__type_28",
      "type": "object",
      "properties": {
        "fleet_type": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "enum": [
                  "battle_fleet",
                  "pirate_wing",
                  "raider_horde",
                  "salvager_hive",
                  "settler_caravan",
                  "trade_caravan",
                  "transport_and_escorts"
                ],
                "type": "string"
              }
            },
            { "type": "null" }
          ],
          "title": "fleet_type"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "AttributeMap_22": { "$ref": "#/definitions/__type_28" },
    "Display": {
      "description": "Interface for data relevant to an item's display/rendering.",
      "title": "Display",
      "$ref": "#/definitions/Display_1"
    },
    "Display_1": {
      "description": "Interface for data relevant to an item's display/rendering.",
      "title": "Display_1",
      "type": "object",
      "properties": {
        "icon": {
          "description": "A URL pointing to a single SVG icon.",
          "pattern": "^img/vector/[A-z-_0-9/]+\\.svg$",
          "type": "string",
          "title": "icon"
        },
        "images": {
          "description": "An array of URLs pointing to one or more WEBP images.",
          "pattern": "^img/raster/[A-z-_0-9/]+\\.webp$",
          "type": "array",
          "items": { "type": "string" },
          "title": "images"
        },
        "color": {
          "description": "A hex color associated with this item, for use as e.g. an accent color in its display.",
          "pattern": "^#[A-f0-9][A-f0-9][A-f0-9][A-f0-9][A-f0-9][A-f0-9]$",
          "type": "string",
          "title": "color"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "YamlTitle": {
      "title": "YamlTitle",
      "type": "object",
      "properties": {
        "canonical": {
          "description": "The title of this item, which here is defined as the associated header text *exactly* as it appears on the page.\n\nFor items that represent a single table column, this is the label that appears at the top of the column.\n\nUse this title if you want high fidelity to the book. For most interactive UX, it's recommended to use {@link Title.standard} instead.",
          "pattern": "^[A-Z][a-zâ€™ \\(\\)-]+$",
          "type": "string",
          "title": "canonical"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(starforged|ironsworn)/[0-9a-z_/-]+/title$",
          "type": "string",
          "title": "$id"
        },
        "short": {
          "description": "The shortest title for this item that remains distinct amongst its siblings.\n\nUnless you're very pressed for space, most UX should use {@link Title.standard} instead.",
          "pattern": "^[A-Z][a-z -]+$",
          "type": "string",
          "title": "short"
        },
        "standard": {
          "description": "The recommended title for most implementations.\n\nThis is usually the same as the canonical title, but editorializes a bit by trimming out things like \"Oracle 15\" in some Ironsworn oracles (because *nobody* remembers it as \"Oracle 15\").\n\nIf you need the shortest possible name, see {@link Title.short} instead.",
          "pattern": "^[A-Z][a-zâ€™ -]+$",
          "type": "string",
          "title": "standard"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "source": { "$ref": "#/definitions/YamlSource", "title": "source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["canonical"]
    },
    "Source": {
      "description": "Interface representing data on this item's source. For 'canonical' content, this is usually a book with numbered pages, but it might also be a link to a web site.",
      "title": "Source",
      "type": "object",
      "properties": {
        "title": {
          "description": "The title of the source.\n\nFor 'canonical' content, use one of the enumerated `SourceTitle` strings.\n\nFor 3rd-party content (including homebrew) that's been released as part of a titled document, use the title of that document (e.g. \"Steelforged\", \"Ironsmith\").\n\nIf the source has no particular title (for instance, it's a single custom element in a VTT implementation), use \"Custom\".",
          "type": "string",
          "title": "title"
        },
        "authors": {
          "description": "The author(s) of this item. For 'canonical' content, this one's usually pretty obvious ðŸ˜‰ However, it's included so that homebrew content can use the same interface/schema.",
          "default": "['Shawn Tomkin']",
          "type": "array",
          "items": { "type": "string" },
          "title": "authors"
        },
        "date": {
          "description": "The 6-number date string formatted as `MMDDYY`. Relevant only during Starforged development; it will be deprecated once the game is released.",
          "pattern": "^(0[1-9]|1[0-2])([0-2][1-9]|3[0-1])([0-9][0-9])$",
          "type": "string",
          "title": "date"
        },
        "page": {
          "description": "The page on which the item appears most prominently in the source material (if it's in a format that uses page numbers).",
          "type": "integer",
          "title": "page"
        },
        "uri": {
          "description": "The URI where the source material is available.",
          "pattern": "^https?://.*$",
          "type": "string",
          "title": "uri"
        },
        "license": {
          "$ref": "#/definitions/License_1",
          "description": "The URI pointing to the license which this content falls under.",
          "title": "license"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["authors", "license", "title"]
    },
    "License_1": {
      "title": "License_1",
      "enum": [
        "None",
        "https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "https://creativecommons.org/licenses/by-sa/4.0/"
      ],
      "type": "string"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}
