{
  "type": "object",
  "properties": {
    "Asset Types": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/IAssetTypeYaml" },
      "defaultProperties": [],
      "title": "Asset Types"
    },
    "$schema": { "type": "string", "title": "$schema" },
    "_refs": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {},
        "additionalProperties": true
      },
      "defaultProperties": [],
      "title": "_refs"
    },
    "_templates": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {},
        "additionalProperties": true
      },
      "defaultProperties": [],
      "title": "_templates"
    },
    "Source": {
      "$ref": "#/definitions/ISource",
      "description": "Information on this item's source.",
      "title": "Source"
    }
  },
  "defaultProperties": [],
  "additionalProperties": false,
  "required": ["Asset Types", "Source"],
  "definitions": {
    "IAssetTypeYaml": {
      "title": "IAssetTypeYaml",
      "type": "object",
      "properties": {
        "Assets": {
          "type": "object",
          "additionalProperties": { "$ref": "#/definitions/IAssetYaml" },
          "defaultProperties": [],
          "title": "Assets"
        },
        "Description": {
          "description": "A user-facing markdown description of the item, consisting of one or more paragraphs.",
          "type": "string",
          "title": "Description"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Display": {
          "$ref": "#/definitions/IDisplay",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Usage": { "$ref": "#/definitions/IAssetUsage", "title": "Usage" },
        "Aliases": {
          "description": "Alternate names for this item, including: names it had earlier in development that have since changed, alternate spellings/punctuation, common misspellings, and so on.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Aliases"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" },
        "Title": { "$ref": "#/definitions/ITitleYaml", "title": "Title" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Assets", "Description", "Title"]
    },
    "IAssetYaml": {
      "title": "IAssetYaml",
      "type": "object",
      "properties": {
        "Abilities": {
          "type": "array",
          "items": [
            { "$ref": "#/definitions/IAssetAbilityYaml" },
            { "$ref": "#/definitions/IAssetAbilityYaml" },
            { "$ref": "#/definitions/IAssetAbilityYaml" }
          ],
          "minItems": 3,
          "maxItems": 3,
          "title": "Abilities"
        },
        "Inputs": {
          "type": "array",
          "items": {
            "anyOf": [
              { "$ref": "#/definitions/IInputSelectYaml" },
              { "$ref": "#/definitions/IInputTextYaml" }
            ]
          },
          "title": "Inputs"
        },
        "Condition Meter": {
          "$ref": "#/definitions/IConditionMeterYaml",
          "title": "Condition Meter"
        },
        "States": {
          "type": "array",
          "items": { "$ref": "#/definitions/IAssetStateYaml" },
          "title": "States"
        },
        "Attachments": {
          "description": "Details on what attachments (other assets) are accepted by this asset.",
          "$ref": "#/definitions/IAssetAttachment",
          "title": "Attachments"
        },
        "Requirement": {
          "description": "An optional markdown string representing the requirement text that appears at the top of some asset cards.",
          "type": "string",
          "title": "Requirement"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Asset Type": {
          "description": "The ID of the asset's parent AssetType",
          "type": "string",
          "title": "Asset Type"
        },
        "Display": {
          "$ref": "#/definitions/IDisplay",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Tags"
        },
        "Usage": {
          "$ref": "#/definitions/IAssetUsage",
          "description": "Information on the asset's usage, such as whether its abilities are shared amongst the player characters.",
          "title": "Usage"
        },
        "Aliases": {
          "description": "Alternate names for this item, including: names it had earlier in development that have since changed, alternate spellings/punctuation, common misspellings, and so on.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Aliases"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" },
        "Title": { "$ref": "#/definitions/ITitleYaml", "title": "Title" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Abilities", "Title"]
    },
    "IAssetAbilityYaml": {
      "title": "IAssetAbilityYaml",
      "type": "object",
      "properties": {
        "Alter Moves": {
          "type": "array",
          "items": { "$ref": "#/definitions/IAlterMoveYaml" },
          "title": "Alter Moves"
        },
        "Moves": {
          "type": "array",
          "items": { "$ref": "#/definitions/IMoveYaml" },
          "title": "Moves"
        },
        "Inputs": {
          "type": "array",
          "items": {
            "anyOf": [
              { "$ref": "#/definitions/IInputClockYaml" },
              { "$ref": "#/definitions/IInputNumberYaml" },
              { "$ref": "#/definitions/IInputTextYaml" }
            ]
          },
          "title": "Inputs"
        },
        "Alter Momentum": {
          "$ref": "#/definitions/IAlterMomentumYaml",
          "title": "Alter Momentum"
        },
        "Alter Properties": {
          "$ref": "#/definitions/IAssetAlterPropertiesYaml",
          "title": "Alter Properties"
        },
        "Label": {
          "description": "Ironsworn companion assets provide labels for their abilities. Starforged asset abilities do not have labels.",
          "type": "string",
          "title": "Label"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]$",
          "type": "string",
          "title": "$id"
        },
        "Enabled": {
          "description": "Whether the asset ability is enabled or not. In most cases, the first asset ability defaults to 'true' and the others to 'false'. If none of an asset's abilities are set to 'true', the player can pick which the ability they start with when purchasing the asset.",
          "type": "boolean",
          "title": "Enabled"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Text"]
    },
    "IAlterMoveYaml": {
      "title": "IAlterMoveYaml",
      "type": "object",
      "properties": {
        "Trigger": {
          "$ref": "#/definitions/IAlterMoveTriggerYaml",
          "title": "Trigger"
        },
        "Outcomes": {
          "$ref": "#/definitions/IAlterMoveOutcomesYaml",
          "title": "Outcomes"
        },
        "Text": {
          "description": "Markdown rules text describing added effects which apply *before* the move is rolled, such as adds.",
          "type": "string",
          "title": "Text"
        },
        "Suggestions": {
          "$ref": "#/definitions/ISuggestions",
          "description": "\"Non-canonical\" suggestions of related items. They might be convenient to present to the user, but in most implementations rolling them automatically is not recommended.",
          "title": "Suggestions"
        },
        "Asset": {
          "description": "The ID of the parent Asset of the move, if any.",
          "type": "string",
          "title": "Asset"
        },
        "Category": {
          "description": "The ID of the move's category.",
          "type": "string",
          "title": "Category"
        },
        "Progress Move": {
          "description": "Whether or not the move is a Progress Move. Progress moves roll two challenge dice against a progress score.",
          "type": "boolean",
          "title": "Progress Move"
        },
        "Variant of": {
          "description": "The ID of the move that this move is a variant of, if any.",
          "type": "string",
          "title": "Variant of"
        },
        "Oracles": {
          "description": "The IDs of any oracles directly referenced by the move, or vice versa.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Oracles"
        },
        "Optional": {
          "description": "Whether or not the source material presents this rules item as optional.",
          "default": false,
          "type": "boolean",
          "title": "Optional"
        },
        "Moves": {
          "description": "The `$id`s of the move(s) to be altered. If it's `null`, it can alter *any* move to which its trigger conditions apply. If it's `undefined`, see `Extends` instead.",
          "anyOf": [
            { "type": "array", "items": { "type": "string" } },
            { "type": "null" },
            { "type": "null" }
          ],
          "title": "Moves"
        },
        "Alters": {
          "description": "Some asset abilities alter/extend other asset abilities, specified as an array of IDs. Only changed properties are specified; other properties are the same.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Alters"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[1-9][0-9]*$",
          "type": "string",
          "title": "$id"
        },
        "Title": {
          "$ref": "#/definitions/ITitle",
          "description": "Note the \"Canonical\" key for asset-specific moves is something of a misnomer, as in the original text doesn't name them. They're provided in the same format for convenience, however.",
          "title": "Title"
        },
        "Display": {
          "$ref": "#/definitions/IDisplay",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Tags"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IAlterMoveTriggerYaml": {
      "title": "IAlterMoveTriggerYaml",
      "type": "object",
      "properties": {
        "Options": {
          "type": "array",
          "items": {
            "anyOf": [
              { "$ref": "#/definitions/IAlterMoveTriggerOptionActionYaml" },
              { "$ref": "#/definitions/IAlterMoveTriggerOptionProgressYaml" }
            ]
          },
          "title": "Options"
        },
        "Text": {
          "description": "A markdown string containing the primary trigger text for this move.\n\nSecondary triggers (for specific stats or uses of an asset ability) are described in `Options`.",
          "type": "string",
          "title": "Text"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "By": {
          "description": "Information on who can trigger this item. Used mainly by asset abilities, some of which can trigger from an Ally's move.\n\nIf unspecified, assume `Ally` is `false` and `Player` is `true`.",
          "$ref": "#/definitions/IMoveTriggerBy",
          "title": "By"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Trigger$",
          "type": "string",
          "title": "$id"
        },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IAlterMoveTriggerOptionActionYaml": {
      "title": "IAlterMoveTriggerOptionActionYaml",
      "type": "object",
      "properties": {
        "Using": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Using"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "Roll type": {
          "$ref": "#/definitions/RollType.Action",
          "description": "Whether this option is an action roll or progress roll.",
          "title": "Roll type"
        },
        "Custom stat": {
          "description": "Defines a custom stat, if one is included in this object's `With` array.",
          "$ref": "#/definitions/ICustomStat",
          "title": "Custom stat"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Trigger/Options/[0-9]+$",
          "type": "string",
          "title": "$id"
        },
        "Method": {
          "$ref": "#/definitions/RollMethod",
          "description": "The method used to choose the stat or track in the `Using` array.",
          "title": "Method"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Roll type"]
    },
    "RollType.Action": {
      "title": "RollType.Action",
      "type": "string",
      "enum": ["Action roll"]
    },
    "ICustomStat": {
      "title": "ICustomStat",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Moves/([A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[0-9]+)/[A-z_-]+/Trigger/Options/[0-9]+/Custom_stat$",
          "type": "string",
          "title": "$id"
        },
        "Options": {
          "type": "array",
          "items": { "$ref": "#/definitions/ICustomStatOption" },
          "title": "Options"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Label", "Options"]
    },
    "ICustomStatOption": {
      "title": "ICustomStatOption",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Moves/([A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[0-9]+)/[A-z_-]+/Trigger/Options/[0-9]+/Custom_stat/[A-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Value": {
          "description": "The numeric value to be used as +stat when making an Action Roll.",
          "type": "integer",
          "title": "Value"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Label", "Value"]
    },
    "RollMethod": {
      "description": "The stat(s) or progress track(s) that may be rolled with the parent move trigger option.",
      "title": "RollMethod",
      "enum": [
        "All",
        "Any",
        "Highest",
        "Inherit",
        "Lowest",
        "Strong Hit",
        "Weak Hit"
      ],
      "type": "string"
    },
    "ISourceYaml": {
      "title": "ISourceYaml",
      "type": "object",
      "properties": {
        "Title": {
          "description": "The title of the source.\n\nFor 'canonical' content, use one of the enumerated `SourceTitle` strings.\n\nFor 3rd-party content (including homebrew) that's been released as part of a titled document, use the title of that document (e.g. \"Steelforged\", \"Ironsmith\").\n\nIf the source has no particular title (for instance, it's a single custom element in a VTT implementation), use \"Custom\".",
          "type": "string",
          "title": "Title"
        },
        "Authors": {
          "description": "The author(s) of this item. For 'canonical' content, this one's usually pretty obvious 😉 However, it's included so that homebrew content can use the same interface/schema.",
          "default": ["Shawn Tomkin"],
          "type": "array",
          "items": { "type": "string" },
          "title": "Authors"
        },
        "Date": {
          "description": "The 6-number date string formatted as `MMDDYY`. Relevant only during Starforged development; it will be deprecated once the game is released.",
          "pattern": "^(0[1-9]|1[0-2])([0-2][1-9]|3[0-1])([0-9][0-9])$",
          "type": "string",
          "title": "Date"
        },
        "Page": {
          "description": "The page on which the item appears most prominently in the source material (if it's in a format that uses page numbers).",
          "type": "integer",
          "title": "Page"
        },
        "Url": {
          "description": "The URL where the source material is available.",
          "pattern": "^https?://.*$",
          "type": "string",
          "title": "Url"
        },
        "License": {
          "$ref": "#/definitions/License",
          "description": "The URL pointing to the license which this content falls under.",
          "title": "License"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "License": {
      "title": "License",
      "enum": [
        "None",
        "https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "https://creativecommons.org/licenses/by-sa/4.0/"
      ],
      "type": "string"
    },
    "IAlterMoveTriggerOptionProgressYaml": {
      "title": "IAlterMoveTriggerOptionProgressYaml",
      "type": "object",
      "properties": {
        "Using": {
          "type": "array",
          "items": {
            "enum": [
              "bonds legacy",
              "bonds track",
              "combat progress",
              "connection progress",
              "delve progress",
              "discoveries legacy",
              "expedition progress",
              "journey progress",
              "quests legacy",
              "scene challenge progress",
              "vow progress"
            ],
            "type": "string"
          },
          "title": "Using"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "Roll type": {
          "$ref": "#/definitions/RollType.Progress",
          "description": "Whether this option is an action roll or progress roll.",
          "title": "Roll type"
        },
        "Custom stat": {
          "description": "Defines a custom stat, if one is included in this object's `With` array.",
          "$ref": "#/definitions/ICustomStat",
          "title": "Custom stat"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Trigger/Options/[0-9]+$",
          "type": "string",
          "title": "$id"
        },
        "Method": {
          "$ref": "#/definitions/RollMethod",
          "description": "The method used to choose the stat or track in the `Using` array.",
          "title": "Method"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Roll type"]
    },
    "RollType.Progress": {
      "title": "RollType.Progress",
      "type": "string",
      "enum": ["Progress roll"]
    },
    "IMoveTriggerBy": {
      "title": "IMoveTriggerBy",
      "type": "object",
      "properties": {
        "Player": {
          "description": "Whether the player character who owns this item can trigger it. Unsurprisingly, this is usually true, but there's a few exceptions: see *Starforged's* LOYALIST asset for an example.",
          "type": "boolean",
          "title": "Player"
        },
        "Ally": {
          "description": "Whether an Ally (a player character other than the owner) can trigger this item. This is usually false, but there's several exceptions among asset abilities.",
          "type": "boolean",
          "title": "Ally"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Ally", "Player"]
    },
    "IAlterMoveOutcomesYaml": {
      "title": "IAlterMoveOutcomesYaml",
      "type": "object",
      "properties": {
        "Strong Hit": {
          "$ref": "#/definitions/IAlterMoveOutcomeStrongHitYaml",
          "title": "Strong Hit"
        },
        "Weak Hit": {
          "$ref": "#/definitions/IAlterMoveOutcomeWeakHitYaml",
          "title": "Weak Hit"
        },
        "Miss": {
          "$ref": "#/definitions/IAlterMoveOutcomeMissYaml",
          "title": "Miss"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IAlterMoveOutcomeStrongHitYaml": {
      "title": "IAlterMoveOutcomeStrongHitYaml",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes/((Miss|Strong_Hit)(/With_a_Match)?|Weak_Hit)$",
          "type": "string",
          "title": "$id"
        },
        "With a Match": {
          "$ref": "#/definitions/IOutcomeStrongHitMatchYaml",
          "title": "With a Match"
        },
        "In Control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "In Control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong Hit", "Weak Hit"],
          "type": "string",
          "title": "Count as"
        },
        "Reroll": {
          "$ref": "#/definitions/IMoveRerollYaml",
          "title": "Reroll"
        },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IOutcomeStrongHitMatchYaml": {
      "title": "IOutcomeStrongHitMatchYaml",
      "type": "object",
      "properties": {
        "With a Match": {
          "$ref": "#/definitions/IOutcomeInfoBaseYaml<2>",
          "title": "With a Match"
        },
        "Reroll": {
          "$ref": "#/definitions/IMoveRerollYaml",
          "title": "Reroll"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "In Control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "In Control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong Hit", "Weak Hit"],
          "type": "string",
          "title": "Count as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes/((Miss|Strong_Hit)(/With_a_Match)?|Weak_Hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IOutcomeInfoBaseYaml<2>": {
      "title": "IOutcomeInfoBaseYaml<2>",
      "type": "object",
      "properties": {
        "With a Match": {
          "$ref": "#/definitions/IOutcomeInfoBaseYaml<2>",
          "title": "With a Match"
        },
        "Reroll": {
          "$ref": "#/definitions/IMoveRerollYaml",
          "title": "Reroll"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "In Control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "In Control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong Hit", "Weak Hit"],
          "type": "string",
          "title": "Count as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes/((Miss|Strong_Hit)(/With_a_Match)?|Weak_Hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IMoveRerollYaml": {
      "title": "IMoveRerollYaml",
      "type": "object",
      "properties": {
        "Text": {
          "description": "The markdown string describing the conditions of the reroll. It should be presented to the user so that they can decide whether a reroll is appropriate.",
          "type": "string",
          "title": "Text"
        },
        "Dice": {
          "$ref": "#/definitions/RerollType",
          "description": "The dice to be rerolled.",
          "title": "Dice"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Dice"]
    },
    "RerollType": {
      "description": "Enumerates which dice are to be rerolled.",
      "title": "RerollType",
      "enum": ["Action die", "All", "Any", "Challenge dice", "Challenge die"],
      "type": "string"
    },
    "IAlterMoveOutcomeWeakHitYaml": {
      "title": "IAlterMoveOutcomeWeakHitYaml",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes/((Miss|Strong_Hit)(/With_a_Match)?|Weak_Hit)$",
          "type": "string",
          "title": "$id"
        },
        "With a Match": {
          "$ref": "#/definitions/IOutcomeInfoBaseYaml<1>",
          "title": "With a Match"
        },
        "In Control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "In Control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong Hit", "Weak Hit"],
          "type": "string",
          "title": "Count as"
        },
        "Reroll": {
          "$ref": "#/definitions/IMoveRerollYaml",
          "title": "Reroll"
        },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IOutcomeInfoBaseYaml<1>": {
      "title": "IOutcomeInfoBaseYaml<1>",
      "type": "object",
      "properties": {
        "With a Match": {
          "$ref": "#/definitions/IOutcomeInfoBaseYaml<1>",
          "title": "With a Match"
        },
        "Reroll": {
          "$ref": "#/definitions/IMoveRerollYaml",
          "title": "Reroll"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "In Control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "In Control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong Hit", "Weak Hit"],
          "type": "string",
          "title": "Count as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes/((Miss|Strong_Hit)(/With_a_Match)?|Weak_Hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IAlterMoveOutcomeMissYaml": {
      "title": "IAlterMoveOutcomeMissYaml",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes/((Miss|Strong_Hit)(/With_a_Match)?|Weak_Hit)$",
          "type": "string",
          "title": "$id"
        },
        "With a Match": {
          "$ref": "#/definitions/IOutcomeMissMatchYaml",
          "title": "With a Match"
        },
        "In Control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "In Control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong Hit", "Weak Hit"],
          "type": "string",
          "title": "Count as"
        },
        "Reroll": {
          "$ref": "#/definitions/IMoveRerollYaml",
          "title": "Reroll"
        },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IOutcomeMissMatchYaml": {
      "title": "IOutcomeMissMatchYaml",
      "type": "object",
      "properties": {
        "With a Match": {
          "$ref": "#/definitions/IOutcomeInfoBaseYaml<0>",
          "title": "With a Match"
        },
        "Reroll": {
          "$ref": "#/definitions/IMoveRerollYaml",
          "title": "Reroll"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "In Control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "In Control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong Hit", "Weak Hit"],
          "type": "string",
          "title": "Count as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes/((Miss|Strong_Hit)(/With_a_Match)?|Weak_Hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IOutcomeInfoBaseYaml<0>": {
      "title": "IOutcomeInfoBaseYaml<0>",
      "type": "object",
      "properties": {
        "With a Match": {
          "$ref": "#/definitions/IOutcomeInfoBaseYaml<0>",
          "title": "With a Match"
        },
        "Reroll": {
          "$ref": "#/definitions/IMoveRerollYaml",
          "title": "Reroll"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "In Control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "In Control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong Hit", "Weak Hit"],
          "type": "string",
          "title": "Count as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes/((Miss|Strong_Hit)(/With_a_Match)?|Weak_Hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "ISuggestions": {
      "description": "Describes \"non-canonical\" suggestions for game content related to the parent item.\n\nThese are intended be offered as convenient shortcuts for the user (for instance, including a menu dropdown for rolling on suggested tables); having them roll automatically is **not recommended** for most projects.\n\nThese can be safely ignored if that functionality is not desired.",
      "title": "ISuggestions",
      "$ref": "#/definitions/ISuggestions_1"
    },
    "ISuggestions_1": {
      "description": "Describes \"non-canonical\" suggestions for game content related to the parent item.\n\nThese are intended be offered as convenient shortcuts for the user (for instance, including a menu dropdown for rolling on suggested tables); having them roll automatically is **not recommended** for most projects.\n\nThese can be safely ignored if that functionality is not desired.",
      "title": "ISuggestions_1",
      "type": "object",
      "properties": {
        "Game objects": {
          "description": "Suggested game objects and their parameters.",
          "type": "array",
          "items": { "$ref": "#/definitions/IGameObject" },
          "title": "Game objects"
        },
        "Oracle rolls": {
          "description": "Suggested oracle rolls, by table ID. Multiples of the same ID can be used to indicate that multiple rolls should be made.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Oracle rolls"
        },
        "Moves": {
          "description": "Suggested move IDs.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Moves"
        },
        "Assets": {
          "description": "Suggested asset IDs.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Assets"
        },
        "Encounters": {
          "description": "Suggested encounter IDs.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Encounters"
        },
        "Themes": {
          "description": "Suggested delve site themes.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Themes"
        },
        "Domains": {
          "description": "Suggested delve site domains.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Domains"
        },
        "Regions": {
          "description": "Suggested Ironlands regions.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Regions"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IGameObject": {
      "description": "Describes a game object, with optional required parameters (for example, a specific Location result).",
      "title": "IGameObject",
      "type": "object",
      "properties": {
        "Object type": {
          "$ref": "#/definitions/GameObjectType",
          "title": "Object type"
        },
        "Requires": {
          "$ref": "#/definitions/IRequirements",
          "title": "Requires"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Object type"]
    },
    "GameObjectType": {
      "title": "GameObjectType",
      "enum": [
        "Character",
        "Creature",
        "Derelict",
        "Derelict Zone",
        "Faction",
        "Planet",
        "Precursor Vault",
        "Settlement",
        "Starship"
      ],
      "type": "string"
    },
    "IRequirements": {
      "description": "Data describing an item's requirements.",
      "title": "IRequirements",
      "type": "object",
      "properties": {
        "Attributes": {
          "description": "A list of attribute keys, and values of those keys that satisfy the requirements.",
          "type": "array",
          "items": { "$ref": "#/definitions/IAttributeChoices" },
          "title": "Attributes"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Attributes"]
    },
    "IAttributeChoices": {
      "title": "IAttributeChoices",
      "type": "object",
      "properties": {
        "Key": { "$ref": "#/definitions/AttributeKey", "title": "Key" },
        "Values": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Values"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Key"]
    },
    "AttributeKey": {
      "title": "AttributeKey",
      "enum": [
        "Atmosphere",
        "Authority",
        "Creature Scale",
        "Derelict Type",
        "Disposition",
        "Dominion",
        "Encountered Behavior",
        "Environment",
        "Faction Type",
        "Fringe Group",
        "Guild",
        "Influence",
        "Initial Contact",
        "Leadership",
        "Life",
        "Location",
        "Location Theme",
        "Planetary Class",
        "Population",
        "Region",
        "Role",
        "Zone"
      ],
      "type": "string"
    },
    "ITitle": { "title": "ITitle", "$ref": "#/definitions/ITitle_1" },
    "ITitle_1": {
      "title": "ITitle_1",
      "type": "object",
      "properties": {
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/[0-9A-z_/-]+/Title$",
          "type": "string",
          "title": "$id"
        },
        "Canonical": {
          "description": "The title of this item, which here is defined as the associated header text *exactly* as it appears on the page.\n\nFor items that represent a single table column, this is the label that appears at the top of the column.\n\nUse this title if you want high fidelity to the book. For most interactive UX, it's recommended to use {@link ITitle.Standard} instead.",
          "type": "string",
          "title": "Canonical"
        },
        "Standard": {
          "description": "The recommended title for most implementations.\n\nThis is usually the same as the canonical title, but editorializes a bit by trimming out things like \"Oracle 15\" in some Ironsworn oracles (because *nobody* remembers it as \"Oracle 15\").\n\nIf you need the shortest possible name, see {@link ITitle.Short} instead.",
          "type": "string",
          "title": "Standard"
        },
        "Short": {
          "description": "The shortest title for this item that remains distinct amongst its siblings.\n\nUnless you're very pressed for space, most UX should use {@link ITitle.Standard} instead.",
          "type": "string",
          "title": "Short"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["$id", "Canonical", "Short", "Standard"]
    },
    "IDisplay": {
      "description": "Interface for data relevant to an item's display/rendering.",
      "title": "IDisplay",
      "$ref": "#/definitions/IDisplay_1"
    },
    "IDisplay_1": {
      "description": "Interface for data relevant to an item's display/rendering.",
      "title": "IDisplay_1",
      "type": "object",
      "properties": {
        "Icon": {
          "description": "A URL pointing to a single SVG icon.",
          "pattern": "^img/vector/[A-z-_0-9/]+\\.svg$",
          "type": "string",
          "title": "Icon"
        },
        "Images": {
          "description": "An array of URLs pointing to one or more WEBP images.",
          "pattern": "^img/raster/[A-z-_0-9/]+\\.webp$",
          "type": "array",
          "items": { "type": "string" },
          "title": "Images"
        },
        "Color": {
          "description": "A hex color associated with this item, for use as e.g. an accent color in its display.",
          "pattern": "^#[A-f0-9][A-f0-9][A-f0-9][A-f0-9][A-f0-9][A-f0-9]$",
          "type": "string",
          "title": "Color"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IMoveYaml": {
      "title": "IMoveYaml",
      "type": "object",
      "properties": {
        "Trigger": {
          "$ref": "#/definitions/IMoveTriggerYaml",
          "title": "Trigger"
        },
        "Outcomes": {
          "$ref": "#/definitions/IMoveOutcomesYaml",
          "title": "Outcomes"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "Suggestions": {
          "$ref": "#/definitions/ISuggestions",
          "description": "\"Non-canonical\" suggestions of related items. They might be convenient to present to the user, but in most implementations rolling them automatically is not recommended.",
          "title": "Suggestions"
        },
        "Asset": {
          "description": "The ID of the parent Asset of the move, if any.",
          "type": "string",
          "title": "Asset"
        },
        "Progress Move": {
          "description": "Whether or not the move is a Progress Move. Progress moves roll two challenge dice against a progress score.",
          "type": "boolean",
          "title": "Progress Move"
        },
        "Variant of": {
          "description": "The ID of the move that this move is a variant of, if any.",
          "type": "string",
          "title": "Variant of"
        },
        "Oracles": {
          "description": "The IDs of any oracles directly referenced by the move, or vice versa.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Oracles"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Moves/([A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3])/[A-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Display": {
          "$ref": "#/definitions/IDisplay",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Tags": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Tags"
        },
        "Category": {
          "description": "The ID of the move's category.",
          "type": "string",
          "title": "Category"
        },
        "Optional": {
          "description": "Whether or not the source material presents this rules item as optional.",
          "default": false,
          "type": "boolean",
          "title": "Optional"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" },
        "Title": { "$ref": "#/definitions/ITitleYaml", "title": "Title" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Text", "Title", "Trigger"]
    },
    "IMoveTriggerYaml": {
      "title": "IMoveTriggerYaml",
      "type": "object",
      "properties": {
        "Options": {
          "type": "array",
          "items": {
            "anyOf": [
              { "$ref": "#/definitions/IMoveTriggerOptionActionYaml" },
              { "$ref": "#/definitions/IMoveTriggerOptionProgressYaml" }
            ]
          },
          "title": "Options"
        },
        "Text": {
          "description": "A markdown string containing the primary trigger text for this move.\n\nSecondary triggers (for specific stats or uses of an asset ability) are described in `Options`.",
          "type": "string",
          "title": "Text"
        },
        "By": {
          "description": "Information on who can trigger this item. Used mainly by asset abilities, some of which can trigger from an Ally's move.\n\nIf unspecified, assume `Ally` is `false` and `Player` is `true`.",
          "$ref": "#/definitions/IMoveTriggerBy",
          "title": "By"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Trigger$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IMoveTriggerOptionActionYaml": {
      "title": "IMoveTriggerOptionActionYaml",
      "type": "object",
      "properties": {
        "Custom stat": {
          "$ref": "#/definitions/ICustomStatYaml",
          "title": "Custom stat"
        },
        "Using": {
          "description": "The stat(s) or progress track(s) that may be rolled with this move trigger option.",
          "type": "array",
          "items": {
            "enum": [
              "${{@ASSET_METER}}",
              "${{@ASSET_SELECT_METER}}",
              "${{@ASSET_SELECT_STAT}}",
              "${{@ASSET}}",
              "${{@CUSTOM_STAT}}",
              "attached asset meter",
              "command vehicle integrity",
              "companion health",
              "edge",
              "health",
              "heart",
              "incidental vehicle integrity",
              "iron",
              "shadow",
              "spirit",
              "supply",
              "support vehicle integrity",
              "vehicle integrity",
              "wits"
            ],
            "type": "string"
          },
          "title": "Using"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Trigger/Options/[0-9]+$",
          "type": "string",
          "title": "$id"
        },
        "Method": {
          "$ref": "#/definitions/RollMethod",
          "description": "The method used to choose the stat or track in the `Using` array.",
          "title": "Method"
        },
        "Roll type": {
          "$ref": "#/definitions/RollType.Action_1",
          "description": "Whether this option is an action roll or progress roll.",
          "title": "Roll type"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Using"]
    },
    "ICustomStatYaml": {
      "title": "ICustomStatYaml",
      "type": "object",
      "properties": {
        "Options": {
          "type": "array",
          "items": { "$ref": "#/definitions/ICustomStatOptionYaml" },
          "title": "Options"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Moves/([A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[0-9]+)/[A-z_-]+/Trigger/Options/[0-9]+/Custom_stat$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Label", "Options"]
    },
    "ICustomStatOptionYaml": {
      "title": "ICustomStatOptionYaml",
      "type": "object",
      "properties": {
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        },
        "Value": {
          "description": "The numeric value to be used as +stat when making an Action Roll.",
          "type": "integer",
          "title": "Value"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Moves/([A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[0-9]+)/[A-z_-]+/Trigger/Options/[0-9]+/Custom_stat/[A-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Label", "Value"]
    },
    "RollType.Action_1": {
      "title": "RollType.Action_1",
      "enum": ["Action roll"],
      "type": "string"
    },
    "IMoveTriggerOptionProgressYaml": {
      "title": "IMoveTriggerOptionProgressYaml",
      "type": "object",
      "properties": {
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "Custom stat": {
          "description": "Defines a custom stat, if one is included in this object's `With` array.",
          "$ref": "#/definitions/ICustomStat",
          "title": "Custom stat"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Trigger/Options/[0-9]+$",
          "type": "string",
          "title": "$id"
        },
        "Method": {
          "$ref": "#/definitions/RollMethod",
          "description": "The method used to choose the stat or track in the `Using` array.",
          "title": "Method"
        },
        "Using": {
          "description": "The stat(s) or progress track(s) that may be rolled with this move trigger option.",
          "type": "array",
          "items": {
            "enum": [
              "bonds legacy",
              "bonds track",
              "combat progress",
              "connection progress",
              "delve progress",
              "discoveries legacy",
              "expedition progress",
              "journey progress",
              "quests legacy",
              "scene challenge progress",
              "vow progress"
            ],
            "type": "string"
          },
          "title": "Using"
        },
        "Roll type": {
          "$ref": "#/definitions/RollType.Progress_1",
          "description": "Whether this option is an action roll or progress roll.",
          "title": "Roll type"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "RollType.Progress_1": {
      "title": "RollType.Progress_1",
      "enum": ["Progress roll"],
      "type": "string"
    },
    "IMoveOutcomesYaml": {
      "title": "IMoveOutcomesYaml",
      "type": "object",
      "properties": {
        "Strong Hit": {
          "$ref": "#/definitions/IOutcomeStrongHitYaml",
          "title": "Strong Hit"
        },
        "Weak Hit": {
          "$ref": "#/definitions/IOutcomeWeakHitYaml",
          "title": "Weak Hit"
        },
        "Miss": { "$ref": "#/definitions/IOutcomeMissYaml", "title": "Miss" },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Miss", "Strong Hit", "Weak Hit"]
    },
    "IOutcomeStrongHitYaml": {
      "title": "IOutcomeStrongHitYaml",
      "type": "object",
      "properties": {
        "With a Match": {
          "$ref": "#/definitions/IOutcomeStrongHitMatchYaml",
          "title": "With a Match"
        },
        "Reroll": {
          "$ref": "#/definitions/IMoveRerollYaml",
          "title": "Reroll"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "In Control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "In Control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong Hit", "Weak Hit"],
          "type": "string",
          "title": "Count as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes/((Miss|Strong_Hit)(/With_a_Match)?|Weak_Hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IOutcomeWeakHitYaml": {
      "title": "IOutcomeWeakHitYaml",
      "type": "object",
      "properties": {
        "With a Match": {
          "$ref": "#/definitions/IOutcomeInfoBaseYaml<1>",
          "title": "With a Match"
        },
        "Reroll": {
          "$ref": "#/definitions/IMoveRerollYaml",
          "title": "Reroll"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "In Control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "In Control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong Hit", "Weak Hit"],
          "type": "string",
          "title": "Count as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes/((Miss|Strong_Hit)(/With_a_Match)?|Weak_Hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IOutcomeMissYaml": {
      "title": "IOutcomeMissYaml",
      "type": "object",
      "properties": {
        "With a Match": {
          "$ref": "#/definitions/IOutcomeMissMatchYaml",
          "title": "With a Match"
        },
        "Reroll": {
          "$ref": "#/definitions/IMoveRerollYaml",
          "title": "Reroll"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "In Control": {
          "description": "Whether this outcome leaves the player character in control (Starforged) or with initiative (Ironsworn) or not. If unspecified, assume that it's `true` on a Strong Hit, and `false` on a Weak Hit or Miss.",
          "type": "boolean",
          "title": "In Control"
        },
        "Count as": {
          "description": "Count this roll as another roll outcome, e.g. \"Count a weak hit as a miss\"",
          "enum": ["Miss", "Strong Hit", "Weak Hit"],
          "type": "string",
          "title": "Count as"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/(Moves/[A-z_-]+/[A-z_-]+|Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/Alter_Moves/[0-9]+|Moves/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]/[A-z_-]+)/Outcomes/((Miss|Strong_Hit)(/With_a_Match)?|Weak_Hit)$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "ITitleYaml": {
      "title": "ITitleYaml",
      "type": "object",
      "properties": {
        "Canonical": {
          "description": "The title of this item, which here is defined as the associated header text *exactly* as it appears on the page.\n\nFor items that represent a single table column, this is the label that appears at the top of the column.\n\nUse this title if you want high fidelity to the book. For most interactive UX, it's recommended to use {@link ITitle.Standard} instead.",
          "type": "string",
          "title": "Canonical"
        },
        "Short": {
          "description": "The shortest title for this item that remains distinct amongst its siblings.\n\nUnless you're very pressed for space, most UX should use {@link ITitle.Standard} instead.",
          "type": "string",
          "title": "Short"
        },
        "Standard": {
          "description": "The recommended title for most implementations.\n\nThis is usually the same as the canonical title, but editorializes a bit by trimming out things like \"Oracle 15\" in some Ironsworn oracles (because *nobody* remembers it as \"Oracle 15\").\n\nIf you need the shortest possible name, see {@link ITitle.Short} instead.",
          "type": "string",
          "title": "Standard"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" },
        "$id": { "type": "string", "title": "$id" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Canonical"]
    },
    "IInputClockYaml": {
      "title": "IInputClockYaml",
      "type": "object",
      "properties": {
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        },
        "Input Type": {
          "$ref": "#/definitions/InputType.Clock",
          "title": "Input Type"
        },
        "Clock Type": {
          "$ref": "#/definitions/ClockType",
          "description": "Whether the clock is a Tension Clock or a Campaign Clock. For assets this doesn't really matter since they have their own specific trigger conditions, and can probably be ignored.",
          "title": "Clock Type"
        },
        "Segments": {
          "$ref": "#/definitions/ClockSegments",
          "description": "An integer representing the total number of segments in this Clock. *Ironsworn: Starforged* uses clocks with 4, 6, 8, and 10 segments.\n\n`Filled` should not exceed this number.",
          "title": "Segments"
        },
        "Filled": {
          "description": "An integer representing how many filled segments this clock has. This is always 0 in Dataforged; it's included to make it easy to store clock states with the same interface.",
          "type": "integer",
          "title": "Filled"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+(/Abilities/[1-3])?/Inputs/[A-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Adjustable": {
          "description": "Whether the input's value is expected to change over the course of a campaign. For example, name fields are typically `false`, while something like a clock or tally would be `true`.\n\nIt's a good idea to make everything editable regardless, but this property might inform whether your UI presents that functionality \"front and center\" or as a secondary interaction (via long press, right click, etc);",
          "type": "boolean",
          "title": "Adjustable"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Clock Type", "Filled", "Input Type", "Label", "Segments"]
    },
    "InputType.Clock": {
      "title": "InputType.Clock",
      "type": "string",
      "enum": ["Clock"]
    },
    "ClockType": {
      "description": "See clocks (p. 234) for more information.",
      "title": "ClockType",
      "enum": ["Campaign", "Tension"],
      "type": "string"
    },
    "ClockSegments": {
      "title": "ClockSegments",
      "enum": [10, 4, 6, 8],
      "type": "number"
    },
    "IInputNumberYaml": {
      "title": "IInputNumberYaml",
      "type": "object",
      "properties": {
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        },
        "Value": { "type": "integer", "title": "Value" },
        "Max": { "type": ["null", "integer"], "title": "Max" },
        "Min": { "type": "integer", "title": "Min" },
        "Input Type": {
          "$ref": "#/definitions/InputType.Number",
          "title": "Input Type"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+(/Abilities/[1-3])?/Inputs/[A-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Adjustable": {
          "description": "Whether the input's value is expected to change over the course of a campaign. For example, name fields are typically `false`, while something like a clock or tally would be `true`.\n\nIt's a good idea to make everything editable regardless, but this property might inform whether your UI presents that functionality \"front and center\" or as a secondary interaction (via long press, right click, etc);",
          "type": "boolean",
          "title": "Adjustable"
        },
        "Step": { "enum": [1], "type": "number", "title": "Step" },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Input Type", "Label", "Max", "Min", "Value"]
    },
    "InputType.Number": {
      "title": "InputType.Number",
      "type": "string",
      "enum": ["Number"]
    },
    "IInputTextYaml": {
      "title": "IInputTextYaml",
      "type": "object",
      "properties": {
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        },
        "Input Type": {
          "$ref": "#/definitions/InputType.Text",
          "title": "Input Type"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+(/Abilities/[1-3])?/Inputs/[A-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Adjustable": {
          "description": "Whether the input's value is expected to change over the course of a campaign. For example, name fields are typically `false`, while something like a clock or tally would be `true`.\n\nIt's a good idea to make everything editable regardless, but this property might inform whether your UI presents that functionality \"front and center\" or as a secondary interaction (via long press, right click, etc);",
          "type": "boolean",
          "title": "Adjustable"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Input Type", "Label"]
    },
    "InputType.Text": {
      "title": "InputType.Text",
      "type": "string",
      "enum": ["Text"]
    },
    "IAlterMomentumYaml": {
      "title": "IAlterMomentumYaml",
      "type": "object",
      "properties": {
        "Burn": {
          "type": "array",
          "items": { "$ref": "#/definitions/IAlterMomentumBurnYaml" },
          "title": "Burn"
        },
        "Reset": {
          "type": "array",
          "items": { "$ref": "#/definitions/IAlterMomentumResetYaml" },
          "title": "Reset"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/[0-9A-z_/-]+$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IAlterMomentumBurnYaml": {
      "title": "IAlterMomentumBurnYaml",
      "type": "object",
      "properties": {
        "Trigger": { "$ref": "#/definitions/Omit", "title": "Trigger" },
        "Effect": { "$ref": "#/definitions/Omit", "title": "Effect" },
        "Outcomes": {
          "type": "array",
          "items": { "enum": ["Strong Hit", "Weak Hit"], "type": "string" },
          "title": "Outcomes"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/[0-9A-z_/-]+$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Effect", "Trigger"]
    },
    "__type": {
      "title": "__type",
      "type": "object",
      "properties": {
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Text"]
    },
    "Omit": { "$ref": "#/definitions/__type" },
    "IAlterMomentumResetYaml": {
      "title": "IAlterMomentumResetYaml",
      "type": "object",
      "properties": {
        "Trigger": { "$ref": "#/definitions/Omit", "title": "Trigger" },
        "Value": {
          "description": "The amount by which the PC's momentum reset is change.",
          "type": "integer",
          "title": "Value"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/[0-9A-z_/-]+$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Trigger", "Value"]
    },
    "IAssetAlterPropertiesYaml": {
      "title": "IAssetAlterPropertiesYaml",
      "type": "object",
      "properties": {
        "Abilities": {
          "type": "array",
          "items": { "$ref": "#/definitions/IAssetAlterPropertiesAbilityYaml" },
          "title": "Abilities"
        },
        "Condition Meter": {
          "$ref": "#/definitions/IAssetAlterPropertiesConditionMeterYaml",
          "title": "Condition Meter"
        },
        "Attachments": {
          "$ref": "#/definitions/IAssetAlterPropertiesAttachmentsYaml",
          "title": "Attachments"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "Title": { "$ref": "#/definitions/ITitleYaml_1", "title": "Title" },
        "Asset Type": {
          "description": "The ID of the asset's parent AssetType",
          "type": "string",
          "title": "Asset Type"
        },
        "Display": {
          "$ref": "#/definitions/IDisplay",
          "description": "Data relevant to this item's display/rendering.",
          "title": "Display"
        },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" },
        "Tags": {
          "type": "array",
          "items": { "type": "string" },
          "title": "Tags"
        },
        "Usage": {
          "$ref": "#/definitions/IAssetUsage",
          "description": "Information on the asset's usage, such as whether its abilities are shared amongst the player characters.",
          "title": "Usage"
        },
        "Aliases": {
          "description": "Alternate names for this item, including: names it had earlier in development that have since changed, alternate spellings/punctuation, common misspellings, and so on.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Aliases"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "States": {
          "type": "array",
          "items": { "$ref": "#/definitions/IAssetStateYaml" },
          "title": "States"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IAssetAlterPropertiesAbilityYaml": {
      "title": "IAssetAlterPropertiesAbilityYaml",
      "type": "object",
      "properties": {
        "Label": {
          "description": "Ironsworn companion assets provide labels for their abilities. Starforged asset abilities do not have labels.",
          "type": "string",
          "title": "Label"
        },
        "Text": {
          "description": "The item's rules text as a markdown string.",
          "type": "string",
          "title": "Text"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+/Abilities/[1-3]$",
          "type": "string",
          "title": "$id"
        },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Enabled": {
          "description": "Whether the asset ability is enabled or not. In most cases, the first asset ability defaults to 'true' and the others to 'false'. If none of an asset's abilities are set to 'true', the player can pick which the ability they start with when purchasing the asset.",
          "type": "boolean",
          "title": "Enabled"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IAssetAlterPropertiesConditionMeterYaml": {
      "title": "IAssetAlterPropertiesConditionMeterYaml",
      "type": "object",
      "properties": {
        "Label": {
          "description": "The user-facing text label of this item.",
          "pattern": "^[a-z].+$",
          "type": "string",
          "title": "Label"
        },
        "Max": {
          "description": "The maximum value of the meter.",
          "type": "integer",
          "title": "Max"
        },
        "Rollable": {
          "description": "Whether the meter value can be used in place of a stat in an action roll.",
          "type": "boolean",
          "title": "Rollable"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+/Condition_Meter$",
          "type": "string",
          "title": "$id"
        },
        "Aliases": {
          "description": "Certain common types of asset meters, like companion health and vehicle integrity, are collectively referenced by {@link IMoveTriggerOptionAction.Using}. The array will include an appropriate alias if that is the case.",
          "type": "array",
          "items": {
            "description": "Names of non-player condition meters (for e.g. companions and vehicles) that are referenced by moves and other assets.\nIf an asset condition meter can be used in this manner, the alias is included in its Aliases array.",
            "enum": [
              "attached asset meter",
              "command vehicle integrity",
              "companion health",
              "incidental vehicle integrity",
              "support vehicle integrity",
              "vehicle integrity"
            ],
            "type": "string"
          },
          "title": "Aliases"
        },
        "Value": {
          "description": "The initial value of the meter.",
          "type": "integer",
          "title": "Value"
        },
        "Min": {
          "description": "The minimum value of the meter. Usually this is 0. Momentum is currently the only exception to this and goes as low as -6.",
          "default": 0,
          "type": "integer",
          "title": "Min"
        },
        "Conditions": {
          "description": "The conditions that can apply to this meter.",
          "type": "array",
          "items": {
            "description": "Conditions (such as impacts) that can apply to asset cards with condition meters. These are typically presented as tick boxes on the asset card.",
            "enum": ["battered", "cursed", "out of action", "wrecked"],
            "type": "string"
          },
          "title": "Conditions"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "IAssetAlterPropertiesAttachmentsYaml": {
      "title": "IAssetAlterPropertiesAttachmentsYaml",
      "type": "object",
      "properties": {
        "Asset Types": {
          "description": "The type of asset that this asset accepts as attachments.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Asset Types"
        },
        "Max": {
          "description": "The maximum number of attached assets accepted by this asset. If undefined or null, there is no maximum.",
          "type": ["null", "integer"],
          "title": "Max"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "ITitleYaml_1": {
      "title": "ITitleYaml_1",
      "$ref": "#/definitions/Partial"
    },
    "__type_1": {
      "title": "__type_1",
      "type": "object",
      "properties": {
        "Canonical": {
          "description": "The title of this item, which here is defined as the associated header text *exactly* as it appears on the page.\n\nFor items that represent a single table column, this is the label that appears at the top of the column.\n\nUse this title if you want high fidelity to the book. For most interactive UX, it's recommended to use {@link ITitle.Standard} instead.",
          "type": "string",
          "title": "Canonical"
        },
        "Short": {
          "description": "The shortest title for this item that remains distinct amongst its siblings.\n\nUnless you're very pressed for space, most UX should use {@link ITitle.Standard} instead.",
          "type": "string",
          "title": "Short"
        },
        "Standard": {
          "description": "The recommended title for most implementations.\n\nThis is usually the same as the canonical title, but editorializes a bit by trimming out things like \"Oracle 15\" in some Ironsworn oracles (because *nobody* remembers it as \"Oracle 15\").\n\nIf you need the shortest possible name, see {@link ITitle.Short} instead.",
          "type": "string",
          "title": "Standard"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" },
        "$id": { "type": "string", "title": "$id" }
      },
      "defaultProperties": [],
      "additionalProperties": false
    },
    "Partial": { "$ref": "#/definitions/__type_1" },
    "IAssetUsage": {
      "title": "IAssetUsage",
      "$ref": "#/definitions/IAssetUsage_1"
    },
    "IAssetUsage_1": {
      "title": "IAssetUsage_1",
      "type": "object",
      "properties": {
        "Shared": {
          "description": "Whether the asset's abilities are shared with Allies.\n\nIf set to `true`, the asset's abilities can be invoked by **any** player character; if your app facilitates co-op or guided play, consider how you might expose these abilities to players other than the asset's owner.\n\nDefaults to `true` for Command Vehicle, Support Vehicle, and Module assets.",
          "type": "boolean",
          "title": "Shared"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Shared"]
    },
    "IAssetStateYaml": {
      "title": "IAssetStateYaml",
      "type": "object",
      "properties": {
        "Label": {
          "description": "A string label for the state.",
          "pattern": "^[a-z].+$",
          "type": "string",
          "title": "Label"
        },
        "Enabled": {
          "description": "Whether this state is currently enabled.",
          "type": "boolean",
          "title": "Enabled"
        },
        "Disables asset": {
          "description": "Whether this state should disable the entire asset when `IAssetState.Enabled === true`",
          "type": "boolean",
          "title": "Disables asset"
        },
        "Impact": {
          "description": "Whether this state counts as an Impact for the asset's owner.\n\nNote that for vehicles, this shouldn't be applied automatically unless your implementation has some way of telling which vehicle the PC is currently using.",
          "type": "boolean",
          "title": "Impact"
        },
        "Permanent": {
          "description": "Whether or not this state is permanent.",
          "type": "boolean",
          "title": "Permanent"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/[0-9A-z_/-]+$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Disables asset", "Enabled", "Impact", "Label", "Permanent"]
    },
    "IInputSelectYaml": {
      "title": "IInputSelectYaml",
      "type": "object",
      "properties": {
        "Options": {
          "type": "array",
          "items": { "$ref": "#/definitions/IInputSelectOptionYaml" },
          "title": "Options"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        },
        "Adjustable": {
          "description": "Whether the input's value is expected to change over the course of a campaign. For example, name fields are typically `false`, while something like a clock or tally would be `true`.\n\nIt's a good idea to make everything editable regardless, but this property might inform whether your UI presents that functionality \"front and center\" or as a secondary interaction (via long press, right click, etc);",
          "type": "boolean",
          "title": "Adjustable"
        },
        "Input Type": {
          "$ref": "#/definitions/InputType.Select",
          "title": "Input Type"
        },
        "Sets": {
          "description": "Hints which attribute(s) set by this dropdown's options.",
          "type": "array",
          "items": { "$ref": "#/definitions/IInputSelectAttributeDefinition" },
          "title": "Sets"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+(/Abilities/[1-3])?/Inputs/[A-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Adjustable", "Input Type", "Label", "Options", "Sets"]
    },
    "IInputSelectOptionYaml": {
      "title": "IInputSelectOptionYaml",
      "type": "object",
      "properties": {
        "Set": {
          "type": "array",
          "items": { "$ref": "#/definitions/IInputSelectOptionSetterYaml" },
          "title": "Set"
        },
        "Label": {
          "description": "The user-facing text label of this item.",
          "type": "string",
          "title": "Label"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+/Inputs/[A-z_-]+/Options/[A-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Label", "Set"]
    },
    "IInputSelectOptionSetterYaml": {
      "title": "IInputSelectOptionSetterYaml",
      "type": "object",
      "properties": {
        "Value": { "type": ["string", "integer"], "title": "Value" },
        "Type": {
          "$ref": "#/definitions/InputSelectOptionType",
          "title": "Type"
        },
        "Key": { "type": "string", "title": "Key" },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+/Inputs/[A-z_-]+/Options/[A-z_-]+/[A-z_-]+$",
          "type": "string",
          "title": "$id"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Key", "Type", "Value"]
    },
    "InputSelectOptionType": {
      "description": "The type of an attribute set by a Select Input.",
      "title": "InputSelectOptionType",
      "enum": ["Condition Meter", "Number", "Stat", "String"],
      "type": "string"
    },
    "InputType.Select": {
      "title": "InputType.Select",
      "type": "string",
      "enum": ["Select"]
    },
    "IInputSelectAttributeDefinition": {
      "description": "Provides hints for the keys and typing of an {@link IInputSelect}'s child {@link IInputSelectOption}s.",
      "title": "IInputSelectAttributeDefinition",
      "type": "object",
      "properties": {
        "Key": { "pattern": "^[a-z_]+$", "type": "string", "title": "Key" },
        "Type": {
          "$ref": "#/definitions/InputSelectOptionType",
          "title": "Type"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Key", "Type"]
    },
    "IConditionMeterYaml": {
      "title": "IConditionMeterYaml",
      "type": "object",
      "properties": {
        "Label": {
          "description": "The user-facing text label of this item.",
          "pattern": "^[a-z].+$",
          "type": "string",
          "title": "Label"
        },
        "Max": {
          "description": "The maximum value of the meter.",
          "type": "integer",
          "title": "Max"
        },
        "Rollable": {
          "description": "Whether the meter value can be used in place of a stat in an action roll.",
          "type": "boolean",
          "title": "Rollable"
        },
        "$id": {
          "description": "The item's unique string ID. Any object that contains a localizable user-facing string *must* have this key.",
          "pattern": "^(Starforged|Ironsworn)/Assets/[A-z_-]+/[A-z_-]+/Condition_Meter$",
          "type": "string",
          "title": "$id"
        },
        "Aliases": {
          "description": "Certain common types of asset meters, like companion health and vehicle integrity, are collectively referenced by {@link IMoveTriggerOptionAction.Using}. The array will include an appropriate alias if that is the case.",
          "type": "array",
          "items": {
            "description": "Names of non-player condition meters (for e.g. companions and vehicles) that are referenced by moves and other assets.\nIf an asset condition meter can be used in this manner, the alias is included in its Aliases array.",
            "enum": [
              "attached asset meter",
              "command vehicle integrity",
              "companion health",
              "incidental vehicle integrity",
              "support vehicle integrity",
              "vehicle integrity"
            ],
            "type": "string"
          },
          "title": "Aliases"
        },
        "Value": {
          "description": "The initial value of the meter.",
          "type": "integer",
          "title": "Value"
        },
        "Min": {
          "description": "The minimum value of the meter. Usually this is 0. Momentum is currently the only exception to this and goes as low as -6.",
          "default": 0,
          "type": "integer",
          "title": "Min"
        },
        "Conditions": {
          "description": "The conditions that can apply to this meter.",
          "type": "array",
          "items": {
            "description": "Conditions (such as impacts) that can apply to asset cards with condition meters. These are typically presented as tick boxes on the asset card.",
            "enum": ["battered", "cursed", "out of action", "wrecked"],
            "type": "string"
          },
          "title": "Conditions"
        },
        "_idFragment": { "type": "string", "title": "_idFragment" },
        "Source": { "$ref": "#/definitions/ISourceYaml", "title": "Source" }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Label", "Max", "Rollable"]
    },
    "IAssetAttachment": {
      "description": "Details which assets are valid attachments. The most prominent example in *Ironsworn: Starforged* is the STARSHIP asset (`Starship/Assets/Command_Vehicle/Starship`); Rover (`Starship/Assets/Support_Vehicle/Rover`) also has an elective ability that adds this property.",
      "title": "IAssetAttachment",
      "type": "object",
      "properties": {
        "Asset Types": {
          "description": "The type of asset that this asset accepts as attachments.",
          "type": "array",
          "items": { "type": "string" },
          "title": "Asset Types"
        },
        "Max": {
          "description": "The maximum number of attached assets accepted by this asset. If undefined or null, there is no maximum.",
          "type": ["null", "integer"],
          "title": "Max"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Asset Types", "Max"]
    },
    "ISource": {
      "description": "Interface representing data on this item's source. For 'canonical' content, this is usually a book with numbered pages, but it might also be a link to a web site.",
      "title": "ISource",
      "type": "object",
      "properties": {
        "Title": {
          "description": "The title of the source.\n\nFor 'canonical' content, use one of the enumerated `SourceTitle` strings.\n\nFor 3rd-party content (including homebrew) that's been released as part of a titled document, use the title of that document (e.g. \"Steelforged\", \"Ironsmith\").\n\nIf the source has no particular title (for instance, it's a single custom element in a VTT implementation), use \"Custom\".",
          "type": "string",
          "title": "Title"
        },
        "Authors": {
          "description": "The author(s) of this item. For 'canonical' content, this one's usually pretty obvious 😉 However, it's included so that homebrew content can use the same interface/schema.",
          "default": ["Shawn Tomkin"],
          "type": "array",
          "items": { "type": "string" },
          "title": "Authors"
        },
        "Date": {
          "description": "The 6-number date string formatted as `MMDDYY`. Relevant only during Starforged development; it will be deprecated once the game is released.",
          "pattern": "^(0[1-9]|1[0-2])([0-2][1-9]|3[0-1])([0-9][0-9])$",
          "type": "string",
          "title": "Date"
        },
        "Page": {
          "description": "The page on which the item appears most prominently in the source material (if it's in a format that uses page numbers).",
          "type": "integer",
          "title": "Page"
        },
        "Url": {
          "description": "The URL where the source material is available.",
          "pattern": "^https?://.*$",
          "type": "string",
          "title": "Url"
        },
        "License": {
          "$ref": "#/definitions/License_1",
          "description": "The URL pointing to the license which this content falls under.",
          "title": "License"
        }
      },
      "defaultProperties": [],
      "additionalProperties": false,
      "required": ["Authors", "License", "Title"]
    },
    "License_1": {
      "title": "License_1",
      "enum": [
        "None",
        "https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "https://creativecommons.org/licenses/by-sa/4.0/"
      ],
      "type": "string"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}
