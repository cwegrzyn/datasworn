{
	// "Schema file": {
	// 	"scope": "typescript",
	// 	"prefix": "simports",
	// 	"isFileTemplate": true,
	// 	"body": [
	// 		"import { type JSONSchemaType as Schema } from 'ajv'",
	// 		"import { type ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} as Types } from '@types'",
	// 		"",
	// 		"$0"
	// 	],
	// 	"description": "Initializes imports for a JSON schema written in typescript"
	// },
	// "Schema export": {
	// 	"scope": "typescript",
	// 	"prefix": "sexport",
	// 	"description": "Integer schema",
	// 	"body": [
	// 		"export const $1: Schema<Types.$1> = {",
	// 		"\ttype: '${2|string,object,integer,array|}',",
	// 		"\tdescription: '$3',",
	// 		"\t$0",
	// 		"}"
	// 	]
	// },
	// "Ref definition": {
	// 	"scope": "typescript",
	// 	"prefix": "ref",
	// 	"body": [
	// 		"refSchema<Types.${1|Metadata,Localize,Assets,Oracles,Encounters,Collections,Players,Progress|}.$2>('$2')$0"
	// 	],
	// 	"description": "Reference to a schema definition"
	// },
	"Static type from schema": {
		"scope": "typescript",
		"prefix": "st",
		"body": ["export type ${CLIPBOARD} = Static<typeof ${CLIPBOARD}>"]
	},
	"Schema: new file": {
		"scope": "typescript",
		"isFileTemplate": true,
		"prefix": "snf",
		"body": [
			"import { type Static, Type } from '@sinclair/typebox'",
			"",
			"${0}"
		]
	},
	"Schema: object": {
		"scope": "typescript",
		"prefix": "so",
		"body": [
			"export const ${1} = Type.Object({$0}, {\\$id: '#/\\$defs/${1}'})",
			"export type ${1} = Static<typeof ${1}>"
		]
	}
}
