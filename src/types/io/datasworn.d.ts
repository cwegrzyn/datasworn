/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type NamespaceId = string;
/**
 * A localized label for this input. In some contexts it may be undesirable to render this text, but it should always be exposed to assistive technology (e.g. with `aria-label` in HTML).
 */
export type Label = string;
/**
 * A description of this condition meter.
 */
export type MarkdownString = string;
/**
 * A label for this impact category.
 */
export type Label1 = string;
/**
 * A description of this impact category.
 */
export type MarkdownString1 = string;
/**
 * The label for this impact.
 */
export type Label2 = string;
/**
 * A description of this impact.
 */
export type MarkdownString2 = string;
/**
 * A key used in a Datasworn dictionary object.
 */
export type DictKey = string;
/**
 * A label for this special track.
 */
export type Label3 = string;
/**
 * A description of this special track.
 */
export type MarkdownString3 = string;
/**
 * A label for this stat.
 */
export type Label4 = string;
/**
 * A description of this stat.
 */
export type MarkdownString4 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type OracleCollectionId = string;
/**
 * The primary name/label for this item.
 */
export type Label5 = string;
/**
 * The name of this item as it appears on the page in the book, if it's different from `name`.
 */
export type Label6 = string;
/**
 * This collection's content enhances the identified collection, rather than being a standalone collection of its own.
 */
export type OracleCollectionId1 = string;
/**
 * A thematic color associated with this collection.
 */
export type CssColor = string;
/**
 * An SVG icon associated with this collection.
 */
export type SvgImageUrl = string;
/**
 * Extra images associated with this collection.
 */
export type WebpImageUrl = string;
/**
 * Describes the presentation of this oracle collection, which might represent a group of separate tables, or a single table with additional columns.
 */
export type OracleCollectionRendering = {
  [k: string]: unknown;
};
/**
 * A brief summary of this collection, no more than a few sentences in length. This is intended for use in application tooltips and similar sorts of hints. Longer text should use the "description" key instead.
 */
export type MarkdownString5 = string;
/**
 * A longer description of this collection, which might include multiple paragraphs. If it's only a couple sentences, use the `summary` key instead.
 */
export type MarkdownString6 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type OracleTableId = string;
/**
 * The primary name/label for this item.
 */
export type Label7 = string;
/**
 * The name of this item as it appears on the page in the book, if it's different from `name`.
 */
export type Label8 = string;
/**
 * An icon that represents this table.
 */
export type SvgImageUrl1 = string;
/**
 * Extra images associated with this table.
 */
export type WebpImageUrl1 = string;
/**
 * The roll used to select a result on this table.
 */
export type DiceNotation = string;
/**
 * Describes how how to render this table, when presenting it as a standalone table.
 */
export type OracleTableRendering = {
  [k: string]: unknown;
};
/**
 * A brief summary of the oracle table's intended usage, no more than a few sentences in length. This is intended for use in application tooltips and similar sorts of hints. Longer text should use the "description" key instead.
 */
export type MarkdownString7 = string;
/**
 * A longer description of the oracle table's intended usage, which might include multiple paragraphs. If it's only a couple sentences, use the `summary` key instead.
 */
export type MarkdownString8 = string;
/**
 * Localized text, formatted in Markdown.
 *
 * It uses some custom syntax; e.g. `{{table:some_oracle_table_id}}` indicates that the referenced oracle table is rendered there part of the source material.
 */
export type MarkdownString9 = string;
export type OracleTableId1 = string;
export type AssetId = string;
export type AtlasEntryId = string;
/**
 * A move ID, for a standard move or a unique asset move
 */
export type MoveId = StandardMoveId | AssetMoveId;
/**
 * A move ID for a standard move.
 */
export type StandardMoveId = string;
/**
 * A move ID for an asset move.
 */
export type AssetMoveId = string;
export type NpcId = string;
export type RarityId = string;
export type DelveSiteDomainId = string;
export type DelveSiteThemeId = string;
/**
 * The unique Datasworn ID for this item.
 */
export type OracleTableRowId = string | string;
/**
 * A relative URL pointing to a vector image in the SVG format.
 */
export type SvgImageUrl2 = string;
/**
 * A string template that may be used in place of OracleTableRow#result.
 */
export type TemplateString = string;
/**
 * A string template that may be used in place of OracleTableRow#summary.
 */
export type TemplateString1 = string;
/**
 * A string template that may be used in place of OracleTableRow#description.
 */
export type TemplateString2 = string;
/**
 * Special roll instructions to use when rolling multiple times on a single oracle table.
 *
 *   * no_duplicates: Duplicates should be re-rolled.
 *   * keep_duplicates: Duplicates should be kept.
 *   * make_it_worse: Duplicates should be kept, and they compound to make things worse.
 */
export type OracleTableRollMethod = "no_duplicates" | "keep_duplicates" | "make_it_worse";
/**
 * The ID of the oracle table to be rolled. If omitted, it defaults to the ID of this oracle table.
 */
export type OracleTableId2 = string;
/**
 *   * common_noun: A common noun.
 *   * proper_noun: A proper noun.
 *   * adjunct_common_noun: A common noun used as an adjective, to modify another noun.
 *   * adjunct_proper_noun: A proper noun used as an adjective, to modify another noun.
 *   * verb: A verb in present tense
 *   * gerund: Gerund or present participle of a verb, e.g. "going", "seeing", "waving"
 *   * adjective: An adjective.
 *   * attributive_verb: A verb used as an adjective, to modify a noun.
 */
export type PartOfSpeech =
  | "common_noun"
  | "proper_noun"
  | "adjunct_common_noun"
  | "adjunct_proper_noun"
  | "verb"
  | "gerund"
  | "adjective"
  | "attributive_verb";
/**
 * The title of the source document.
 */
export type Title = string;
/**
 * An optional email contact for the author
 */
export type Email = string;
/**
 * An absolute URL pointing to the location where this element's license can be found.
 *
 * A `null` here indicates that the content provides **no** license, and is not intended for redistribution.  Datasworn's build process skips unlicensed content by default.
 */
export type License = string | null;
/**
 * Indicates that this table replaces the identified table. References to the replaced table can be considered equivalent to this table.
 */
export type OracleTableId3 = string;
/**
 * This collection replaces the identified collection. References to the replaced collection can be considered equivalent to this collection.
 */
export type OracleCollectionId2 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type AssetTypeId = string;
/**
 * The primary name/label for this item.
 */
export type Label9 = string;
/**
 * The name of this item as it appears on the page in the book, if it's different from `name`.
 */
export type Label10 = string;
/**
 * This collection's content enhances the identified collection, rather than being a standalone collection of its own.
 */
export type AssetTypeId1 = string;
/**
 * A thematic color associated with this collection.
 */
export type CssColor1 = string;
/**
 * A relative URL pointing to a vector image in the SVG format.
 */
export type SvgImageUrl3 = string;
/**
 * Extra images associated with this collection.
 */
export type WebpImageUrl2 = string;
/**
 * Localized text, formatted in Markdown.
 *
 * It uses some custom syntax; e.g. `{{table:some_oracle_table_id}}` indicates that the referenced oracle table is rendered there part of the source material.
 */
export type MarkdownString10 = string;
/**
 * Localized text, formatted in Markdown.
 *
 * It uses some custom syntax; e.g. `{{table:some_oracle_table_id}}` indicates that the referenced oracle table is rendered there part of the source material.
 */
export type MarkdownString11 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type AssetId1 = string;
/**
 * The primary name/label for this item.
 */
export type Label11 = string;
/**
 * The name of this item as it appears on the page in the book, if it's different from `name`.
 */
export type Label12 = string;
/**
 * A localized category label for this asset. This is the surtitle above the asset's name on the card.
 */
export type Label13 = string;
/**
 * A thematic color associated with this asset.
 */
export type CssColor2 = string;
/**
 * A relative URL pointing to a vector image in the SVG format.
 */
export type SvgImageUrl4 = string;
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export type AssetOptionField = {
  [k: string]: unknown;
};
export type AssetIdWildcard = string;
/**
 * Localized text, formatted in Markdown.
 *
 * It uses some custom syntax; e.g. `{{table:some_oracle_table_id}}` indicates that the referenced oracle table is rendered there part of the source material.
 */
export type MarkdownString12 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type AssetAbilityId = string;
/**
 * A localized plain text name or label.
 */
export type Label14 = string;
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export type AssetAbilityOptionField = {
  [k: string]: unknown;
};
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export type AssetAbilityControlField = {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
};
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export type AssetControlFieldEnhancement = {
  [k: string]: unknown;
};
export type MoveEnhancement = {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
} & {
  [k: string]: unknown;
};
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export type Move = {
  [k: string]: unknown;
};
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export type AssetControlField = {
  [k: string]: unknown;
};
/**
 * This collection replaces the identified collection. References to the replaced collection can be considered equivalent to this collection.
 */
export type AssetTypeId2 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type AtlasId = string;
/**
 * A localized plain text name or label.
 */
export type Label15 = string;
/**
 * A localized plain text name or label.
 */
export type Label16 = string;
/**
 * This collection's content enhances the identified collection, rather than being a standalone collection of its own.
 */
export type AtlasId1 = string;
/**
 * A thematic color associated with this collection.
 */
export type CssColor3 = string;
/**
 * A relative URL pointing to a vector image in the SVG format.
 */
export type SvgImageUrl5 = string;
/**
 * Extra images associated with this collection.
 */
export type WebpImageUrl3 = string;
/**
 * Localized text, formatted in Markdown.
 *
 * It uses some custom syntax; e.g. `{{table:some_oracle_table_id}}` indicates that the referenced oracle table is rendered there part of the source material.
 */
export type MarkdownString13 = string;
/**
 * Localized text, formatted in Markdown.
 *
 * It uses some custom syntax; e.g. `{{table:some_oracle_table_id}}` indicates that the referenced oracle table is rendered there part of the source material.
 */
export type MarkdownString14 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type AtlasEntryId1 = string;
/**
 * A localized plain text name or label.
 */
export type Label17 = string;
/**
 * A localized plain text name or label.
 */
export type Label18 = string;
/**
 * This collection replaces the identified collection. References to the replaced collection can be considered equivalent to this collection.
 */
export type AtlasId2 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type DelveSiteId = string;
/**
 * A localized plain text name or label.
 */
export type Label19 = string;
/**
 * A localized plain text name or label.
 */
export type Label20 = string;
/**
 * Challenge rank, represented as an integer.
 *
 *   * 1: Troublesome
 *   * 2: Dangerous
 *   * 3: Formidable
 *   * 4: Extreme
 *   * 5: Epic
 */
export type ChallengeRank = 1 | 2 | 3 | 4 | 5;
/**
 * The unique Datasworn ID for this item.
 */
export type DelveSiteDenizenId = string;
export type DelveSiteDenizenFrequency = "very_common" | "common" | "uncommon" | "rare" | "unforeseen";
/**
 * The ID of the relevant NPC entry, if one is specified.
 */
export type NpcId1 = string;
/**
 * The ID of an atlas entry representing the region in which this delve site is located.
 */
export type AtlasEntryId2 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type MoveCategoryId = string;
/**
 * A localized plain text name or label.
 */
export type Label21 = string;
/**
 * A localized plain text name or label.
 */
export type Label22 = string;
/**
 * This collection's content enhances the identified collection, rather than being a standalone collection of its own.
 */
export type MoveCategoryId1 = string;
/**
 * A thematic color associated with this collection.
 */
export type CssColor4 = string;
/**
 * A relative URL pointing to a vector image in the SVG format.
 */
export type SvgImageUrl6 = string;
/**
 * Extra images associated with this collection.
 */
export type WebpImageUrl4 = string;
/**
 * Localized text, formatted in Markdown.
 *
 * It uses some custom syntax; e.g. `{{table:some_oracle_table_id}}` indicates that the referenced oracle table is rendered there part of the source material.
 */
export type MarkdownString15 = string;
/**
 * Localized text, formatted in Markdown.
 *
 * It uses some custom syntax; e.g. `{{table:some_oracle_table_id}}` indicates that the referenced oracle table is rendered there part of the source material.
 */
export type MarkdownString16 = string;
/**
 * This collection replaces the identified collection. References to the replaced collection can be considered equivalent to this collection.
 */
export type MoveCategoryId2 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type NpcCollectionId = string;
/**
 * A localized plain text name or label.
 */
export type Label23 = string;
/**
 * A localized plain text name or label.
 */
export type Label24 = string;
/**
 * This collection's content enhances the identified collection, rather than being a standalone collection of its own.
 */
export type NpcCollectionId1 = string;
/**
 * A thematic color associated with this collection.
 */
export type CssColor5 = string;
/**
 * A relative URL pointing to a vector image in the SVG format.
 */
export type SvgImageUrl7 = string;
/**
 * Extra images associated with this collection.
 */
export type WebpImageUrl5 = string;
/**
 * Localized text, formatted in Markdown.
 *
 * It uses some custom syntax; e.g. `{{table:some_oracle_table_id}}` indicates that the referenced oracle table is rendered there part of the source material.
 */
export type MarkdownString17 = string;
/**
 * Localized text, formatted in Markdown.
 *
 * It uses some custom syntax; e.g. `{{table:some_oracle_table_id}}` indicates that the referenced oracle table is rendered there part of the source material.
 */
export type MarkdownString18 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type NpcId2 = string;
/**
 * A localized plain text name or label.
 */
export type Label25 = string;
/**
 * A localized plain text name or label.
 */
export type Label26 = string;
/**
 * A localized category label describing the nature of this NPC.
 *
 * In Ironsworn classic, this is probably the singular form of the parent collection's name.
 *
 * For Starforged, see the table on p. 258 for examples.
 */
export type NpcNature = string;
/**
 * Challenge rank, represented as an integer.
 *
 *   * 1: Troublesome
 *   * 2: Dangerous
 *   * 3: Formidable
 *   * 4: Extreme
 *   * 5: Epic
 */
export type ChallengeRank1 = 1 | 2 | 3 | 4 | 5;
/**
 * The unique Datasworn ID for this item.
 */
export type NpcVariantId = string;
/**
 * Challenge rank, represented as an integer.
 *
 *   * 1: Troublesome
 *   * 2: Dangerous
 *   * 3: Formidable
 *   * 4: Extreme
 *   * 5: Epic
 */
export type ChallengeRank2 = 1 | 2 | 3 | 4 | 5;
/**
 * This collection replaces the identified collection. References to the replaced collection can be considered equivalent to this collection.
 */
export type NpcCollectionId2 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type RarityId1 = string;
/**
 * A localized plain text name or label.
 */
export type Label27 = string;
/**
 * A localized plain text name or label.
 */
export type Label28 = string;
/**
 * The asset augmented by this rarity.
 */
export type AssetId2 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type DelveSiteDomainId1 = string;
/**
 * A localized plain text name or label.
 */
export type Label29 = string;
/**
 * A localized plain text name or label.
 */
export type Label30 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type DomainFeatureRowId = string;
/**
 * The unique Datasworn ID for this item.
 */
export type DomainDangerRowId = string;
/**
 * An oracle table ID containing place name elements. For examples, see oracle ID `delve/oracles/site_name/place/barrow`, and its siblings in oracle collection ID `delve/collections/oracles/site_name/place`. These oracles are used by the site name oracle from Ironsworn: Delve (ID: delve/oracles/site_name/format) to create random names for delve sites.
 */
export type OracleTableId4 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type DelveSiteThemeId1 = string;
/**
 * A localized plain text name or label.
 */
export type Label31 = string;
/**
 * A localized plain text name or label.
 */
export type Label32 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type ThemeFeatureRowId = string;
/**
 * The unique Datasworn ID for this item.
 */
export type ThemeDangerRowId = string;
/**
 * The unique Datasworn ID for this item.
 */
export type TruthId = string;
/**
 * A localized plain text name or label.
 */
export type Label33 = string;
/**
 * A localized plain text name or label.
 */
export type Label34 = string;
/**
 * The unique Datasworn ID for this item.
 */
export type TruthOptionId = string;

/**
 * Describes game rules compatible with the Ironsworn tabletop role-playing game by Shawn Tomkin.
 */
export interface Datasworn {
  id: NamespaceId;
  rules?: Rules;
  /**
   * A dictionary object containing oracle collections, which may contain oracle tables and/or oracle collections.
   */
  oracles?: {
    [k: string]: OracleCollection;
  };
  /**
   * A dictionary object containing asset types, which contain assets.
   */
  assets?: {
    [k: string]: AssetType;
  };
  /**
   * A dictionary object containing atlas collections, which contain atlas entries.
   */
  atlas?: {
    [k: string]: Atlas;
  };
  /**
   * A dictionary object of delve sites, like the premade delve sites presented in Ironsworn: Delve
   */
  delve_sites?: {
    [k: string]: DelveSite;
  };
  /**
   * A dictionary object containing move categories, which contain moves.
   */
  moves?: {
    [k: string]: MoveCategory;
  };
  /**
   * A dictionary object containing NPC collections, which contain NPCs.
   */
  npcs?: {
    [k: string]: NpcCollection;
  };
  /**
   * A dictionary object containing rarities, like those presented in Ironsworn: Delve.
   */
  rarities?: {
    [k: string]: Rarity;
  };
  /**
   * A dictionary object containing delve site domains.
   */
  site_domains?: {
    [k: string]: DelveSiteDomain;
  };
  /**
   * A dictionary object containing delve site themes.
   */
  site_themes?: {
    [k: string]: DelveSiteTheme;
  };
  /**
   * A dictionary object of truth categories.
   */
  truths?: {
    [k: string]: Truth;
  };
  source: Source14;
}
/**
 * Describes rules for player characters in this ruleset, such as stats and condition meters.
 */
export interface Rules {
  /**
   * Describes the standard condition meters used by player characters in this ruleset.
   */
  condition_meters: {
    [k: string]: ConditionMeterRule;
  };
  /**
   * Describes the standard impacts/debilities used by player characters in this ruleset.
   */
  impacts: {
    [k: string]: ImpactCategory;
  };
  /**
   * Describes the special tracks used by player characters in this ruleset, like Bonds (classic Ironsworn), Failure (Delve), or Legacies (Starforged).
   */
  special_tracks: {
    [k: string]: SpecialTrackRule;
  };
  /**
   * Describes the standard stats used by player characters in this ruleset.
   */
  stats: {
    [k: string]: StatRule;
  };
}
/**
 * Describes a standard player character condition meter.
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface ConditionMeterRule {
  label: Label;
  /**
   * The minimum value of this meter.
   */
  min: number;
  /**
   * The maximum value of this meter.
   */
  max: number;
  /**
   * The current value of this meter.
   */
  value: number;
  /**
   * Is this condition meter shared by all players?
   */
  shared: boolean;
  description: MarkdownString;
}
/**
 * Describes a category of standard impacts/debilities.
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface ImpactCategory {
  label: Label1;
  description: MarkdownString1;
  /**
   * A dictionary object of the Impacts in this category.
   */
  contents: {
    [k: string]: ImpactRule;
  };
}
/**
 * Describes a standard impact/debility.
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface ImpactRule {
  label: Label2;
  /**
   * Is this impact applied to all players at once?
   */
  shared: boolean;
  description: MarkdownString2;
  /**
   * Is this impact permanent?
   */
  permanent: boolean;
  /**
   * Keys of ruleset condition meters, to which this impact prevents recovery.
   */
  prevents_recovery: DictKey[];
}
/**
 * Describes a special track like Bonds (classic Ironsworn), Failure (Delve), or Legacies (Starforged).
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface SpecialTrackRule {
  label: Label3;
  /**
   * Is this track shared by all players?
   */
  shared: boolean;
  description: MarkdownString3;
  /**
   * Is this track an optional rule?
   */
  optional: boolean;
}
/**
 * Describes a standard player character stat.
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface StatRule {
  label: Label4;
  description: MarkdownString4;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface OracleCollection {
  id: OracleCollectionId;
  name: Label5;
  canonical_name?: Label6;
  enhances?: OracleCollectionId1;
  color?: CssColor;
  icon?: SvgImageUrl;
  images?: WebpImageUrl[];
  rendering?: OracleCollectionRendering;
  summary?: MarkdownString5;
  description?: MarkdownString6;
  contents: {
    [k: string]: OracleTable;
  };
  collections: {
    [k: string]: OracleCollection;
  };
  suggestions?: Suggestions;
  source: Source1;
  replaces?: OracleCollectionId2;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface OracleTable {
  id: OracleTableId;
  name: Label7;
  canonical_name?: Label8;
  icon?: SvgImageUrl1;
  images?: WebpImageUrl1[];
  dice: DiceNotation;
  rendering?: OracleTableRendering;
  summary?: MarkdownString7;
  description?: MarkdownString8;
  match?: OracleTableMatchBehavior;
  suggestions?: Suggestions;
  table: OracleTableRow[];
  source: Source;
  _i18n?: I18NHints1;
  replaces?: OracleTableId3;
}
/**
 * Most oracle tables are insensitive to matches, but a few define special match behavior.
 */
export interface OracleTableMatchBehavior {
  text: MarkdownString9;
}
export interface Suggestions {
  oracles?: OracleTableId1[];
  assets?: AssetId[];
  atlas?: AtlasEntryId[];
  moves?: MoveId[];
  npcs?: NpcId[];
  rarities?: RarityId[];
  site_domains?: DelveSiteDomainId[];
  site_themes?: DelveSiteThemeId[];
}
/**
 * An array of objects, each representing a single row of the table.
 */
export interface OracleTableRow {
  id: OracleTableRowId;
  /**
   * Low end of the dice range for this table row. `null` represents an unrollable row, included only for rendering purposes.
   */
  min: number | null;
  /**
   * High end of the dice range for this table row. `null` represents an unrollable row, included only for rendering purposes.
   */
  max: number | null;
  icon?: SvgImageUrl2;
  result: MarkdownString9;
  summary?: MarkdownString9;
  description?: MarkdownString9;
  template?: OracleRollTemplate;
  rolls?: OracleTableRoll[];
  embed_table?: OracleTableId1;
  suggestions?: Suggestions;
  i18n?: I18NHints;
}
/**
 * Provides string templates that may be used in place of the static row text from `OracleTableRow#result`, `OracleTableRow#summary`, and `OracleTableRow#description`.
 *
 *   These strings are formatted in Markdown, but use a special syntax for their placeholders: `{{result:some_oracle_table_id}}`. The placeholder should be replaced with the value of a rolled (or selected) `OracleTableRow#result` from the target oracle table ID.
 */
export interface OracleRollTemplate {
  result?: TemplateString;
  summary?: TemplateString1;
  description?: TemplateString2;
}
export interface OracleTableRoll {
  /**
   * The rulebook explicitly cautions *against* rolling all details at once, so rolling every referenced oracle automatically is not recommended. That said, some oracle results only provide useful information once a secondary roll occurs, such as "Action + Theme". If this value is omitted, assume it's false.
   */
  auto?: boolean;
  method?: OracleTableRollMethod;
  oracle?: OracleTableId2;
  times?: number;
}
export interface I18NHints {
  result?: I18NHint;
  summary?: I18NHint;
  description?: I18NHint;
  template?: {
    result?: I18NHint;
    summary?: I18NHint;
    description?: I18NHint;
  };
}
export interface I18NHint {
  part_of_speech?: PartOfSpeech;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
export interface I18NHints1 {
  result?: I18NHint;
  summary?: I18NHint;
  description?: I18NHint;
  template?: {
    result?: I18NHint;
    summary?: I18NHint;
    description?: I18NHint;
  };
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source1 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface AssetType {
  id: AssetTypeId;
  name: Label9;
  canonical_name?: Label10;
  enhances?: AssetTypeId1;
  color?: CssColor1;
  icon?: SvgImageUrl3;
  images?: WebpImageUrl2[];
  summary?: MarkdownString10;
  description?: MarkdownString11;
  contents: {
    [k: string]: Asset;
  };
  suggestions?: Suggestions;
  source: Source3;
  replaces?: AssetTypeId2;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface Asset {
  id: AssetId1;
  name: Label11;
  canonical_name?: Label12;
  asset_type: Label13;
  color?: CssColor2;
  icon?: SvgImageUrl4;
  /**
   * Options are asset input fields which are set once, usually when the character takes the asset. The most common example is the "name" field on companion assets. A more complex example is the choice of a god's stat for the Devotant asset.
   */
  options?: {
    [k: string]: AssetOptionField;
  };
  /**
   * If `true`, this asset counts as an impact (Starforged) or a debility (classic Ironsworn).
   */
  count_as_impact: boolean;
  /**
   * Most assets only benefit to their owner, but certain assets (like Starforged's module and command vehicle assets) are shared amongst the player's allies, too.
   */
  shared: boolean;
  attachments?: AssetAttachment;
  requirement?: MarkdownString12;
  abilities: AssetAbility[];
  /**
   * Controls are condition meters, clocks, counters, and other asset input fields whose values are expected to change throughout the life of the asset.
   */
  controls?: {
    [k: string]: AssetControlField;
  };
  suggestions?: Suggestions;
  source: Source2;
}
/**
 * Describes which assets can be attached to this asset. Example: Starforged's Module assets, which can be equipped by Command Vehicle assets. See p. 55 of Starforged for more info.
 */
export interface AssetAttachment {
  /**
   * Null if there's no upper limit to the number of attached assets.
   */
  max: number | null;
  /**
   * Asset IDs (which may be wildcards) that may be attached to this asset
   */
  assets: AssetIdWildcard[];
}
/**
 * Abilities provided by this asset. Most assets have 3.
 */
export interface AssetAbility {
  id: AssetAbilityId;
  name?: Label14;
  /**
   * Is this asset ability enabled?
   */
  enabled: boolean;
  /**
   * Fields that are expected to be set once and remain the same through the life of the asset.
   */
  options?: {
    [k: string]: AssetAbilityOptionField;
  };
  text: MarkdownString9;
  /**
   * Fields whose values are expected to change over the life of the asset.
   */
  controls?: {
    [k: string]: AssetAbilityControlField;
  };
  enhance_asset?: AssetEnhancement;
  /**
   * Describes changes made to various moves by this asset ability. Usually these require specific trigger conditions.
   */
  enhance_moves?: MoveEnhancement[];
  /**
   * Unique moves added by this asset ability.
   */
  moves?: {
    [k: string]: Move;
  };
}
/**
 * Describes enhancements made to this asset in a partial asset object. The changes should be applied recursively; only the values that are specified should be changed.
 */
export interface AssetEnhancement {
  /**
   * If `true`, this asset counts as an impact (Starforged) or a debility (classic Ironsworn).
   */
  count_as_impact?: boolean;
  /**
   * Most assets only benefit to their owner, but certain assets (like Starforged's module and command vehicle assets) are shared amongst the player's allies, too.
   */
  shared?: boolean;
  attachments?: AssetAttachment;
  /**
   * Controls are condition meters, clocks, counters, and other asset input fields whose values are expected to change throughout the life of the asset.
   */
  controls?: {
    [k: string]: AssetControlFieldEnhancement;
  };
  suggestions?: Suggestions;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source2 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source3 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface Atlas {
  id: AtlasId;
  name: Label15;
  canonical_name?: Label16;
  enhances?: AtlasId1;
  color?: CssColor3;
  icon?: SvgImageUrl5;
  images?: WebpImageUrl3[];
  summary?: MarkdownString13;
  description?: MarkdownString14;
  contents: {
    [k: string]: AtlasEntry;
  };
  collections: {
    [k: string]: Atlas;
  };
  suggestions?: Suggestions;
  source: Source5;
  replaces?: AtlasId2;
}
/**
 * An atlas entry, like the Ironlands region entries found in classic Ironsworn.
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface AtlasEntry {
  id: AtlasEntryId1;
  name: Label17;
  canonical_name?: Label18;
  summary?: MarkdownString9;
  features: MarkdownString9[];
  description: MarkdownString9;
  quest_starter: MarkdownString9;
  your_truth?: MarkdownString9;
  suggestions?: Suggestions;
  source: Source4;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source4 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source5 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
/**
 * A delve site with a theme, domain, and denizen table.
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface DelveSite {
  id: DelveSiteId;
  name: Label19;
  canonical_name?: Label20;
  icon?: SvgImageUrl2;
  rank: ChallengeRank;
  description: MarkdownString9;
  suggestions?: Suggestions;
  source: Source6;
  denizens: DelveSiteDenizen[] &
    [
      {
        min: 1;
        max: 27;
        frequency: "very_common";
        [k: string]: unknown;
      },
      {
        min: 28;
        max: 41;
        frequency: "common";
        [k: string]: unknown;
      },
      {
        min: 42;
        max: 55;
        frequency: "common";
        [k: string]: unknown;
      },
      {
        min: 56;
        max: 69;
        frequency: "common";
        [k: string]: unknown;
      },
      {
        min: 70;
        max: 75;
        frequency: "uncommon";
        [k: string]: unknown;
      },
      {
        min: 76;
        max: 81;
        frequency: "uncommon";
        [k: string]: unknown;
      },
      {
        min: 82;
        max: 87;
        frequency: "uncommon";
        [k: string]: unknown;
      },
      {
        min: 88;
        max: 93;
        frequency: "uncommon";
        [k: string]: unknown;
      },
      {
        min: 94;
        max: 95;
        frequency: "rare";
        [k: string]: unknown;
      },
      {
        min: 96;
        max: 97;
        frequency: "rare";
        [k: string]: unknown;
      },
      {
        min: 98;
        max: 99;
        frequency: "rare";
        [k: string]: unknown;
      },
      {
        min: 100;
        max: 100;
        frequency: "unforeseen";
        [k: string]: unknown;
      }
    ];
  domain: DelveSiteDomainId;
  /**
   * An additional theme or domain card ID, for use with optional rules in Ironsworn: Delve.
   */
  extra_card?: DelveSiteThemeId | DelveSiteDomainId;
  region?: AtlasEntryId2;
  theme: DelveSiteThemeId;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source6 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
export interface DelveSiteDenizen {
  id: DelveSiteDenizenId;
  name?: Label14;
  min: number;
  max: number;
  frequency: DelveSiteDenizenFrequency;
  npc?: NpcId1;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface MoveCategory {
  id: MoveCategoryId;
  name: Label21;
  canonical_name?: Label22;
  enhances?: MoveCategoryId1;
  color?: CssColor4;
  icon?: SvgImageUrl6;
  images?: WebpImageUrl4[];
  summary?: MarkdownString15;
  description?: MarkdownString16;
  contents: {
    [k: string]: Move;
  };
  suggestions?: Suggestions;
  source: Source7;
  replaces?: MoveCategoryId2;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source7 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface NpcCollection {
  id: NpcCollectionId;
  name: Label23;
  canonical_name?: Label24;
  enhances?: NpcCollectionId1;
  color?: CssColor5;
  icon?: SvgImageUrl7;
  images?: WebpImageUrl5[];
  summary?: MarkdownString17;
  description?: MarkdownString18;
  contents: {
    [k: string]: Npc;
  };
  suggestions?: Suggestions;
  source: Source9;
  replaces?: NpcCollectionId2;
}
/**
 * A non-player character entry, similar to those in Chapter 5 of the Ironsworn Rulebook, or Chapter 4 of Starforged.
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface Npc {
  id: NpcId2;
  name: Label25;
  canonical_name?: Label26;
  nature: NpcNature;
  rank: ChallengeRank1;
  summary?: MarkdownString9;
  features: MarkdownString9[];
  drives: MarkdownString9[];
  tactics: MarkdownString9[];
  variants?: {
    [k: string]: NpcVariant;
  };
  description: MarkdownString9;
  quest_starter: MarkdownString9;
  your_truth?: MarkdownString9;
  suggestions?: Suggestions;
  source: Source8;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface NpcVariant {
  id: NpcVariantId;
  name: Label14;
  nature: NpcNature;
  rank: ChallengeRank2;
  summary?: MarkdownString9;
  description: MarkdownString9;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source8 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source9 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
/**
 * A rarity, as described in Ironsworn: Delve.
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface Rarity {
  id: RarityId1;
  name: Label27;
  canonical_name?: Label28;
  icon?: SvgImageUrl2;
  description: MarkdownString9;
  suggestions?: Suggestions;
  source: Source10;
  asset: AssetId2;
  /**
   * From Ironsworn: Delve, p. 174:
   *
   *       Some assets will bring a rarity into play more often than others, so the experience point cost for a rarity will vary by the linked asset. These costs are shown in the tables on page 175.
   *
   *       If you are playing solo, and aren’t concerned with the relative balance of rarity abilities, you can ignore these variable costs. If so, spend 3 experience points to purchase a rarity.
   */
  xp_cost: number;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source10 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface DelveSiteDomain {
  id: DelveSiteDomainId1;
  name: Label29;
  canonical_name?: Label30;
  /**
   * A delve site domain card.
   */
  card_type: "domain";
  icon?: SvgImageUrl2;
  summary: MarkdownString9;
  features: DelveSiteDomainFeatureRow[] &
    [
      {
        min: 21;
        max: 43;
        [k: string]: unknown;
      },
      {
        min: 44;
        max: 56;
        [k: string]: unknown;
      },
      {
        min: 57;
        max: 64;
        [k: string]: unknown;
      },
      {
        min: 65;
        max: 68;
        [k: string]: unknown;
      },
      {
        min: 69;
        max: 72;
        [k: string]: unknown;
      },
      {
        min: 73;
        max: 76;
        [k: string]: unknown;
      },
      {
        min: 77;
        max: 80;
        [k: string]: unknown;
      },
      {
        min: 81;
        max: 84;
        [k: string]: unknown;
      },
      {
        min: 85;
        max: 88;
        [k: string]: unknown;
      },
      {
        min: 89;
        max: 98;
        result?: string;
        suggestions?: {
          [k: string]: unknown;
        };
        [k: string]: unknown;
      },
      {
        min: 99;
        max: 99;
        result?: string;
        suggestions?: {
          [k: string]: unknown;
        };
        [k: string]: unknown;
      },
      {
        min: 100;
        max: 100;
        result?: string;
        suggestions?: {
          [k: string]: unknown;
        };
        [k: string]: unknown;
      }
    ];
  dangers: DelveSiteDomainDangerRow[] &
    [
      {
        min: 31;
        max: 33;
        [k: string]: unknown;
      },
      {
        min: 34;
        max: 36;
        [k: string]: unknown;
      },
      {
        min: 37;
        max: 39;
        [k: string]: unknown;
      },
      {
        min: 40;
        max: 42;
        [k: string]: unknown;
      },
      {
        min: 43;
        max: 45;
        [k: string]: unknown;
      }
    ];
  description?: MarkdownString9;
  suggestions?: Suggestions;
  source: Source11;
  name_oracle?: OracleTableId4;
}
export interface DelveSiteDomainFeatureRow {
  id: DomainFeatureRowId;
  /**
   * Low end of the dice range for this table row.
   */
  min: number;
  /**
   * High end of the dice range for this table row.
   */
  max: number;
  icon?: SvgImageUrl2;
  result: MarkdownString9;
  summary?: MarkdownString9;
  description?: MarkdownString9;
  template?: OracleRollTemplate;
  rolls?: OracleTableRoll[];
  embed_table?: OracleTableId1;
  suggestions?: Suggestions;
  i18n?: I18NHints;
}
export interface DelveSiteDomainDangerRow {
  id: DomainDangerRowId;
  /**
   * Low end of the dice range for this table row.
   */
  min: number;
  /**
   * High end of the dice range for this table row.
   */
  max: number;
  icon?: SvgImageUrl2;
  result: MarkdownString9;
  summary?: MarkdownString9;
  description?: MarkdownString9;
  template?: OracleRollTemplate;
  rolls?: OracleTableRoll[];
  embed_table?: OracleTableId1;
  suggestions?: Suggestions;
  i18n?: I18NHints;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source11 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
/**
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface DelveSiteTheme {
  id: DelveSiteThemeId1;
  name: Label31;
  canonical_name?: Label32;
  /**
   * A delve site theme card.
   */
  card_type: "theme";
  icon?: SvgImageUrl2;
  summary: MarkdownString9;
  features: DelveSiteThemeFeatureRow[] &
    [
      {
        min: 1;
        max: 4;
        [k: string]: unknown;
      },
      {
        min: 5;
        max: 8;
        [k: string]: unknown;
      },
      {
        min: 9;
        max: 12;
        [k: string]: unknown;
      },
      {
        min: 13;
        max: 16;
        [k: string]: unknown;
      },
      {
        min: 17;
        max: 20;
        [k: string]: unknown;
      }
    ];
  dangers: DelveSiteThemeDangerRow[] &
    [
      {
        min: 1;
        max: 5;
        [k: string]: unknown;
      },
      {
        min: 6;
        max: 10;
        [k: string]: unknown;
      },
      {
        min: 11;
        max: 12;
        [k: string]: unknown;
      },
      {
        min: 13;
        max: 14;
        [k: string]: unknown;
      },
      {
        min: 15;
        max: 16;
        [k: string]: unknown;
      },
      {
        min: 17;
        max: 18;
        [k: string]: unknown;
      },
      {
        min: 19;
        max: 20;
        [k: string]: unknown;
      },
      {
        min: 21;
        max: 22;
        [k: string]: unknown;
      },
      {
        min: 23;
        max: 24;
        [k: string]: unknown;
      },
      {
        min: 25;
        max: 26;
        [k: string]: unknown;
      },
      {
        min: 27;
        max: 28;
        [k: string]: unknown;
      },
      {
        min: 29;
        max: 30;
        [k: string]: unknown;
      }
    ];
  description?: MarkdownString9;
  suggestions?: Suggestions;
  source: Source12;
}
export interface DelveSiteThemeFeatureRow {
  id: ThemeFeatureRowId;
  /**
   * Low end of the dice range for this table row.
   */
  min: number;
  /**
   * High end of the dice range for this table row.
   */
  max: number;
  icon?: SvgImageUrl2;
  result: MarkdownString9;
  summary?: MarkdownString9;
  description?: MarkdownString9;
  template?: OracleRollTemplate;
  rolls?: OracleTableRoll[];
  embed_table?: OracleTableId1;
  suggestions?: Suggestions;
  i18n?: I18NHints;
}
export interface DelveSiteThemeDangerRow {
  id: ThemeDangerRowId;
  /**
   * Low end of the dice range for this table row.
   */
  min: number;
  /**
   * High end of the dice range for this table row.
   */
  max: number;
  icon?: SvgImageUrl2;
  result: MarkdownString9;
  summary?: MarkdownString9;
  description?: MarkdownString9;
  template?: OracleRollTemplate;
  rolls?: OracleTableRoll[];
  embed_table?: OracleTableId1;
  suggestions?: Suggestions;
  i18n?: I18NHints;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source12 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
/**
 * A setting truth category.
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "^([a-z][a-z_]*)$".
 */
export interface Truth {
  id: TruthId;
  name: Label33;
  canonical_name?: Label34;
  icon?: SvgImageUrl2;
  options: TruthOption[];
  suggestions?: Suggestions;
  source: Source13;
  your_character?: MarkdownString9;
}
export interface TruthOption {
  id: TruthOptionId;
  min?: number;
  max?: number;
  summary?: MarkdownString9;
  description: MarkdownString9;
  quest_starter: MarkdownString9;
  table?: TruthOptionTableRow[];
}
export interface TruthOptionTableRow {
  /**
   * Low end of the dice range for this table row. `null` represents an unrollable row, included only for rendering purposes.
   */
  min: number | null;
  /**
   * High end of the dice range for this table row. `null` represents an unrollable row, included only for rendering purposes.
   */
  max: number | null;
  icon?: SvgImageUrl2;
  result: MarkdownString9;
  summary?: MarkdownString9;
  description?: MarkdownString9;
  template?: OracleRollTemplate;
  rolls?: OracleTableRoll[];
  embed_table?: OracleTableId1;
  suggestions?: Suggestions;
  i18n?: I18NHints;
}
/**
 * Attribution for the original source (such as a book or website) of this item, including the author and licensing information.
 */
export interface Source13 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
/**
 * Metadata describing the original source of this item
 */
export interface Source14 {
  title: Title;
  /**
   * The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.
   */
  date: string;
  /**
   * The page number where this item is described in full.
   */
  page?: number;
  /**
   * @minItems 1
   */
  authors: [
    {
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    },
    ...{
      name: string;
      /**
       * An optional URL for the author's website.
       */
      url?: string;
      email?: Email;
    }[]
  ];
  license: License;
  /**
   * An absolute URL where the source document is available.
   */
  url: string;
}
