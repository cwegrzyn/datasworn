// Code generated by jtd-codegen for Java + Jackson v0.2.1

package Dataforged;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.util.List;
import java.util.Map;

@JsonSerialize
public class EncounterStarforged {
    @JsonProperty("description")
    private MarkdownString description;

    @JsonProperty("drives")
    private List<MarkdownString> drives;

    @JsonProperty("features")
    private List<MarkdownString> features;

    @JsonProperty("id")
    private Id id;

    @JsonProperty("name")
    private Label name;

    @JsonProperty("nature")
    private EncounterNatureStarforged nature;

    @JsonProperty("quest_starter")
    private MarkdownString questStarter;

    @JsonProperty("rank")
    private ChallengeRank rank;

    @JsonProperty("source")
    private Source source;

    @JsonProperty("summary")
    private MarkdownString summary;

    @JsonProperty("tactics")
    private List<MarkdownString> tactics;

    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonProperty("suggestions")
    private Suggestions suggestions;

    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonProperty("variants")
    private Map<String, EncounterVariantStarforged> variants;

    public EncounterStarforged() {
    }

    /**
     * Getter for description.<p>
     */
    public MarkdownString getDescription() {
        return description;
    }

    /**
     * Setter for description.<p>
     */
    public void setDescription(MarkdownString description) {
        this.description = description;
    }

    /**
     * Getter for drives.<p>
     */
    public List<MarkdownString> getDrives() {
        return drives;
    }

    /**
     * Setter for drives.<p>
     */
    public void setDrives(List<MarkdownString> drives) {
        this.drives = drives;
    }

    /**
     * Getter for features.<p>
     */
    public List<MarkdownString> getFeatures() {
        return features;
    }

    /**
     * Setter for features.<p>
     */
    public void setFeatures(List<MarkdownString> features) {
        this.features = features;
    }

    /**
     * Getter for id.<p>
     */
    public Id getId() {
        return id;
    }

    /**
     * Setter for id.<p>
     */
    public void setId(Id id) {
        this.id = id;
    }

    /**
     * Getter for name.<p>
     */
    public Label getName() {
        return name;
    }

    /**
     * Setter for name.<p>
     */
    public void setName(Label name) {
        this.name = name;
    }

    /**
     * Getter for nature.<p>
     */
    public EncounterNatureStarforged getNature() {
        return nature;
    }

    /**
     * Setter for nature.<p>
     */
    public void setNature(EncounterNatureStarforged nature) {
        this.nature = nature;
    }

    /**
     * Getter for questStarter.<p>
     */
    public MarkdownString getQuestStarter() {
        return questStarter;
    }

    /**
     * Setter for questStarter.<p>
     */
    public void setQuestStarter(MarkdownString questStarter) {
        this.questStarter = questStarter;
    }

    /**
     * Getter for rank.<p>
     */
    public ChallengeRank getRank() {
        return rank;
    }

    /**
     * Setter for rank.<p>
     */
    public void setRank(ChallengeRank rank) {
        this.rank = rank;
    }

    /**
     * Getter for source.<p>
     */
    public Source getSource() {
        return source;
    }

    /**
     * Setter for source.<p>
     */
    public void setSource(Source source) {
        this.source = source;
    }

    /**
     * Getter for summary.<p>
     */
    public MarkdownString getSummary() {
        return summary;
    }

    /**
     * Setter for summary.<p>
     */
    public void setSummary(MarkdownString summary) {
        this.summary = summary;
    }

    /**
     * Getter for tactics.<p>
     */
    public List<MarkdownString> getTactics() {
        return tactics;
    }

    /**
     * Setter for tactics.<p>
     */
    public void setTactics(List<MarkdownString> tactics) {
        this.tactics = tactics;
    }

    /**
     * Getter for suggestions.<p>
     */
    public Suggestions getSuggestions() {
        return suggestions;
    }

    /**
     * Setter for suggestions.<p>
     */
    public void setSuggestions(Suggestions suggestions) {
        this.suggestions = suggestions;
    }

    /**
     * Getter for variants.<p>
     */
    public Map<String, EncounterVariantStarforged> getVariants() {
        return variants;
    }

    /**
     * Setter for variants.<p>
     */
    public void setVariants(Map<String, EncounterVariantStarforged> variants) {
        this.variants = variants;
    }
}
