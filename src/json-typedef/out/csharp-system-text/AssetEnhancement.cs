// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace Datasworn
{
    /// <summary>
    /// Describes enhancements made to this asset in a partial asset object.
    /// The changes should be applied recursively; only the values that are
    /// specified should be changed.
    /// </summary>
    public class AssetEnhancement
    {
        [JsonPropertyName("attachments")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public AssetAttachment? Attachments { get; set; }

        /// <summary>
        /// Controls are condition meters, clocks, counters, and other asset
        /// input fields whose values are expected to change throughout the life
        /// of the asset.
        /// </summary>
        [JsonPropertyName("controls")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public IDictionary<string, IDictionary<string, AssetControlFieldEnhancement>> Controls { get; set; }

        /// <summary>
        /// If `true`, this asset counts as an impact (Starforged) or a debility
        /// (classic Ironsworn).
        /// </summary>
        [JsonPropertyName("count_as_impact")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public bool? CountAsImpact { get; set; }

        /// <summary>
        /// Most assets only benefit to their owner, but certain assets (like
        /// Starforged's module and command vehicle assets) are shared amongst
        /// the player's allies, too.
        /// </summary>
        [JsonPropertyName("shared")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public bool? Shared { get; set; }

        [JsonPropertyName("suggestions")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        public Suggestions? Suggestions { get; set; }
    }
}
