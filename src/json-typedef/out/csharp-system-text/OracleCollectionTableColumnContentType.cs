// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Datasworn
{
    /// <summary>
    /// The value(s) from each OracleTableRow that is rendered in this column.
    /// </summary>
    [JsonConverter(typeof(OracleCollectionTableColumnContentTypeJsonConverter))]
    public enum OracleCollectionTableColumnContentType
    {
        Description,

        Result,

        Roll,

        Summary,
    }
    public class OracleCollectionTableColumnContentTypeJsonConverter : JsonConverter<OracleCollectionTableColumnContentType>
    {
        public override OracleCollectionTableColumnContentType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string value = JsonSerializer.Deserialize<string>(ref reader, options);
            switch (value)
            {
                case "description":
                    return OracleCollectionTableColumnContentType.Description;
                case "result":
                    return OracleCollectionTableColumnContentType.Result;
                case "roll":
                    return OracleCollectionTableColumnContentType.Roll;
                case "summary":
                    return OracleCollectionTableColumnContentType.Summary;
                default:
                    throw new ArgumentException(String.Format("Bad OracleCollectionTableColumnContentType value: {0}", value));
            }
        }

        public override void Write(Utf8JsonWriter writer, OracleCollectionTableColumnContentType value, JsonSerializerOptions options)
        {
            switch (value)
            {
                case OracleCollectionTableColumnContentType.Description:
                    JsonSerializer.Serialize<string>(writer, "description", options);
                    return;
                case OracleCollectionTableColumnContentType.Result:
                    JsonSerializer.Serialize<string>(writer, "result", options);
                    return;
                case OracleCollectionTableColumnContentType.Roll:
                    JsonSerializer.Serialize<string>(writer, "roll", options);
                    return;
                case OracleCollectionTableColumnContentType.Summary:
                    JsonSerializer.Serialize<string>(writer, "summary", options);
                    return;
            }
        }
    }
}
