{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "https://ironswornrpg.com/classic.schema.json",
	"title": "Datasworn v2.0.0-dev",
	"description": "Describes game rules elements compatible with the Ironsworn tabletop role-playing game by Shawn Tomkin.",
	"$defs": {
		"EncounterClassicID": {
			"$id": "#/$defs/EncounterClassicID",
			"examples": [
				"classic/encounters/firstborn/elf",
				"delve/encounters/anomalies/glimmer"
			],
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/encounters(\\/[a-z_]+){2}$"
		},
		"EncounterStarforgedID": {
			"$id": "#/$defs/EncounterStarforgedID",
			"examples": [
				"starforged/encounters/chiton",
				"starforged/encounters/chiton/variants/chiton_drone_pack"
			],
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/encounters\\/[a-z_]+(\\/variants\\/[a-z_]+)?$"
		},
		"EncounterCollectionID": {
			"$id": "#/$defs/EncounterCollectionID",
			"examples": ["classic/collections/encounters/firstborn"],
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/collections\\/encounters\\/[a-z_]+$"
		},
		"AssetID": {
			"$id": "#/$defs/AssetID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/assets(\\/[a-z_]+){2}$"
		},
		"AssetIDWildcard": {
			"$id": "#/$defs/AssetIDWildcard",
			"type": "string",
			"pattern": "^([a-z_]+|\\*)\\/assets\\/([a-z_]+|\\*)\\/([a-z_]+|\\*)$"
		},
		"AssetTypeID": {
			"$id": "#/$defs/AssetTypeID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/collections\\/assets\\/[a-z_]+$"
		},
		"AssetOptionFieldID": {
			"$id": "#/$defs/AssetOptionFieldID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/assets(\\/[a-z_]+){2}\\/options\\/[a-z_]+"
		},
		"AssetOptionFieldIDWildcard": {
			"$id": "#/$defs/AssetOptionFieldIDWildcard",
			"type": "string",
			"pattern": "^(\\*|[a-z0-9_]{3,})\\/assets\\/([a-z_]+|\\*)\\/([a-z_]+|\\*)\\/options\\/[a-z_]+$"
		},
		"AssetControlFieldID": {
			"$id": "#/$defs/AssetControlFieldID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/assets(\\/[a-z_]+){2}\\/controls\\/[a-z_]+$"
		},
		"AssetControlFieldIDWildcard": {
			"$id": "#/$defs/AssetControlFieldIDWildcard",
			"type": "string",
			"pattern": "^(\\*|[a-z0-9_]{3,})\\/assets\\/([a-z_]+|\\*)\\/([a-z_]+|\\*)\\/controls\\/[a-z_]+$"
		},
		"AssetConditionMeterID": {
			"$id": "#/$defs/AssetConditionMeterID",
			"title": "Asset condition meter ID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/assets(\\/[a-z_]+){2}\\/condition_meter$"
		},
		"AssetConditionMeterIDWildcard": {
			"$id": "#/$defs/AssetConditionMeterIDWildcard",
			"title": "Asset condition meter ID (wildcard)",
			"type": "string",
			"pattern": "^([a-z_]+|\\*)\\/assets\\/([a-z_]+|\\*)\\/([a-z_]+|\\*)\\/condition_meter$"
		},
		"AssetConditionMeterControlFieldID": {
			"$id": "#/$defs/AssetConditionMeterControlFieldID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/assets(\\/[a-z_]+){2}\\/condition_meter\\/controls\\/[a-z_]+$"
		},
		"AssetAbilityID": {
			"$id": "#/$defs/AssetAbilityID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/assets(\\/[a-z_]+){2}\\/[0-2]$"
		},
		"AssetAbilityOptionFieldID": {
			"$id": "#/$defs/AssetAbilityOptionFieldID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/assets(\\/[a-z_]+){2}\\/[0-2]\\/options\\/[a-z_]+$"
		},
		"AssetAbilityControlFieldID": {
			"$id": "#/$defs/AssetAbilityControlFieldID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/assets(\\/[a-z_]+){2}\\/[0-2]\\/controls\\/[a-z_]+$"
		},
		"DelveSiteID": {
			"examples": ["delve/delve_sites/alvas_rest"],
			"$id": "#/$defs/DelveSiteID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/delve_sites\\/[a-z_]+$"
		},
		"DelveSiteDenizenID": {
			"examples": ["delve/delve_sites/alvas_rest/denizens/1-27"],
			"$id": "#/$defs/DelveSiteDenizenID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/delve_sites\\/[a-z_]+$\\/denizens\\/(0|[1-9][0-9]+)-(0|[1-9][0-9]+)"
		},
		"DelveSiteThemeID": {
			"$id": "#/$defs/DelveSiteThemeID",
			"examples": ["delve/site_themes/hallowed"],
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/site_themes\\/[a-z_]+$"
		},
		"ThemeFeatureRowID": {
			"$id": "#/$defs/ThemeFeatureRowID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/site_themes\\/[a-z_]+\\/features\\/(0|[1-9][0-9]+)-(0|[1-9][0-9]+)$"
		},
		"ThemeDangerRowID": {
			"$id": "#/$defs/ThemeDangerRowID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/site_themes\\/[a-z_]+\\/dangers\\/(0|[1-9][0-9]+)-(0|[1-9][0-9]+)$"
		},
		"DelveSiteDomainID": {
			"$id": "#/$defs/DelveSiteDomainID",
			"examples": ["delve/site_domains/shadowfen"],
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/site_domains\\/[a-z_]+$"
		},
		"DomainFeatureRowID": {
			"$id": "#/$defs/DomainFeatureRowID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/site_domains\\/[a-z_]+\\/features\\/(0|[1-9][0-9]+)-(0|[1-9][0-9]+)$"
		},
		"DomainDangerRowID": {
			"$id": "#/$defs/DomainDangerRowID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/site_domains\\/[a-z_]+\\/dangers\\/(0|[1-9][0-9]+)-(0|[1-9][0-9]+)$"
		},
		"MoveID": {
			"description": "A move ID, for a standard move or a unique asset move",
			"examples": [
				"classic/moves/combat/strike",
				"starforged/assets/module/grappler/moves/ready_grappler"
			],
			"$id": "#/$defs/MoveID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/(moves\\/[a-z_]+\\/[a-z_]+|assets\\/[a-z_]+\\/[a-z_]+\\/moves\\/[a-z_]+)$"
		},
		"MoveIDWildcard": {
			"title": "Move ID (with wildcard)",
			"description": "A move ID with wildcards",
			"examples": ["*/moves/*/face_danger", "*/assets/ritual/*/moves/*"],
			"$id": "#/$defs/MoveIDWildcard",
			"type": "string",
			"pattern": "^([a-z0-9_]{3,}|\\*)\\/(moves\\/([a-z_]+|\\*)\\/([a-z_]+|\\*)|assets\\/([a-z_]+|\\*)\\/([a-z_]+|\\*)\\/moves\\/([a-z_]+|\\*))$"
		},
		"MoveCategoryID": {
			"examples": ["starforged/collections/moves/adventure"],
			"$id": "#/$defs/MoveCategoryID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/collections\\/moves\\/[a-z_]+$"
		},
		"OracleTableRowID": {
			"examples": ["classic/oracles/action_and_theme/action/1-1"],
			"$id": "#/$defs/OracleTableRowID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/oracles(\\/[a-z_]+){2,4}\\/[0-9]{1,3}-[0-9]{1,3}$"
		},
		"OracleTableID": {
			"examples": [
				"starforged/oracles/core/action",
				"starforged/oracles/character/names/given",
				"starforged/oracles/planets/furnace/settlements/terminus"
			],
			"$id": "#/$defs/OracleTableID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/oracles(\\/[a-z_]+){2,4}$"
		},
		"OracleCollectionID": {
			"examples": [
				"starforged/collections/oracles/core",
				"starforged/collections/oracles/character/names",
				"starforged/collections/oracles/planets/furnace/settlements"
			],
			"$id": "#/$defs/OracleCollectionID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/collections\\/oracles(\\/[a-z_]+){1,3}$"
		},
		"RarityID": {
			"examples": ["classic/rarities/ayethins_journal"],
			"$id": "#/$defs/RarityID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/rarities\\/[a-z_]+$"
		},
		"RegionEntryID": {
			"examples": ["classic/regions/shattered_wastes"],
			"$id": "#/$defs/RegionEntryID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/regions\\/[a-z_]+$"
		},
		"WorldTruthID": {
			"examples": ["classic/world_truths/iron"],
			"$id": "#/$defs/WorldTruthID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/world_truths\\/[a-z_]+$"
		},
		"WorldTruthOptionID": {
			"examples": ["classic/world_truths/iron/0"],
			"$id": "#/$defs/WorldTruthOptionID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/world_truths\\/[a-z_]+\\/[0-2]$"
		},
		"SettingTruthID": {
			"examples": ["starforged/setting_truths/iron"],
			"$id": "#/$defs/SettingTruthID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/setting_truths\\/[a-z_]+$"
		},
		"SettingTruthOptionID": {
			"examples": ["starforged/setting_truths/iron/0"],
			"$id": "#/$defs/SettingTruthOptionID",
			"type": "string",
			"pattern": "^[a-z0-9_]{3,}\\/setting_truths\\/[a-z_]+\\/[0-2]$"
		},
		"Label": {
			"$id": "#/$defs/Label",
			"description": "A localized plain text name or label.",
			"type": "string"
		},
		"MarkdownString": {
			"$id": "#/$defs/MarkdownString",
			"description": "Localized text, formatted in Markdown.",
			"type": "string"
		},
		"TemplateString": { "$id": "#/$defs/TemplateString", "type": "string" },
		"PlayerStat": {
			"$id": "#/$defs/PlayerStat",
			"type": "string",
			"enum": ["edge", "heart", "iron", "shadow", "wits"]
		},
		"PlayerConditionMeter": {
			"$id": "#/$defs/PlayerConditionMeter",
			"type": "string",
			"enum": ["health", "spirit", "supply"]
		},
		"ChallengeRank": {
			"$id": "#/$defs/ChallengeRank",
			"description": "Challenge rank, represented as a number: 1 = Troublesome, 2 = Dangerous, 3 = Formidable, 4 = Extreme, 5 = Epic",
			"type": "integer",
			"enum": [1, 2, 3, 4, 5]
		},
		"OracleRollTemplate": {
			"$id": "#/$defs/OracleRollTemplate",
			"description": "Provides string templates that may be used in place of the static row text from `OracleTableRow#result`, `OracleTableRow#summary`, and `OracleTableRow#description`.\n\n  These strings are formatted in Markdown, but use a special syntax for their placeholders: `{{result:some_oracle_table_id}}`. The placeholder should be replaced with the value of a rolled (or selected) `OracleTableRow#result` from the target oracle table ID.",
			"type": "object",
			"properties": {
				"result": {
					"description": "A string template that may be used in place of OracleTableRow#result.",
					"examples": [
						"{{result:starforged/oracles/factions/affiliation}} of the {{result:starforged/oracles/factions/legacy}} {{result:starforged/oracles/factions/identity}}"
					],
					"$ref": "#/$defs/TemplateString"
				},
				"summary": {
					"description": "A string template that may be used in place of OracleTableRow#summary.",
					"$ref": "#/$defs/TemplateString"
				},
				"description": {
					"description": "A string template that may be used in place of OracleTableRow#description.",
					"$ref": "#/$defs/TemplateString"
				}
			}
		},
		"OracleTableRollMethod": {
			"default": "no_duplicates",
			"$id": "#/$defs/OracleTableRollMethod",
			"type": "string",
			"enum": ["no_duplicates", "keep_duplicates", "make_it_worse"]
		},
		"OracleTableRoll": {
			"$id": "#/$defs/OracleTableRoll",
			"type": "object",
			"properties": {
				"oracle": { "$ref": "#/$defs/OracleTableID" },
				"times": { "minimum": 1, "default": 1, "type": "integer" },
				"method": { "$ref": "#/$defs/OracleTableRollMethod" }
			},
			"required": ["oracle"]
		},
		"OracleTableRow": {
			"$id": "#/$defs/OracleTableRow",
			"type": "object",
			"properties": {
				"low": {
					"anyOf": [
						{ "minimum": 1, "maximum": 100, "type": "integer" },
						{ "type": "null" }
					]
				},
				"high": {
					"anyOf": [
						{ "minimum": 1, "maximum": 100, "type": "integer" },
						{ "type": "null" }
					]
				},
				"id": { "$ref": "#/$defs/OracleTableRowID" },
				"result": { "$ref": "#/$defs/MarkdownString" },
				"icon": { "$ref": "#/$defs/SvgImageURL" },
				"summary": { "$ref": "#/$defs/MarkdownString" },
				"description": { "$ref": "#/$defs/MarkdownString" },
				"rolls": {
					"type": "array",
					"items": { "$ref": "#/$defs/OracleTableRoll" }
				},
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"embed_table": { "$ref": "#/$defs/OracleTableID" },
				"template": { "$ref": "#/$defs/OracleRollTemplate" }
			},
			"required": ["low", "high", "id", "result"]
		},
		"OracleTableMatchBehavior": {
			"$id": "#/$defs/OracleTableMatchBehavior",
			"type": "object",
			"properties": { "text": { "$ref": "#/$defs/MarkdownString" } },
			"required": ["text"]
		},
		"OracleTableStyle": {
			"$id": "#/$defs/OracleTableStyle",
			"type": "string",
			"enum": ["table", "embed_in_row", "embed_as_column"]
		},
		"OracleColumnContentType": {
			"$id": "#/$defs/OracleColumnContentType",
			"type": "string",
			"enum": ["range", "result", "summary", "description"]
		},
		"OracleTableColumn": {
			"$id": "#/$defs/OracleTableColumn",
			"type": "object",
			"properties": {
				"label": { "$ref": "#/$defs/Label" },
				"content_type": { "$ref": "#/$defs/OracleColumnContentType" }
			},
			"required": ["content_type"]
		},
		"OracleCollectionColumn": {
			"$id": "#/$defs/OracleCollectionColumn",
			"description": "A column's default label is the title of the source table.",
			"type": "object",
			"properties": {
				"label": { "$ref": "#/$defs/Label" },
				"content_type": { "$ref": "#/$defs/OracleColumnContentType" },
				"table_key": { "type": "string", "pattern": "^[a-z_]+$" },
				"color": { "$ref": "#/$defs/CSSColor" }
			},
			"required": ["content_type", "table_key"]
		},
		"OracleTableRendering": {
			"$id": "#/$defs/OracleTableRendering",
			"type": "object",
			"properties": {
				"icon": { "$ref": "#/$defs/SvgImageURL" },
				"style": { "$ref": "#/$defs/OracleTableStyle" },
				"color": { "$ref": "#/$defs/CSSColor" }
			}
		},
		"OracleTable": {
			"$id": "#/$defs/OracleTable",
			"type": "object",
			"properties": {
				"source": { "$ref": "#/$defs/Source" },
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"id": { "$ref": "#/$defs/OracleTableID" },
				"name": { "$ref": "#/$defs/Label" },
				"canonical_name": { "$ref": "#/$defs/Label" },
				"summary": { "$ref": "#/$defs/MarkdownString" },
				"description": { "$ref": "#/$defs/MarkdownString" },
				"match": { "$ref": "#/$defs/OracleTableMatchBehavior" },
				"table": {
					"type": "array",
					"items": { "$ref": "#/$defs/OracleTableRow" }
				},
				"rendering": { "$ref": "#/$defs/OracleTableRendering" }
			},
			"required": ["source", "id", "name", "table"]
		},
		"OracleCollectionStyle": {
			"$id": "#/$defs/OracleCollectionStyle",
			"type": "string",
			"enum": ["multi_table"]
		},
		"OracleCollectionRendering": {
			"$id": "#/$defs/OracleCollectionRendering",
			"type": "object",
			"properties": {
				"columns": {
					"allOf": [
						{
							"description": "Describes the rendering of this oracle as a standalone table.",
							"type": "object",
							"patternProperties": {
								"^[a-z_]+$": { "$ref": "#/$defs/OracleTableColumn" }
							}
						},
						{
							"type": "object",
							"patternProperties": {
								"^[a-z_]+$": { "$ref": "#/$defs/OracleCollectionColumn" }
							}
						}
					]
				},
				"color": { "$ref": "#/$defs/CSSColor" },
				"style": { "$ref": "#/$defs/OracleCollectionStyle" }
			},
			"required": ["columns"]
		},
		"OracleCollection": {
			"$id": "#/$defs/OracleCollection",
			"type": "object",
			"properties": {
				"source": { "$ref": "#/$defs/Source" },
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"id": { "$ref": "#/$defs/OracleCollectionID" },
				"extends": { "$ref": "#/$defs/OracleCollectionID" },
				"name": { "$ref": "#/$defs/Label" },
				"canonical_name": { "$ref": "#/$defs/Label" },
				"color": { "$ref": "#/$defs/CSSColor" },
				"summary": { "$ref": "#/$defs/MarkdownString" },
				"description": { "$ref": "#/$defs/MarkdownString" },
				"contents": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/OracleTable" }
					}
				},
				"collections": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/OracleCollection" }
					}
				},
				"rendering": { "$ref": "#/$defs/OracleCollectionRendering" },
				"images": {
					"type": "array",
					"items": { "$ref": "#/$defs/WebpImageURL" }
				},
				"sample_names": {
					"type": "array",
					"items": { "$ref": "#/$defs/Label" }
				}
			},
			"required": ["source", "id", "name"]
		},
		"MoveRollMethod": {
			"$id": "#/$defs/MoveRollMethod",
			"description": "`any`: When rolling with this move trigger option, the player picks which stat to use.\n\n`all`: When rolling with this move trigger option, *every* stat or progress track of the `using` key is rolled.\n\n`highest`: When rolling with this move trigger option, use the highest/best option from the `using` key.\n\n`lowest`: When rolling with this move trigger option, use the lowest/worst option from the `using` key.",
			"type": "string",
			"enum": ["any", "all", "highest", "lowest"]
		},
		"MoveRerollMethod": {
			"$id": "#/$defs/MoveRerollMethod",
			"type": "string",
			"enum": ["any", "all", "challenge_die", "challenge_dice", "action_die"]
		},
		"MoveOutcomeType": {
			"$id": "#/$defs/MoveOutcomeType",
			"type": "string",
			"enum": ["miss", "weak_hit", "strong_hit"]
		},
		"MoveRollType": {
			"$id": "#/$defs/MoveRollType",
			"type": "string",
			"enum": ["action_roll", "progress_roll", "no_roll"]
		},
		"TriggerBy": {
			"$id": "#/$defs/TriggerBy",
			"description": "Information on who can trigger this trigger option. Usually this is just the player, but some asset abilities can trigger from an ally's move.",
			"type": "object",
			"properties": {
				"player": { "default": true, "type": "boolean" },
				"ally": { "default": false, "type": "boolean" }
			},
			"required": ["player", "ally"]
		},
		"TriggerActionRollOptionChoiceAttachedAssetRef": {
			"$id": "#/$defs/TriggerActionRollOptionChoiceAttachedAssetRef",
			"type": "object",
			"properties": {
				"using": { "const": "attached_asset_meter", "type": "string" }
			},
			"required": ["using"]
		},
		"TriggerActionRollOptionChoiceRef": {
			"$id": "#/$defs/TriggerActionRollOptionChoiceRef",
			"type": "object",
			"properties": {
				"using": { "const": "ref", "type": "string" },
				"ref": {
					"anyOf": [
						{ "$ref": "#/$defs/AssetConditionMeterIDWildcard" },
						{ "$ref": "#/$defs/AssetOptionFieldIDWildcard" }
					]
				}
			},
			"required": ["using", "ref"]
		},
		"TriggerActionRollOptionChoiceStat": {
			"$id": "#/$defs/TriggerActionRollOptionChoiceStat",
			"type": "object",
			"properties": {
				"using": {
					"anyOf": [
						{ "$ref": "#/$defs/PlayerStat" },
						{ "$ref": "#/$defs/PlayerConditionMeter" }
					]
				}
			},
			"required": ["using"]
		},
		"TriggerActionRollOptionChoiceCustomValue": {
			"$id": "#/$defs/TriggerActionRollOptionChoiceCustomValue",
			"type": "object",
			"properties": {
				"using": { "const": "custom_value", "type": "string" },
				"label": { "$ref": "#/$defs/Label" },
				"value": { "minimum": 0, "type": "integer" }
			},
			"required": ["using", "label", "value"]
		},
		"TriggerActionRollOptionChoice": {
			"$id": "#/$defs/TriggerActionRollOptionChoice",
			"anyOf": [
				{ "$ref": "#/$defs/TriggerActionRollOptionChoiceStat" },
				{ "$ref": "#/$defs/TriggerActionRollOptionChoiceRef" },
				{ "$ref": "#/$defs/TriggerActionRollOptionChoiceAttachedAssetRef" },
				{ "$ref": "#/$defs/TriggerActionRollOptionChoiceCustomValue" }
			]
		},
		"TriggerProgressRollOptionChoice": {
			"$id": "#/$defs/TriggerProgressRollOptionChoice",
			"type": "object",
			"properties": { "using": { "$ref": "#/$defs/ProgressType" } },
			"required": ["using"]
		},
		"TriggerActionRollOption": {
			"$id": "#/$defs/TriggerActionRollOption",
			"type": "object",
			"properties": {
				"text": { "$ref": "#/$defs/MarkdownString" },
				"method": {
					"default": "any",
					"anyOf": [
						{ "$ref": "#/$defs/MoveRollMethod" },
						{ "$ref": "#/$defs/MoveOutcomeType" }
					]
				},
				"by": { "$ref": "#/$defs/TriggerBy" },
				"choices": {
					"type": "array",
					"items": { "$ref": "#/$defs/TriggerActionRollOptionChoice" }
				}
			},
			"required": ["method", "choices"]
		},
		"TriggerProgressRollOption": {
			"$id": "#/$defs/TriggerProgressRollOption",
			"type": "object",
			"properties": {
				"text": { "$ref": "#/$defs/MarkdownString" },
				"method": {
					"default": "any",
					"anyOf": [
						{ "$ref": "#/$defs/MoveRollMethod" },
						{ "$ref": "#/$defs/MoveOutcomeType" }
					]
				},
				"by": { "$ref": "#/$defs/TriggerBy" },
				"choices": {
					"type": "array",
					"items": { "$ref": "#/$defs/TriggerProgressRollOptionChoice" }
				}
			},
			"required": ["method", "choices"]
		},
		"TriggerNoRollOption": {
			"$id": "#/$defs/TriggerNoRollOption",
			"type": "object",
			"properties": {
				"text": { "$ref": "#/$defs/MarkdownString" },
				"method": {
					"default": "any",
					"anyOf": [
						{ "$ref": "#/$defs/MoveRollMethod" },
						{ "$ref": "#/$defs/MoveOutcomeType" }
					]
				},
				"by": { "$ref": "#/$defs/TriggerBy" }
			},
			"required": ["method"]
		},
		"TriggerActionRoll": {
			"$id": "#/$defs/TriggerActionRoll",
			"type": "object",
			"properties": {
				"text": {
					"description": "A markdown string containing the primary trigger text for this move.\n\nSecondary trigger text (for specific stats or uses of an asset ability) may be described described in Trigger#roll_options.",
					"$ref": "#/$defs/MarkdownString"
				},
				"roll_type": { "const": "action_roll", "type": "string" },
				"roll_options": {
					"type": "array",
					"items": { "$ref": "#/$defs/TriggerActionRollOption" }
				}
			},
			"required": ["text", "roll_type", "roll_options"]
		},
		"TriggerProgressRoll": {
			"$id": "#/$defs/TriggerProgressRoll",
			"type": "object",
			"properties": {
				"text": {
					"description": "A markdown string containing the primary trigger text for this move.\n\nSecondary trigger text (for specific stats or uses of an asset ability) may be described described in Trigger#roll_options.",
					"$ref": "#/$defs/MarkdownString"
				},
				"roll_type": { "const": "progress_roll", "type": "string" },
				"roll_options": {
					"type": "array",
					"items": { "$ref": "#/$defs/TriggerProgressRollOption" }
				}
			},
			"required": ["text", "roll_type", "roll_options"]
		},
		"TriggerNoRoll": {
			"$id": "#/$defs/TriggerNoRoll",
			"type": "object",
			"properties": {
				"text": {
					"description": "A markdown string containing the primary trigger text for this move.\n\nSecondary trigger text (for specific stats or uses of an asset ability) may be described described in Trigger#roll_options.",
					"$ref": "#/$defs/MarkdownString"
				},
				"roll_type": { "const": "no_roll", "type": "string" },
				"roll_options": {
					"type": "array",
					"items": { "$ref": "#/$defs/TriggerNoRollOption" }
				}
			},
			"required": ["text", "roll_type"]
		},
		"Trigger": {
			"$id": "#/$defs/Trigger",
			"anyOf": [
				{ "$ref": "#/$defs/TriggerActionRoll" },
				{ "$ref": "#/$defs/TriggerProgressRoll" },
				{ "$ref": "#/$defs/TriggerNoRoll" }
			]
		},
		"MoveReroll": {
			"$id": "#/$defs/MoveReroll",
			"type": "object",
			"properties": {
				"text": { "$ref": "#/$defs/MarkdownString" },
				"method": { "$ref": "#/$defs/MoveRerollMethod" }
			},
			"required": ["method"]
		},
		"MoveOutcome": {
			"$id": "#/$defs/MoveOutcome",
			"type": "object",
			"properties": {
				"text": { "$ref": "#/$defs/MarkdownString" },
				"count_as": { "$ref": "#/$defs/MoveOutcomeType" },
				"reroll": { "$ref": "#/$defs/MoveReroll" }
			},
			"required": ["text"]
		},
		"MoveOutcomeMatchable": {
			"$id": "#/$defs/MoveOutcomeMatchable",
			"type": "object",
			"properties": {
				"text": { "$ref": "#/$defs/MarkdownString" },
				"count_as": { "$ref": "#/$defs/MoveOutcomeType" },
				"reroll": { "$ref": "#/$defs/MoveReroll" },
				"match": { "$ref": "#/$defs/MoveOutcome" }
			},
			"required": ["text"]
		},
		"MoveOutcomes": {
			"$id": "#/$defs/MoveOutcomes",
			"type": "object",
			"properties": {
				"miss": { "$ref": "#/$defs/MoveOutcomeMatchable" },
				"weak_hit": { "$ref": "#/$defs/MoveOutcome" },
				"strong_hit": { "$ref": "#/$defs/MoveOutcomeMatchable" }
			},
			"required": ["miss", "weak_hit", "strong_hit"]
		},
		"Move": {
			"$id": "#/$defs/Move",
			"type": "object",
			"properties": {
				"source": { "$ref": "#/$defs/Source" },
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"id": { "$ref": "#/$defs/MoveID" },
				"name": { "$ref": "#/$defs/Label" },
				"trigger": { "$ref": "#/$defs/Trigger" },
				"text": { "$ref": "#/$defs/MarkdownString" },
				"outcomes": { "$ref": "#/$defs/MoveOutcomes" },
				"oracles": {
					"type": "array",
					"items": { "$ref": "#/$defs/OracleTableID" }
				}
			},
			"required": ["source", "id", "name", "trigger", "text"]
		},
		"MoveCategory": {
			"$id": "#/$defs/MoveCategory",
			"type": "object",
			"properties": {
				"source": { "$ref": "#/$defs/Source" },
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"id": { "$ref": "#/$defs/MoveCategoryID" },
				"extends": { "$ref": "#/$defs/MoveCategoryID" },
				"name": { "$ref": "#/$defs/Label" },
				"canonical_name": { "$ref": "#/$defs/Label" },
				"summary": { "$ref": "#/$defs/MarkdownString" },
				"description": { "$ref": "#/$defs/MarkdownString" },
				"contents": {
					"type": "object",
					"patternProperties": { "^[a-z_]+$": { "$ref": "#/$defs/Move" } }
				},
				"color": { "$ref": "#/$defs/CSSColor" }
			},
			"required": ["source", "id", "name", "color"]
		},
		"MoveExtension": {
			"$id": "#/$defs/MoveExtension",
			"type": "object",
			"properties": {
				"trigger": { "$ref": "#/$defs/Trigger" },
				"text": { "$ref": "#/$defs/MarkdownString" },
				"outcomes": { "$ref": "#/$defs/MoveOutcomes" },
				"oracles": {
					"type": "array",
					"items": { "$ref": "#/$defs/OracleTableID" }
				},
				"extends": { "type": "array", "items": { "$ref": "#/$defs/MoveID" } }
			},
			"required": ["trigger", "text"]
		},
		"AssetConditionMeterControlField": {
			"$id": "#/$defs/AssetConditionMeterControlField",
			"type": "object",
			"allOf": [
				{
					"type": "object",
					"properties": {
						"label": { "$ref": "#/$defs/Label" },
						"field_type": { "const": "checkbox", "type": "string" },
						"value": { "default": false, "type": "boolean" }
					},
					"required": ["label", "field_type"]
				},
				{
					"type": "object",
					"properties": {
						"id": { "$ref": "#/$defs/AssetConditionMeterControlFieldID" }
					},
					"required": ["id"]
				}
			]
		},
		"AssetConditionMeter": {
			"$id": "#/$defs/AssetConditionMeter",
			"type": "object",
			"properties": {
				"min": { "default": 0, "type": "integer" },
				"max": { "type": "integer" },
				"id": { "$ref": "#/$defs/AssetConditionMeterID" },
				"controls": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/AssetConditionMeterControlField" }
					}
				}
			},
			"required": ["min", "max", "id"]
		},
		"AssetConditionMeterExtension": {
			"$id": "#/$defs/AssetConditionMeterExtension",
			"type": "object",
			"properties": {
				"min": { "default": 0, "type": "integer" },
				"max": { "type": "integer" },
				"controls": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/AssetConditionMeterControlField" }
					}
				}
			}
		},
		"AssetOptionField": {
			"$id": "#/$defs/AssetOptionField",
			"allOf": [
				{
					"anyOf": [
						{
							"type": "object",
							"properties": {
								"label": { "$ref": "#/$defs/Label" },
								"field_type": { "const": "text", "type": "string" },
								"value": { "type": "string" }
							},
							"required": ["label", "field_type"]
						},
						{
							"type": "object",
							"properties": {
								"field_type": { "const": "select_stat", "type": "string" },
								"label": { "$ref": "#/$defs/Label" },
								"value": { "$ref": "#/$defs/PlayerStat" },
								"choices": {
									"type": "object",
									"patternProperties": {
										"^[a-z_]+$": {
											"type": "object",
											"properties": {
												"label": { "$ref": "#/$defs/Label" },
												"value": { "$ref": "#/$defs/PlayerStat" },
												"selected": { "type": "boolean" }
											},
											"required": ["label", "value"]
										}
									}
								}
							},
							"required": ["field_type", "label", "choices"]
						}
					]
				},
				{
					"type": "object",
					"properties": { "id": { "$ref": "#/$defs/AssetOptionFieldID" } },
					"required": ["id"]
				}
			]
		},
		"AssetControlField": {
			"$id": "#/$defs/AssetControlField",
			"type": "object",
			"allOf": [
				{
					"type": "object",
					"properties": {
						"label": { "$ref": "#/$defs/Label" },
						"field_type": { "const": "checkbox", "type": "string" },
						"value": { "default": false, "type": "boolean" }
					},
					"required": ["label", "field_type"]
				},
				{
					"type": "object",
					"properties": { "id": { "$ref": "#/$defs/AssetControlFieldID" } },
					"required": ["id"]
				}
			]
		},
		"AssetAttachment": {
			"$id": "#/$defs/AssetAttachment",
			"description": "Describes which assets can be attached to this asset. Example: Starforged's Module assets, which can be equipped by Command Vehicle assets. See p. 55 of Starforged for more info.",
			"type": "object",
			"properties": {
				"assets": {
					"description": "Asset IDs (which may be wildcards) that may be attached to this asset",
					"type": "array",
					"items": { "$ref": "#/$defs/AssetIDWildcard" }
				},
				"max": {
					"minimum": 1,
					"description": "Omit if there's no upper limit to the number of attached assets.",
					"type": "integer"
				}
			},
			"required": ["assets"]
		},
		"Asset": {
			"$id": "#/$defs/Asset",
			"type": "object",
			"properties": {
				"id": { "$ref": "#/$defs/AssetID" },
				"name": { "$ref": "#/$defs/Label" },
				"source": { "$ref": "#/$defs/Source" },
				"options": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/AssetOptionField" }
					}
				},
				"controls": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/AssetControlField" }
					}
				},
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"requirement": { "$ref": "#/$defs/MarkdownString" },
				"abilities": {
					"minItems": 3,
					"maxItems": 3,
					"type": "array",
					"items": { "$ref": "#/$defs/AssetAbility" }
				},
				"condition_meter": { "$ref": "#/$defs/AssetConditionMeter" },
				"count_as_impact": {
					"default": false,
					"description": "If `true`, this asset counts as an impact (Starforged) or a debility (classic Ironsworn).",
					"type": "boolean"
				},
				"attachments": { "$ref": "#/$defs/AssetAttachment" },
				"shared": {
					"description": "Most assets only benefit to their owner, but certain assets (like Starforged's module and command vehicle assets) are shared amongst the player's allies, too.",
					"type": "boolean"
				}
			},
			"required": ["id", "name", "source", "abilities"]
		},
		"AssetAbilityOptionField": {
			"$id": "#/$defs/AssetAbilityOptionField",
			"type": "object",
			"allOf": [
				{
					"type": "object",
					"properties": {
						"label": { "$ref": "#/$defs/Label" },
						"field_type": { "const": "text", "type": "string" },
						"value": { "type": "string" }
					},
					"required": ["label", "field_type"]
				},
				{
					"type": "object",
					"properties": {
						"id": { "$ref": "#/$defs/AssetAbilityOptionFieldID" }
					},
					"required": ["id"]
				}
			]
		},
		"AssetAbilityControlField": {
			"$id": "#/$defs/AssetAbilityControlField",
			"allOf": [
				{
					"anyOf": [
						{
							"type": "object",
							"properties": {
								"min": { "const": 0, "type": "number" },
								"max": { "type": "integer", "enum": [4, 6, 8, 10] },
								"label": { "$ref": "#/$defs/Label" },
								"field_type": { "const": "clock", "type": "string" },
								"value": { "default": 0, "type": "integer" }
							},
							"required": ["min", "max", "label", "field_type"]
						},
						{
							"type": "object",
							"properties": {
								"min": { "type": "integer" },
								"max": { "type": "integer" },
								"label": { "$ref": "#/$defs/Label" },
								"field_type": { "const": "counter", "type": "string" },
								"value": { "default": 0, "type": "integer" }
							},
							"required": ["min", "label", "field_type"]
						},
						{
							"type": "object",
							"properties": {
								"label": { "$ref": "#/$defs/Label" },
								"field_type": { "const": "checkbox", "type": "string" },
								"value": { "default": false, "type": "boolean" }
							},
							"required": ["label", "field_type"]
						}
					]
				},
				{
					"type": "object",
					"properties": {
						"id": { "$ref": "#/$defs/AssetAbilityControlFieldID" }
					},
					"required": ["id"]
				}
			]
		},
		"AssetAbility": {
			"$id": "#/$defs/AssetAbility",
			"type": "object",
			"properties": {
				"id": { "$ref": "#/$defs/AssetAbilityID" },
				"name": { "$ref": "#/$defs/Label" },
				"text": { "$ref": "#/$defs/MarkdownString" },
				"enabled": { "default": false, "type": "boolean" },
				"moves": {
					"description": "Unique moves added by this asset ability.",
					"type": "object",
					"patternProperties": { "^[a-z_]+$": { "$ref": "#/$defs/Move" } }
				},
				"options": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/AssetAbilityOptionField" }
					}
				},
				"controls": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/AssetAbilityControlField" }
					}
				},
				"extend_asset": {
					"type": "object",
					"allOf": [
						{
							"type": "object",
							"properties": {
								"suggestions": { "$ref": "#/$defs/Suggestions" },
								"count_as_impact": {
									"default": false,
									"description": "If `true`, this asset counts as an impact (Starforged) or a debility (classic Ironsworn).",
									"type": "boolean"
								},
								"attachments": { "$ref": "#/$defs/AssetAttachment" },
								"shared": {
									"description": "Most assets only benefit to their owner, but certain assets (like Starforged's module and command vehicle assets) are shared amongst the player's allies, too.",
									"type": "boolean"
								}
							}
						},
						{
							"type": "object",
							"properties": {
								"condition_meter": {
									"$ref": "#/$defs/AssetConditionMeterExtension"
								}
							}
						}
					]
				},
				"extend_moves": {
					"type": "array",
					"items": { "$ref": "#/$defs/MoveExtension" }
				}
			},
			"required": ["id", "text", "enabled"]
		},
		"AssetType": {
			"$id": "#/$defs/AssetType",
			"type": "object",
			"properties": {
				"source": { "$ref": "#/$defs/Source" },
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"id": { "$ref": "#/$defs/AssetTypeID" },
				"extends": { "$ref": "#/$defs/AssetTypeID" },
				"name": { "$ref": "#/$defs/Label" },
				"canonical_name": { "$ref": "#/$defs/Label" },
				"color": { "$ref": "#/$defs/CSSColor" },
				"summary": { "$ref": "#/$defs/MarkdownString" },
				"description": { "$ref": "#/$defs/MarkdownString" },
				"contents": {
					"type": "object",
					"patternProperties": { "^[a-z_]+$": { "$ref": "#/$defs/Asset" } }
				},
				"member_label": { "$ref": "#/$defs/Label" }
			},
			"required": ["source", "id", "name"]
		},
		"Suggestions": {
			"type": "object",
			"properties": {
				"site_domains": {
					"type": "array",
					"items": { "$ref": "#/$defs/DelveSiteDomainID" }
				},
				"site_themes": {
					"type": "array",
					"items": { "$ref": "#/$defs/DelveSiteThemeID" }
				},
				"encounters": {
					"type": "array",
					"items": { "$ref": "#/$defs/EncounterClassicID" }
				},
				"regions": {
					"type": "array",
					"items": { "$ref": "#/$defs/RegionEntryID" }
				},
				"oracles": {
					"type": "array",
					"items": { "$ref": "#/$defs/OracleTableID" }
				},
				"assets": { "type": "array", "items": { "$ref": "#/$defs/AssetID" } },
				"moves": { "type": "array", "items": { "$ref": "#/$defs/MoveID" } }
			},
			"$id": "#/$defs/Suggestions"
		},
		"DelveSite": {
			"$id": "#/$defs/DelveSite",
			"description": "A delve site with a theme, domain, and denizen table.",
			"type": "object",
			"properties": {
				"source": { "$ref": "#/$defs/Source" },
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"id": { "$ref": "#/$defs/DelveSiteID" },
				"name": { "$ref": "#/$defs/Label" },
				"icon": { "$ref": "#/$defs/SvgImageURL" },
				"rank": { "$ref": "#/$defs/ChallengeRank" },
				"theme": { "$ref": "#/$defs/DelveSiteThemeID" },
				"domain": { "$ref": "#/$defs/DelveSiteDomainID" },
				"extra_card": {
					"description": "An additional theme or domain card for use with optional rules in Ironsworn: Delve.",
					"anyOf": [
						{ "$ref": "#/$defs/DelveSiteThemeID" },
						{ "$ref": "#/$defs/DelveSiteDomainID" }
					]
				},
				"description": { "$ref": "#/$defs/MarkdownString" },
				"denizens": {
					"allOf": [
						{
							"type": "array",
							"items": { "$ref": "#/$defs/DelveSiteDenizen" }
						},
						{
							"type": "array",
							"items": [
								{
									"type": "object",
									"properties": {
										"frequency": { "const": "very_common", "type": "string" },
										"low": { "const": 1, "type": "number" },
										"high": { "const": 27, "type": "number" }
									},
									"required": ["frequency", "low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"frequency": { "const": "common", "type": "string" },
										"low": { "const": 28, "type": "number" },
										"high": { "const": 41, "type": "number" }
									},
									"required": ["frequency", "low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"frequency": { "const": "common", "type": "string" },
										"low": { "const": 42, "type": "number" },
										"high": { "const": 55, "type": "number" }
									},
									"required": ["frequency", "low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"frequency": { "const": "common", "type": "string" },
										"low": { "const": 56, "type": "number" },
										"high": { "const": 69, "type": "number" }
									},
									"required": ["frequency", "low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"frequency": { "const": "uncommon", "type": "string" },
										"low": { "const": 70, "type": "number" },
										"high": { "const": 75, "type": "number" }
									},
									"required": ["frequency", "low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"frequency": { "const": "uncommon", "type": "string" },
										"low": { "const": 76, "type": "number" },
										"high": { "const": 81, "type": "number" }
									},
									"required": ["frequency", "low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"frequency": { "const": "uncommon", "type": "string" },
										"low": { "const": 82, "type": "number" },
										"high": { "const": 87, "type": "number" }
									},
									"required": ["frequency", "low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"frequency": { "const": "uncommon", "type": "string" },
										"low": { "const": 88, "type": "number" },
										"high": { "const": 93, "type": "number" }
									},
									"required": ["frequency", "low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"frequency": { "const": "rare", "type": "string" },
										"low": { "const": 94, "type": "number" },
										"high": { "const": 95, "type": "number" }
									},
									"required": ["frequency", "low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"frequency": { "const": "rare", "type": "string" },
										"low": { "const": 96, "type": "number" },
										"high": { "const": 97, "type": "number" }
									},
									"required": ["frequency", "low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"frequency": { "const": "rare", "type": "string" },
										"low": { "const": 98, "type": "number" },
										"high": { "const": 99, "type": "number" }
									},
									"required": ["frequency", "low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"frequency": { "const": "unforeseen", "type": "string" },
										"low": { "const": 100, "type": "number" },
										"high": { "const": 100, "type": "number" }
									},
									"required": ["frequency", "low", "high"]
								}
							],
							"additionalItems": false,
							"minItems": 12,
							"maxItems": 12
						}
					]
				}
			},
			"required": [
				"source",
				"id",
				"name",
				"rank",
				"theme",
				"domain",
				"description",
				"denizens"
			]
		},
		"DelveSiteDenizen": {
			"$id": "#/$defs/DelveSiteDenizen",
			"type": "object",
			"properties": {
				"id": { "$ref": "#/$defs/DelveSiteDenizenID" },
				"name": { "$ref": "#/$defs/Label" },
				"low": { "minimum": 1, "maximum": 100, "type": "integer" },
				"high": { "minimum": 1, "maximum": 100, "type": "integer" },
				"encounter": {
					"description": "The ID of the relevant encounter, if one is specified.",
					"$ref": "#/$defs/EncounterClassicID"
				},
				"frequency": { "$ref": "#/$defs/DelveSiteDenizenFrequency" }
			},
			"required": ["id", "low", "high", "frequency"]
		},
		"DelveSiteDenizenFrequency": {
			"$id": "#/$defs/DelveSiteDenizenFrequency",
			"type": "string",
			"enum": ["very_common", "common", "uncommon", "rare", "unforeseen"]
		},
		"DelveSiteDomain": {
			"$id": "#/$defs/DelveSiteDomain",
			"title": "Delve site domain",
			"type": "object",
			"properties": {
				"source": { "$ref": "#/$defs/Source" },
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"name": { "$ref": "#/$defs/Label" },
				"summary": { "$ref": "#/$defs/MarkdownString" },
				"description": { "$ref": "#/$defs/MarkdownString" },
				"icon": { "$ref": "#/$defs/SvgImageURL" },
				"id": { "$ref": "#/$defs/DelveSiteDomainID" },
				"card_type": { "const": "domain", "type": "string" },
				"features": {
					"allOf": [
						{
							"type": "array",
							"items": {
								"title": "Site domain feature row",
								"type": "object",
								"properties": {
									"low": {
										"anyOf": [
											{ "minimum": 1, "maximum": 100, "type": "integer" },
											{ "type": "null" }
										]
									},
									"high": {
										"anyOf": [
											{ "minimum": 1, "maximum": 100, "type": "integer" },
											{ "type": "null" }
										]
									},
									"result": { "$ref": "#/$defs/MarkdownString" },
									"icon": { "$ref": "#/$defs/SvgImageURL" },
									"summary": { "$ref": "#/$defs/MarkdownString" },
									"description": { "$ref": "#/$defs/MarkdownString" },
									"rolls": {
										"type": "array",
										"items": { "$ref": "#/$defs/OracleTableRoll" }
									},
									"suggestions": { "$ref": "#/$defs/Suggestions" },
									"embed_table": { "$ref": "#/$defs/OracleTableID" },
									"template": { "$ref": "#/$defs/OracleRollTemplate" },
									"id": { "$ref": "#/$defs/DomainFeatureRowID" }
								},
								"required": ["low", "high", "result", "id"]
							}
						},
						{
							"type": "array",
							"items": [
								{
									"type": "object",
									"properties": {
										"low": { "const": 21, "type": "number" },
										"high": { "const": 43, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 44, "type": "number" },
										"high": { "const": 56, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 57, "type": "number" },
										"high": { "const": 64, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 65, "type": "number" },
										"high": { "const": 68, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 69, "type": "number" },
										"high": { "const": 72, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 73, "type": "number" },
										"high": { "const": 76, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 77, "type": "number" },
										"high": { "const": 80, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 81, "type": "number" },
										"high": { "const": 84, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 85, "type": "number" },
										"high": { "const": 88, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 89, "type": "number" },
										"high": { "const": 98, "type": "number" },
										"result": { "default": "Something unusual or unexpected" },
										"suggestions": {
											"default": {
												"oracles": [
													"delve/oracles/feature/aspect",
													"delve/oracles/feature/focus"
												]
											}
										}
									},
									"required": ["low", "high", "result", "suggestions"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 99, "type": "number" },
										"high": { "const": 99, "type": "number" },
										"result": { "default": "You transition into a new theme" },
										"suggestions": {
											"default": {
												"oracles": ["delve/oracles/site_nature/theme"]
											}
										}
									},
									"required": ["low", "high", "result", "suggestions"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 100, "type": "number" },
										"high": { "const": 100, "type": "number" },
										"result": { "default": "You transition into a new domain" },
										"suggestions": {
											"default": {
												"oracles": ["delve/oracles/site_nature/domain"]
											}
										}
									},
									"required": ["low", "high", "result", "suggestions"]
								}
							],
							"additionalItems": false,
							"minItems": 12,
							"maxItems": 12
						}
					]
				},
				"dangers": {
					"allOf": [
						{
							"type": "array",
							"items": {
								"title": "Site domain danger row",
								"type": "object",
								"properties": {
									"low": {
										"anyOf": [
											{ "minimum": 1, "maximum": 100, "type": "integer" },
											{ "type": "null" }
										]
									},
									"high": {
										"anyOf": [
											{ "minimum": 1, "maximum": 100, "type": "integer" },
											{ "type": "null" }
										]
									},
									"result": { "$ref": "#/$defs/MarkdownString" },
									"icon": { "$ref": "#/$defs/SvgImageURL" },
									"summary": { "$ref": "#/$defs/MarkdownString" },
									"description": { "$ref": "#/$defs/MarkdownString" },
									"rolls": {
										"type": "array",
										"items": { "$ref": "#/$defs/OracleTableRoll" }
									},
									"suggestions": { "$ref": "#/$defs/Suggestions" },
									"embed_table": { "$ref": "#/$defs/OracleTableID" },
									"template": { "$ref": "#/$defs/OracleRollTemplate" },
									"id": { "$ref": "#/$defs/DomainDangerRowID" }
								},
								"required": ["low", "high", "result", "id"]
							}
						},
						{
							"type": "array",
							"items": [
								{
									"type": "object",
									"properties": {
										"low": { "const": 31, "type": "number" },
										"high": { "const": 33, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 34, "type": "number" },
										"high": { "const": 36, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 37, "type": "number" },
										"high": { "const": 39, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 40, "type": "number" },
										"high": { "const": 42, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 43, "type": "number" },
										"high": { "const": 45, "type": "number" }
									},
									"required": ["low", "high"]
								}
							],
							"additionalItems": false,
							"minItems": 5,
							"maxItems": 5
						}
					]
				}
			},
			"required": [
				"source",
				"name",
				"summary",
				"id",
				"card_type",
				"features",
				"dangers"
			]
		},
		"DelveSiteTheme": {
			"$id": "#/$defs/DelveSiteTheme",
			"title": "Delve site theme",
			"type": "object",
			"properties": {
				"source": { "$ref": "#/$defs/Source" },
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"name": { "$ref": "#/$defs/Label" },
				"summary": { "$ref": "#/$defs/MarkdownString" },
				"description": { "$ref": "#/$defs/MarkdownString" },
				"icon": { "$ref": "#/$defs/SvgImageURL" },
				"id": { "$ref": "#/$defs/DelveSiteThemeID" },
				"card_type": { "const": "theme", "type": "string" },
				"features": {
					"allOf": [
						{
							"type": "array",
							"items": {
								"title": "Site theme feature row",
								"type": "object",
								"properties": {
									"low": {
										"anyOf": [
											{ "minimum": 1, "maximum": 100, "type": "integer" },
											{ "type": "null" }
										]
									},
									"high": {
										"anyOf": [
											{ "minimum": 1, "maximum": 100, "type": "integer" },
											{ "type": "null" }
										]
									},
									"result": { "$ref": "#/$defs/MarkdownString" },
									"icon": { "$ref": "#/$defs/SvgImageURL" },
									"summary": { "$ref": "#/$defs/MarkdownString" },
									"description": { "$ref": "#/$defs/MarkdownString" },
									"rolls": {
										"type": "array",
										"items": { "$ref": "#/$defs/OracleTableRoll" }
									},
									"suggestions": { "$ref": "#/$defs/Suggestions" },
									"embed_table": { "$ref": "#/$defs/OracleTableID" },
									"template": { "$ref": "#/$defs/OracleRollTemplate" },
									"id": { "$ref": "#/$defs/ThemeFeatureRowID" }
								},
								"required": ["low", "high", "result", "id"]
							}
						},
						{
							"type": "array",
							"items": [
								{
									"type": "object",
									"properties": {
										"low": { "const": 1, "type": "number" },
										"high": { "const": 4, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 5, "type": "number" },
										"high": { "const": 8, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 9, "type": "number" },
										"high": { "const": 12, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 13, "type": "number" },
										"high": { "const": 16, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 17, "type": "number" },
										"high": { "const": 20, "type": "number" }
									},
									"required": ["low", "high"]
								}
							],
							"additionalItems": false,
							"minItems": 5,
							"maxItems": 5
						}
					]
				},
				"dangers": {
					"allOf": [
						{
							"type": "array",
							"items": {
								"title": "Site theme danger row",
								"type": "object",
								"properties": {
									"low": {
										"anyOf": [
											{ "minimum": 1, "maximum": 100, "type": "integer" },
											{ "type": "null" }
										]
									},
									"high": {
										"anyOf": [
											{ "minimum": 1, "maximum": 100, "type": "integer" },
											{ "type": "null" }
										]
									},
									"result": { "$ref": "#/$defs/MarkdownString" },
									"icon": { "$ref": "#/$defs/SvgImageURL" },
									"summary": { "$ref": "#/$defs/MarkdownString" },
									"description": { "$ref": "#/$defs/MarkdownString" },
									"rolls": {
										"type": "array",
										"items": { "$ref": "#/$defs/OracleTableRoll" }
									},
									"suggestions": { "$ref": "#/$defs/Suggestions" },
									"embed_table": { "$ref": "#/$defs/OracleTableID" },
									"template": { "$ref": "#/$defs/OracleRollTemplate" },
									"id": { "$ref": "#/$defs/ThemeDangerRowID" }
								},
								"required": ["low", "high", "result", "id"]
							}
						},
						{
							"type": "array",
							"items": [
								{
									"type": "object",
									"properties": {
										"low": { "const": 1, "type": "number" },
										"high": { "const": 5, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 6, "type": "number" },
										"high": { "const": 10, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 11, "type": "number" },
										"high": { "const": 12, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 13, "type": "number" },
										"high": { "const": 14, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 15, "type": "number" },
										"high": { "const": 16, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 17, "type": "number" },
										"high": { "const": 18, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 19, "type": "number" },
										"high": { "const": 20, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 21, "type": "number" },
										"high": { "const": 22, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 23, "type": "number" },
										"high": { "const": 24, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 25, "type": "number" },
										"high": { "const": 26, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 27, "type": "number" },
										"high": { "const": 28, "type": "number" }
									},
									"required": ["low", "high"]
								},
								{
									"type": "object",
									"properties": {
										"low": { "const": 29, "type": "number" },
										"high": { "const": 30, "type": "number" }
									},
									"required": ["low", "high"]
								}
							],
							"additionalItems": false,
							"minItems": 12,
							"maxItems": 12
						}
					]
				}
			},
			"required": [
				"source",
				"name",
				"summary",
				"id",
				"card_type",
				"features",
				"dangers"
			]
		},
		"EncounterCollectionClassic": {
			"$id": "#/$defs/EncounterCollectionClassic",
			"type": "object",
			"properties": {
				"member_label": { "$ref": "#/$defs/Label" },
				"source": { "$ref": "#/$defs/Source" },
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"id": { "$ref": "#/$defs/EncounterCollectionID" },
				"extends": { "$ref": "#/$defs/EncounterCollectionID" },
				"name": { "$ref": "#/$defs/Label" },
				"canonical_name": { "$ref": "#/$defs/Label" },
				"color": { "$ref": "#/$defs/CSSColor" },
				"summary": { "$ref": "#/$defs/MarkdownString" },
				"description": { "$ref": "#/$defs/MarkdownString" },
				"contents": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/EncounterClassic" }
					}
				}
			},
			"required": ["source", "id", "name"]
		},
		"EncounterClassic": {
			"$id": "#/$defs/EncounterClassic",
			"description": "An encounter entry, similar to those in Chapter 5 of the Ironsworn Rulebook.",
			"type": "object",
			"properties": {
				"id": { "$ref": "#/$defs/EncounterClassicID" },
				"your_truths": { "$ref": "#/$defs/MarkdownString" },
				"drives": {
					"type": "array",
					"items": { "$ref": "#/$defs/MarkdownString" }
				},
				"tactics": {
					"type": "array",
					"items": { "$ref": "#/$defs/MarkdownString" }
				},
				"rank": { "$ref": "#/$defs/ChallengeRank" },
				"source": { "$ref": "#/$defs/Source" },
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"name": { "$ref": "#/$defs/Label" },
				"features": {
					"type": "array",
					"items": { "$ref": "#/$defs/MarkdownString" }
				},
				"summary": { "$ref": "#/$defs/MarkdownString" },
				"description": { "$ref": "#/$defs/MarkdownString" },
				"quest_starter": { "$ref": "#/$defs/MarkdownString" }
			},
			"required": [
				"id",
				"drives",
				"tactics",
				"rank",
				"source",
				"name",
				"features",
				"summary",
				"description"
			]
		},
		"ProgressType": {
			"$id": "#/$defs/ProgressType",
			"type": "string",
			"enum": [
				"combat_progress",
				"vow_progress",
				"scene_challenge_progress",
				"journey_progress",
				"delve_progress",
				"bonds_progress",
				"failure_track"
			]
		},
		"Rarity": {
			"$id": "#/$defs/Rarity",
			"description": "A rarity, as described in Ironsworn: Delve.",
			"anyOf": [
				{
					"type": "object",
					"properties": {
						"source": { "$ref": "#/$defs/Source" },
						"suggestions": { "$ref": "#/$defs/Suggestions" }
					},
					"required": ["source"]
				},
				{
					"type": "object",
					"properties": {
						"id": { "$ref": "#/$defs/RarityID" },
						"name": { "$ref": "#/$defs/Label" },
						"asset": {
							"description": "The asset enhanced by this rarity.",
							"$ref": "#/$defs/AssetID"
						},
						"icon": { "$ref": "#/$defs/SvgImageURL" },
						"xp_cost": {
							"minimum": 3,
							"maximum": 5,
							"description": "From Ironsworn: Delve, p. 174:\n\n      Some assets will bring a rarity into play more often than others, so the experience point cost for a rarity will vary by the linked asset. These costs are shown in the tables on page 175.\n\n      If you are playing solo, and aren’t concerned with the relative balance of rarity abilities, you can ignore these variable costs. If so, spend 3 experience points to purchase a rarity.",
							"type": "integer"
						},
						"description": { "$ref": "#/$defs/MarkdownString" }
					},
					"required": ["id", "name", "asset", "icon", "xp_cost", "description"]
				}
			]
		},
		"RegionEntry": {
			"$id": "#/$defs/RegionEntry",
			"description": "A region entry, like the Ironlands region entries found in classic Ironsworn.",
			"type": "object",
			"properties": {
				"source": { "$ref": "#/$defs/Source" },
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"name": { "$ref": "#/$defs/Label" },
				"features": {
					"type": "array",
					"items": { "$ref": "#/$defs/MarkdownString" }
				},
				"summary": { "$ref": "#/$defs/MarkdownString" },
				"description": { "$ref": "#/$defs/MarkdownString" },
				"quest_starter": { "$ref": "#/$defs/MarkdownString" }
			},
			"required": ["source", "name", "features", "summary", "description"]
		},
		"WorldTruth": {
			"$id": "#/$defs/WorldTruth",
			"description": "A world truth category in the format used by Ironsworn.",
			"type": "object",
			"properties": {
				"id": { "$ref": "#/$defs/WorldTruthID" },
				"source": { "$ref": "#/$defs/Source" },
				"suggestions": { "$ref": "#/$defs/Suggestions" },
				"name": { "$ref": "#/$defs/Label" },
				"options": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"description": { "$ref": "#/$defs/MarkdownString" },
							"quest_starter": { "$ref": "#/$defs/MarkdownString" }
						},
						"required": ["description", "quest_starter"]
					}
				},
				"icon": { "$ref": "#/$defs/SvgImageURL" }
			},
			"required": ["id", "source", "name", "options"]
		},
		"WorldTruthOption": {
			"$id": "#/$defs/WorldTruthOption",
			"type": "object",
			"properties": {
				"id": { "$ref": "#/$defs/WorldTruthOptionID" },
				"description": { "$ref": "#/$defs/MarkdownString" },
				"quest_starter": { "$ref": "#/$defs/MarkdownString" }
			},
			"required": ["id", "description", "quest_starter"]
		},
		"Ruleset": {
			"$id": "#/$defs/Ruleset",
			"description": "The ruleset used for a sourcebook's rules content.",
			"type": "string",
			"enum": ["classic", "starforged"]
		},
		"SvgImageURL": {
			"title": "SVG Image URL",
			"$id": "#/$defs/SvgImageURL",
			"format": "uri",
			"description": "A relative URL pointing to a vector image in the SVG format.",
			"type": "string"
		},
		"WebpImageURL": {
			"title": "WEBP Image URL",
			"$id": "#/$defs/WebpImageURL",
			"format": "uri",
			"description": "A relative URL pointing to a raster image in the WEBP format.",
			"type": "string"
		},
		"CSSColor": {
			"title": "CSS Color",
			"$id": "#/$defs/CSSColor",
			"description": "A CSS color value. See: https://developer.mozilla.org/en-US/docs/Web/CSS/color_value",
			"type": "string"
		},
		"Source": {
			"description": "Metadata describing the original source of this item",
			"$id": "#/$defs/Source",
			"type": "object",
			"properties": {
				"title": {
					"description": "The title of the source document.",
					"examples": [
						"Ironsworn Rulebook",
						"Ironsworn Assets Master Set",
						"Ironsworn: Delve",
						"Ironsworn: Starforged Rulebook",
						"Ironsworn: Starforged Assets",
						"Sundered Isles"
					],
					"type": "string"
				},
				"page": { "minimum": 1, "title": "Page number", "type": "integer" },
				"authors": {
					"minItems": 1,
					"type": "array",
					"items": {
						"examples": [{ "name": "Shawn Tomkin" }],
						"type": "object",
						"properties": {
							"name": { "examples": ["Shawn Tomkin"], "type": "string" },
							"email": {
								"format": "email",
								"description": "An optional email contact for the author",
								"type": "string"
							}
						},
						"required": ["name"]
					}
				},
				"date": {
					"format": "date",
					"description": "The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.",
					"type": "string"
				},
				"url": {
					"format": "uri",
					"description": "An absolute URL where the source document is available.",
					"examples": ["https://ironswornrpg.com"],
					"type": "string"
				},
				"license": {
					"format": "uri",
					"description": "An absolute URL pointing to the location where this element's license can be found.",
					"examples": [
						"https://creativecommons.org/licenses/by/4.0",
						"https://creativecommons.org/licenses/by-nc-sa/4.0"
					],
					"type": "string"
				}
			},
			"required": ["title", "authors", "date", "url", "license"]
		},
		"SourceStub": {
			"description": "A source data stub that inherits data from ancestor elements during post-processing. To prevent inheritance, use the regular `source` property instead.",
			"$id": "#/$defs/SourceStub",
			"type": "object",
			"properties": {
				"title": {
					"description": "The title of the source document.",
					"examples": [
						"Ironsworn Rulebook",
						"Ironsworn Assets Master Set",
						"Ironsworn: Delve",
						"Ironsworn: Starforged Rulebook",
						"Ironsworn: Starforged Assets",
						"Sundered Isles"
					],
					"type": "string"
				},
				"page": { "minimum": 1, "title": "Page number", "type": "integer" },
				"authors": {
					"minItems": 1,
					"type": "array",
					"items": {
						"examples": [{ "name": "Shawn Tomkin" }],
						"type": "object",
						"properties": {
							"name": { "examples": ["Shawn Tomkin"], "type": "string" },
							"email": {
								"format": "email",
								"description": "An optional email contact for the author",
								"type": "string"
							}
						},
						"required": ["name"]
					}
				},
				"date": {
					"format": "date",
					"description": "The date of the source documents's last update, formatted YYYY-MM-DD. Required because it's used to determine whether the data needs updating.",
					"type": "string"
				},
				"url": {
					"format": "uri",
					"description": "An absolute URL where the source document is available.",
					"examples": ["https://ironswornrpg.com"],
					"type": "string"
				},
				"license": {
					"format": "uri",
					"description": "An absolute URL pointing to the location where this element's license can be found.",
					"examples": [
						"https://creativecommons.org/licenses/by/4.0",
						"https://creativecommons.org/licenses/by-nc-sa/4.0"
					],
					"type": "string"
				}
			}
		}
	},
	"type": "object",
	"patternProperties": {
		"^[a-z0-9_]{3,}$": {
			"$id": "#/$defs/SourcebookClassic",
			"type": "object",
			"properties": {
				"ruleset": { "const": "classic", "type": "string" },
				"source": { "$ref": "#/$defs/Source" },
				"oracles": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/OracleCollection" }
					}
				},
				"moves": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/MoveCategory" }
					}
				},
				"assets": {
					"type": "object",
					"patternProperties": { "^[a-z_]+$": { "$ref": "#/$defs/AssetType" } }
				},
				"regions": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/RegionEntry" }
					}
				},
				"encounters": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/EncounterCollectionClassic" }
					}
				},
				"rarities": {
					"type": "object",
					"patternProperties": { "^[a-z_]+$": { "$ref": "#/$defs/Rarity" } }
				},
				"delve_sites": {
					"type": "object",
					"patternProperties": { "^[a-z_]+$": { "$ref": "#/$defs/DelveSite" } }
				},
				"site_themes": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/DelveSiteTheme" }
					}
				},
				"site_domains": {
					"type": "object",
					"patternProperties": {
						"^[a-z_]+$": { "$ref": "#/$defs/DelveSiteDomain" }
					}
				},
				"world_truths": {
					"type": "object",
					"patternProperties": { "^[a-z_]+$": { "$ref": "#/$defs/WorldTruth" } }
				}
			},
			"required": ["ruleset", "source"]
		}
	}
}
