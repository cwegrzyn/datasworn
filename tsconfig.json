{
	"$schema": "http://json.schemastore.org/tsconfig",
	"extends": "ts-node/node16/tsconfig.json",
	"include": ["src/**/*.ts"],
	"exclude": ["src/**/*.d.ts", "dist", "src/**/*.yaml", "src/_schema-ts-old"],
	"esm": true,
	"ts-node": {
		// It is faster to skip typechecking.
		// Remove if you want ts-node to do typechecking.
		"transpileOnly": true,
		"files": true,
		"require": ["tsconfig-paths/register"],
		"esm": true,
		"swc": true,
		"experimentalSpecifierResolution": "node",
		"preferTsExts": true,
		"compilerOptions": {
			// compilerOptions specified here will override those declared below,
			// but *only* in ts-node.  Useful if you want ts-node and tsc to use
			// different options with a single tsconfig.json.
			"esModuleInterop": true,
			"moduleResolution": "nodenext"
		}
	},
	"compilerOptions": {
		"experimentalDecorators": true,
		// "emitDecoratorMetadata": true,
		"sourceMap": true,
		"rootDir": "src",
		"outDir": "dist",
		"baseUrl": ".",
		"paths": {
			"@df-json-schema": [
				"src/json-schema/index.ts",
				"dist/json-schema/index.js"
			],
			"@df-json-schema/*": ["src/json-schema/*.ts", "dist/json-schema/*.js"],
			"@base-types": ["src/base-types/index.ts"],
			"@base-types/*": ["src/base-types/*.ts"]
		},
		"lib": ["es2020", "es2021", "esnext"],
		"target": "ES2020",
		"strictNullChecks": true,
		"preserveConstEnums": true,
		"removeComments": false,
		"moduleResolution": "nodenext",
		"module": "NodeNext",
		"resolveJsonModule": true,
		"allowUnreachableCode": false,
		"declaration": false, // uses declarations generated by dataforged-tools instead
		"forceConsistentCasingInFileNames": true,
		"noImplicitAny": true,
		"skipLibCheck": true,
		"strict": true,
		"typeRoots": ["types", "node_modules/@types"]
	}
}
