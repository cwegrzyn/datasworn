{
	"$schema": "http://json.schemastore.org/tsconfig",
	// "extends": "ts-node/node16/tsconfig.json",
	"include": ["./src"],
	"exclude": [
		"./src/adapter",
		"./src/data-legacy",
		"./src/extras",
		"./src/templates"
	],
	"compilerOptions": {
		"paths": {
			"Datasworn": [
				"../pkg/nodejs/@datasworn/core/Datasworn.d.ts",
				"./types/Datasworn.d.ts",
				"./types/Datasworn.js"
			],
			"DataswornSource": [
				"../pkg/nodejs/@datasworn/core/DataswornSource.d.ts",
				"./types/DataswornSource.d.ts",
				"./types/DataswornSource.js"
			]
		},
		"outDir": "dist",
		"rootDir": "src",
		"baseUrl": "src",
		"target": "ES2018",
		"lib": ["ES2020", "ES2021", "ES2022"],
		"moduleResolution": "NodeNext",
		"module": "NodeNext",
		"esModuleInterop": true,
		"experimentalDecorators": true,
		"emitDecoratorMetadata": true,
		"resolveJsonModule": true,
		"sourceMap": true,
		"strictNullChecks": true,
		"preserveConstEnums": true,
		"removeComments": false,
		"allowUnreachableCode": false,
		"declaration": false, // uses declarations generated by datasworn-tools instead
		"forceConsistentCasingInFileNames": true,
		"noImplicitAny": true,
		"skipLibCheck": true,
		"strict": true,
		// "types": ["./src/types/index.d.ts"],
		"typeRoots": ["./src/types", "./node_modules/@types"]
	},
	"ts-node": {
		// It is faster to skip typechecking.
		// Remove if you want ts-node to do typechecking.
		"transpileOnly": true,
		"files": true,
		"require": ["ts-node/register", "tsconfig-paths/register"],
		"esm": true,
		"swc": true,
		"experimentalSpecifierResolution": "node",
		"preferTsExts": true,
		"compilerOptions": {
			// compilerOptions specified here will override those declared below,
			// but *only* in ts-node.  Useful if you want ts-node and tsc to use
			// different options with a single tsconfig.json.
			"esModuleInterop": true,
			"moduleResolution": "bundler"
		}
	}
}
